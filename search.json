[{"path":"/articles/MBNMAtime.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"vignette demonstrates use MBNMAtime perform meta-analysis studies multiple follow-measurements order account time-course relationships within single multiple treatment comparisons. can performed conducting Model-Based (Network) Meta-Analysis (MBNMA) pool relative treatment effects. MBNMA models therefore estimate treatment effects time (e.g. days, weeks, months). Including available follow-measurements within study makes use available evidence way maintains connectivity treatments explains response treatment changes time, thus accounting heterogeneity inconsistency may present “lumping” together different time points standard Network Meta-Analysis (NMA). models analyses implemented Bayesian framework, following extension standard NMA methodology presented (Lu Ades 2004) run JAGS (version 4.3.0 later required) (JAGS Computer Program 2017). full details time-course MBNMA methodology see Pedder et al. (2019), simulation study exploring statistical properties method reported Pedder et al. (2020). package developed alongside MBNMAdose, package allows users perform dose-response MBNMA allow modelling dose-response relationships different agents within network. However, loaded R time number functions shared names perform similar tasks yet specific dealing either time-course dose-response data. Within vignette, models evaluated, run fewer iterations necessary achieve convergence produce valid results practice. done speed computation rendering vignette.","code":""},{"path":"/articles/MBNMAtime.html","id":"workflow-within-the-package","dir":"Articles","previous_headings":"Introduction","what":"Workflow within the package","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Functions within MBNMAtime follow clear pattern use: Load data correct format using mb.network() Specify suitable time-course function analyse data using mb.run() Test consistency using functions like mb.nodesplit() Examine model results using forest plots treatment rankings Use model predict responses estimate treatment effects specific time-points using predict() stages number informative graphs can generated help understand data make decisions regarding model fitting.","code":""},{"path":[]},{"path":"/articles/MBNMAtime.html","id":"pain-relief-in-osteoarthritis","dir":"Articles","previous_headings":"Datasets Included in the Package","what":"Pain relief in osteoarthritis","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"osteopain systematic review treatments pain osteoarthritis, used previously Pedder et al. (2019). outcome pain measured continuous scale, aggregate data responses correspond mean WOMAC pain score different follow-times. dataset includes 30 Randomised-Controlled Trials (RCTs), comparing 29 different treatments (including placebo). osteopain data frame long format (one row per time point, arm study), variables studyID, time, y, se, treatment arm.","code":""},{"path":"/articles/MBNMAtime.html","id":"alogliptin-for-lowering-blood-glucose-concentration-in-type-ii-diabetes","dir":"Articles","previous_headings":"Datasets Included in the Package","what":"Alogliptin for lowering blood glucose concentration in type II diabetes","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"alog_pcfb systematic review Randomised-Controlled Trials (RCTs) comparing different doses alogliptin placebo (Langford et al. 2016). systematic review simply performed intended provide data illustrate statistical methodology rather clinical inference. Alogliptin treatment aimed reducing blood glucose concentration type II diabetes. outcome continuous, aggregate data responses correspond mean change HbA1c baseline follow-studies least 12 weeks follow-. dataset includes 14 Randomised-Controlled Trials (RCTs), comparing 5 different doses alogliptin placebo (6 different treatments total). alog_pcfb data frame long format (one row per time point, arm study), variables studyID, clinicaltrialGov_ID, agent, dose, treatment, time, y, se, N.","code":""},{"path":"/articles/MBNMAtime.html","id":"tiotropium-aclidinium-and-placebo-for-maintenance-treatment-of-moderate-to-severe-chronic-obstructive-pulmonary-disease","dir":"Articles","previous_headings":"Datasets Included in the Package","what":"Tiotropium, Aclidinium and Placebo for maintenance treatment of moderate to severe chronic obstructive pulmonary disease","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"dataset systematic review Randomised-Controlled Trials (RCTs) maintenance treatment moderate severe chronic obstructive pulmonary disease (COPD) (Karabis et al. 2013). Data extracted (Tallarita, De lorio, Baio 2019). SEs imputed three studies, number patients randomised imputed one study (LAS 39) missing, using median standard deviation calculated studies dataset. outcome trough Forced Expiratory Volume 1 second (FEV1), measured litres reported study arm mean change baseline follow-. dataset includes 13 RCTs, comparing 2 treatments (Tiotropium Aclidinium) placebo. copd data frame long format (one row per observation, arm study), variables studyID, time, y, se, treatment, n.","code":""},{"path":"/articles/MBNMAtime.html","id":"body-weight-reduction-in-obesity-patients","dir":"Articles","previous_headings":"Datasets Included in the Package","what":"Body weight reduction in obesity patients","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"obesityBW_CFB systematic review pharmacological treatments obesity. outcome measured change baseline body weight (kg) different follow-times. 35 RCTs included investigate 26 different treatments (16 agents/agent combinations compared different doses). obesityBW_CFB dataset long format (one row per time point, arm study), variables studyID, time, y, se, N, treatment, arm, treatname, agent class. class class particular agent (e.g. Lipase inhibitor)","code":""},{"path":"/articles/MBNMAtime.html","id":"serum-uric-acid-concentration-in-gout","dir":"Articles","previous_headings":"Datasets Included in the Package","what":"Serum uric acid concentration in gout","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"goutSUA_CFB systematic review interventions lowering Serum Uric Acid (SUA) concentration patients gout [published previously]. outcome continuous, aggregate data responses correspond mean change baseline SUA mg/dL different follow-times. dataset includes 28 RCTs, comparing 41 treatments (8 agents compared different doses). goutSUA_CFB data frame long format (one row per arm study), variables studyID, time, y, se, treatment, arm, class treatname.","code":""},{"path":"/articles/MBNMAtime.html","id":"inspecting-the-data","dir":"Articles","previous_headings":"","what":"Inspecting the data","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"embarking analysis, first step look raw data. Two features (network connectivity time-course relationship) particularly important MBNMA. investigate must first get dataset right format package. can using mb.network(). requires specifying desired treatment use network reference treatment, though one automatically specified given. takes dataset columns: studyID Study identifiers time Numeric data indicating continuous follow-times (e.g. days, weeks, months) y Numeric data indicating mean response given observation se Numeric data indicating standard error given observation treatment Treatment identifiers (can numeric, factor character) class optional column indicating particular class may shared several treatments. N optional column indicating number participants used calculate response given observation. Additional columns can included dataset. simply added mb.network object, though affect classification data. mb.network performs following checks data: dataset required column names missing values standard errors (SE) positive Observations made time points arms study (.e. data balanced) Class labels consistent within treatment Studies least two arms Unless otherwise specified, mb.network() automatically determine whether study dataset reported change baseline absolute - studies include measurement time=0 assumed report absolute values, whilst measurement time=0 assumed change baseline. can also explicitly specified user including logical vector argument cfb mb.network() - TRUE indicates study reports change baseline, FALSE indicates reports absolute values. Finally, mb.network() converts data object class(\"mb.network\"), contains indices study arms follow-measurements, generates numeric values treatments classes. convention, treatments numbered alphabetically, though original data treatments provided factor factor codes used. contains necessary information subsequent MBNMAtime functions.","code":"# Using the pain dataset network.pain <- mb.network(osteopain, reference = \"Pl_0\") #> Studies reporting change from baseline automatically identified from the data print(network.pain) #> description : #> [1] \"Network\" #>  #> data.ab : #>             studyID time treatment narm arm     y        se     treatname #> 1 Gottesdiener 2002    0         1    6   1 7.062 0.2221675     Placebo_0 #> 2 Gottesdiener 2002    0         6    6   2 7.009 0.1605568 Etoricoxib_10 #> 3 Gottesdiener 2002    0         7    6   3 6.756 0.1696070 Etoricoxib_30 #> 4 Gottesdiener 2002    0         8    6   4 6.873 0.1584104  Etoricoxib_5 #> 5 Gottesdiener 2002    0         9    6   5 6.686 0.1619320 Etoricoxib_60 #> 6 Gottesdiener 2002    0        10    6   6 6.854 0.1620282 Etoricoxib_90 #>   fupcount fups #> 1        1    5 #> 2        1    5 #> 3        1    5 #> 4        1    5 #> 5        1    5 #> 6        1    5 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 411 rows ] #>  #> studyID : #>  [1] \"Gottesdiener 2002\" \"Schnitzer 2005_2\"  \"Bensen 1999\"       #>  [4] \"DeLemos 2011\"      \"Gana 2006\"         \"Kivitz 2001\"       #>  [7] \"Kivitz 2002\"       \"Fishman 2007\"      \"Fleischmann 2005\"  #> [10] \"Lehmann 2005\"      \"Schnitzer 2010\"    \"Sheldon 2005\"      #> [13] \"Tannenbaum 2004\"   \"Baerwald 2010\"     \"Bingham 2007a\"     #> [16] \"Bingham 2007b\"     \"Birbara 2006_1\"    \"Birbara 2006_2\"    #> [19] \"Enrich 1999\"       \"Leung 2002\"        \"Schnitzer 2011LUM\" #> [22] \"Sowers 2005\"       \"Chappell 2009\"     \"Chappell 2011\"     #> [25] \"Clegg 2006\"        \"Markenson 2005\"    \"McKenna 2001\"      #> [28] \"Puopolo 2007\"      \"Sawitzke 2010\"     \"Williams 2001\"     #>  #> cfb : #>  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> [25] FALSE FALSE FALSE FALSE FALSE FALSE #>  #> treatments : #>  [1] \"Pl_0\"    \"Ce_100\"  \"Ce_200\"  \"Ce_400\"  \"Du_90\"   \"Et_10\"   \"Et_30\"   #>  [8] \"Et_5\"    \"Et_60\"   \"Et_90\"   \"Lu_100\"  \"Lu_200\"  \"Lu_400\"  \"Lu_NA\"   #> [15] \"Na_1000\" \"Na_1500\" \"Na_250\"  \"Na_750\"  \"Ox_44\"   \"Ro_12\"   \"Ro_125\"  #> [22] \"Ro_25\"   \"Tr_100\"  \"Tr_200\"  \"Tr_300\"  \"Tr_400\"  \"Va_10\"   \"Va_20\"   #> [29] \"Va_5\""},{"path":"/articles/MBNMAtime.html","id":"network-connectivity","dir":"Articles","previous_headings":"Inspecting the data","what":"Network connectivity","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Looking evidence network connected identifying studies compare treatments helps understand treatment effects can estimated information helping inform estimates. network plot can generated shows treatments compared head--head trials. Typically thickness connecting lines (“edges”) proportional number studies make particular comparison size treatment nodes (“vertices”) proportional total number patients network randomised given treatment (provided N included variable original dataset mb.network()). MBNMAtime plots generated using igraph, can plotted calling plot(). generated plots objects class(\"igraph\") meaning , addition options specified plot(), various igraph functions can used make detailed edits .  Within network plots, treatments automatically aligned circle (default) can tidied shifting label distance away nodes.  command returns warning stating treatments connected network reference treatment pathway head--head evidence. nodes coloured white represent treatments. means possible estimate relative effects treatments versus network reference treatment (treatments connected ). Several options exist allow inclusion treatments analysis discuss detail later, one approach assume shared effect among treatments within class/agent. can generate network plot class level examine closely, can see network connected class level.  also possible plot network treatment level colour treatments class belong .","code":"# Prepare data using the alogliptin dataset network.alog <- mb.network(alog_pcfb, reference = \"placebo\") #> Studies reporting change from baseline automatically identified from the data  # Plot network plot(network.alog) # Draw network plot in a star layout using the gout dataset network.gout <- mb.network(goutSUA_CFB, reference = \"Plac\") plot(network.gout, layout=igraph::as_star(), label.distance = 5) #> Studies reporting change from baseline automatically identified from the data plot(network.gout, level = \"class\", remove.loops = TRUE, label.distance = 5) plot(network.gout, level = \"treatment\", v.color = \"class\", label.distance = 5)"},{"path":"/articles/MBNMAtime.html","id":"examining-the-time-course-relationship","dir":"Articles","previous_headings":"Inspecting the data","what":"Examining the time-course relationship","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"order consider functional forms may appropriate modeling time-course relationship, important look responses arm plotted time. can easily done using timeplot() function object class(\"mb.network\")  mean response treatments shows rapid reduction pain score followed levelling 2-5 weeks, Integrated Two-component Prediction (ITP) time-course function might reasonable fit dataset. complex alternatives Emax models (without Hill parameter), fractional polynomials spline function. Responses can also plotted grouped class rather treatment, relative effects treatment/class can plotted instead absolute treatment responses. Since MBNMA framework models time-course relative effects (Pedder et al. 2019) can fact make interpretation plots easier regards identifying best-fitting time-course function.  Many profiles appear quite different within class, suggest modelling class effects may inappropriate dataset. Another approach investigate time-course relationship perform several standard “lumped” NMAs different time “bins”, time periods within assuming treatment effects constant time. means , purposes plot, rather considering time continuous variable chunked segments. can within single plot using binplot() specifying boundaries multiple time bins. Separate NMAs performed within time bin data points studies fall within time bin (single follow-time taken study avoid double counting). \"fixed\" \"random\" effects can specified NMA. Note wider time bin boundaries specified user, larger potential range included follow-times can introduce heterogeneity inconsistency.  Results plotted versus network reference plotted relevant scale depending function specified link (case \"identity\" - .e. mean differences versus Pl_0 shown). time bin window marked plot vertical dashed lines. NMA estimates within time bin plotted horizontal solid black line (posterior median) shaded region indicating 95% credible interval (prediction intervals can instead plotted). width shaded regions equal range study time-points included NMA performed within time-bin, may therefore narrow time bin specified binplot() command due follow-times data available included studies. example, time bin 10-15 weeks, studies dataset included time bin follow-ups 12-13 weeks. plot can see , whilst clearly rapid onset treatment efficacy within first 5 weeks, indicated treatment effect <0 treatments. treatment effect persists remains less constant treatments within later time bins, though others (e.g. Ce_200, Ro_25, Na_1000, Na_1500, Va_10) appears loss efficacy later time bins, suggesting complex time-course function may required fully capture relationship.","code":"# Prepare data using the pain dataset network.pain <- mb.network(osteopain, reference=\"Pl_0\") #> Studies reporting change from baseline automatically identified from the data  # Draw plot of raw study responses over time timeplot(network.pain) # Draw plot of within-study relative effects over time grouped by class network.gout <- mb.network(goutSUA_CFBcomb) timeplot(network.gout, level=\"class\", plotby=\"rel\") # Plot results for NMAs performed between 0-5, 5-10, 10-15 and 15-26 weeks binplot(network.pain, overlay.nma=c(0,5,10,15,26)) #> Running overlay.nma for time=0 and time=5 #> module glm loaded #> Running overlay.nma for time=5 and time=10 #> Running overlay.nma for time=10 and time=15 #> Running overlay.nma for time=15 and time=26"},{"path":"/articles/MBNMAtime.html","id":"analysis-using-mb-run","dir":"Articles","previous_headings":"","what":"Analysis using mb.run()","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"MBNMA models fitted using mb.run() model treatment effects time (e.g. days, weeks, months). can just easily performed datasets many different treatments (network meta-analysis) can datasets comparing two treatments (pairwise meta-analysis) - syntax . object class(\"mb.network\") must provided data mb.run(). key arguments within mb.run() involve specifying functional form used model time-course, time-course parameters comprise functional form.","code":""},{"path":"/articles/MBNMAtime.html","id":"time-course-functions","dir":"Articles","previous_headings":"Analysis using mb.run()","what":"Time-course functions","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"number different time-course functions can fitted within MBNMAtime specific forms time-course parameters defined arguments within functions, allows wide variety parameterizations time-course shapes. details check help files function (e.g. ?tloglin()). functions, used inputs fun argument mb.run(). tloglin() - Log-linear function titp() - Integrated Two-Component Prediction (ITP) function temax() - Emax function tpoly() - Polynomial function (e.g. linear, quadratic) tfpoly() - Fractional polynomial function, proposed previously time-course NMA Jansen (2015). tspline() - Spline functions (includes B-splines, restricted cubic splines, natural splines piecewise linear splines) tuser() - time-course function can explicitly defined user Time-course parameters within time-course functions defined two arguments: pool used define approach used pooling given time-course parameter can either : \"rel\" indicates relative effects (mean differences) pooled time-course parameter. preserves randomisation within included studies, likely vary less studies (due effect modification), allow testing consistency direct indirect evidence. Pooling follows general approach Network Meta-Analysis proposed Lu Ades (2004). \"abs\" indicates study arms pooled across whole network time-course parameter independently assigned treatment. implies using single absolute value across network time-course parameter, may therefore making strong assumptions similarity studies. method used define model used meta-analysis given time-course parameter can take either : \"common\" implies studies estimate true effect (sometimes called “fixed effect” meta-analysis) \"random\" implies studies estimate separate true effect, true effects vary randomly around true mean effect. approach allows modelling -study heterogeneity. Specifying pooling relative effects time-course parameters imply performing contrast-based synthesis, whereas specifying pooling absolute effects imply performing arm-based synthesis. substantial discussion literature regarding strengths limitations approaches (Dias Ades 2016; Hong et al. 2016; Karahalios et al. 2017). Additional arguments within function may also used specify degree (e.g. polynomials) number knots knot placement splines.","code":""},{"path":"/articles/MBNMAtime.html","id":"choosing-a-time-course-function","dir":"Articles","previous_headings":"Analysis using mb.run() > Time-course functions","what":"Choosing a time-course function","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Choice time-course function involves combination data-driven, statistical information (plots, model fit statistics) clinical/biological plausibility. timeplot() binplot() functions can used observe data differs different time-points. can help understand, example, whether data monotonically increases decreases, whether turning point multiple turning-points within time-course, follow-time(s) might occur. can also guided clinical/biological knowledge/expectation shape time-course outside range time-points data available. However, several potential candidate time-course functions identified, selection (specific specification time-course parameters terms absolute relative effects) best achieved using model fit statistics (e.g. Deviance Information Criterion (DIC), residual deviance).","code":""},{"path":"/articles/MBNMAtime.html","id":"output","dir":"Articles","previous_headings":"Analysis using mb.run()","what":"Output","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"mb.run() returns object class(c(\"mbnma\", \"rjags\")). summary() provides summary estimates posterior densities different parameters model, explanation regarding way model defined. Estimates automatically reported parameters interest depending model specification (unless otherwise specified parameters..save). Nodes automatically monitored (present model) following interpretation:","code":""},{"path":"/articles/MBNMAtime.html","id":"parameters-modelled-using-relative-effects","dir":"Articles","previous_headings":"Analysis using mb.run() > Output","what":"Parameters modelled using relative effects","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"pooling relative (e.g. pool.1=\"rel\") given parameter named parameter (e.g. emax) numbered d parameter (e.g. d.1) corresponds pooled relative effect (mean difference) given treatment compared network reference treatment time-course parameter. sd. followed named (e.g. emax, beta.1) -study SD (heterogeneity) relative effects, reported pooling time-course parameter relative (e.g. pool.1=\"rel\") method synthesis random (e.g. method.1=\"random). class effects modelled, parameters classes represented upper case name time-course parameter correspond . example class.effect=list(emax=\"random\"), relative class effects represented EMAX. SD class effect (e.g. sd.EMAX, sd.BETA.1) SD treatments within class time-course parameter correspond .","code":""},{"path":"/articles/MBNMAtime.html","id":"parameters-modelled-using-absolute-effects","dir":"Articles","previous_headings":"Analysis using mb.run() > Output","what":"Parameters modelled using absolute effects","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"pooling absolute (e.g. pool.1=\"abs\") given parameter named parameter (e.g. emax) numbered beta parameter (e.g. beta.1) corresponds estimated absolute effect time-course parameter. absolute time-course parameter corresponding method common (e.g. method.1=\"common\") parameter corresponds single common parameter estimated across studies treatments. corresponding method random (e.g. method.1=\"random\") parameter mean effect around study-level absolute effects vary SD corresponding sd. followed named parameter (e.g. sd.emax, sd.beta.1).","code":""},{"path":"/articles/MBNMAtime.html","id":"other-model-parameters","dir":"Articles","previous_headings":"Analysis using mb.run() > Output","what":"Other model parameters","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"rho correlation coefficient correlation time-points. interpretation differ depending covariance structure specified covar. totresdev residual deviance model deviance deviance model. Model fit statistics pD (effective number parameters) DIC (Deviance Information Criterion) also reported, explanation calculated.","code":""},{"path":"/articles/MBNMAtime.html","id":"examples","dir":"Articles","previous_headings":"Analysis using mb.run() > Output","what":"Examples","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"example MBNMA alogliptin dataset using linear time-course function common treatment effects pool relative effects assumes consistency direct indirect evidence can performed follows: model, d.1 parameters correspond 1st polynomial coefficient, therefore linear gradient response time treatment versus placebo - .e. mean difference change efficacy treatment versus placebo. However, note residual deviance model high, suggesting (might expect) linear time-course function poor fit. may want fit complex time-course function two time-course parameters, Emax function, yet limitations data might require make assumption one parameters vary treatment. can specify setting pool equal \"abs\" parameters choose. case, parameters named following Emax function specification. emax corresponds maximum effect treatment versus placebo (interpretable mean difference versus placebo), whereas et50 log time 50% maximum response achieved, across treatments network. assumes conditional constancy absolute effects time-course parameter, typically strong assumption. However, limited data inform parameter (e.g. earlier time-points) assumption might necessary, caveat interpolation response time-points informed parameter may susceptible bias. exploration degree data required reliable estimation time-course parameters given Pedder et al. (2020).","code":"# Run a linear time-course MBNMA mbnma <- mb.run(network.alog, fun=tpoly(degree=1, pool.1=\"rel\", method.1=\"common\")) #> Change from version 0.2.2 onwards: corparam=FALSE as default summary(mbnma) #> ======================================== #> Time-course MBNMA #> ======================================== #>  #> Time-course function: poly (degree = 1) #> Data modelled without intercept (change from baseline data assumed) #>  #> beta.1 parameter #> Pooling: relative effects #> Method: common treatment effects #>  #> |Treatment |Parameter |  Median|    2.5%|   97.5%| #> |:---------|:---------|-------:|-------:|-------:| #> |placebo   |d.1[1]    |  0.0000|  0.0000|  0.0000| #> |alog_6.25 |d.1[2]    | -0.0347| -0.0377| -0.0318| #> |alog_12.5 |d.1[3]    | -0.0422| -0.0440| -0.0404| #> |alog_25   |d.1[4]    | -0.0449| -0.0467| -0.0432| #> |alog_50   |d.1[5]    | -0.0511| -0.0538| -0.0483| #> |alog_100  |d.1[6]    | -0.0482| -0.0661| -0.0291| #>  #>  #>  #> Correlation between time points #> Covariance structure: varadj  #> Rho assigned a numeric value: 0 #>  #> #### Model Fit Statistics #### #>  #> Effective number of parameters: #> pD (pV) calculated using the rule, pD = var(deviance)/2 = 19 #> Deviance = 4502 #> Residual deviance = 5449 #> Deviance Information Criterion (DIC) = 4521 # Run an Emax time-course MBNMA with two parameters mbnma <- mb.run(network.alog, fun=temax(   pool.emax = \"rel\", method.emax=\"common\",   pool.et50 = \"abs\", method.et50=\"common\" )) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default summary(mbnma) #> ======================================== #> Time-course MBNMA #> ======================================== #>  #> Time-course function: emax #> Data modelled without intercept (change from baseline data assumed) #>  #> emax parameter #> Pooling: relative effects #> Method: common treatment effects #>  #> |Treatment |Parameter |  Median|    2.5%|   97.5%| #> |:---------|:---------|-------:|-------:|-------:| #> |placebo   |emax[1]   |  0.0000|  0.0000|  0.0000| #> |alog_6.25 |emax[2]   | -0.5881| -0.6571| -0.5220| #> |alog_12.5 |emax[3]   | -0.7764| -0.8194| -0.7357| #> |alog_25   |emax[4]   | -0.8460| -0.8891| -0.8028| #> |alog_50   |emax[5]   | -0.9679| -1.0370| -0.9002| #> |alog_100  |emax[6]   | -0.8363| -1.1028| -0.5720| #>  #>  #> et50 parameter #> Pooling: absolute effects #> Method: common treatment effects #>  #> |Treatment |Parameter | Median|  2.5%|  97.5%| #> |:---------|:---------|------:|-----:|------:| #> |placebo   |et50      | 5.1992| 4.817| 5.6325| #> |alog_6.25 |et50      | 5.1992| 4.817| 5.6325| #> |alog_12.5 |et50      | 5.1992| 4.817| 5.6325| #> |alog_25   |et50      | 5.1992| 4.817| 5.6325| #> |alog_50   |et50      | 5.1992| 4.817| 5.6325| #> |alog_100  |et50      | 5.1992| 4.817| 5.6325| #>  #>  #>  #> Correlation between time points #> Covariance structure: varadj  #> Rho assigned a numeric value: 0 #>  #> #### Model Fit Statistics #### #>  #> Effective number of parameters: #> pD (pV) calculated using the rule, pD = var(deviance)/2 = 20 #> Deviance = 88 #> Residual deviance = 1035 #> Deviance Information Criterion (DIC) = 108"},{"path":[]},{"path":"/articles/MBNMAtime.html","id":"correlation-between-time-points","dir":"Articles","previous_headings":"Analysis using mb.run() > Additional model specification with mb.run()","what":"Correlation between time points","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Within-study correlation time points can easily modeled using mb.run(), though requires additional considerations. simplest approach incorporate correlation using variance adjustment (Jansen, Vieira, Cope 2015). avoids need use multivariate normal likelihood (slow run), assumes common correlation neighbouring time-points. achieved using argument covar=\"varadj\", default mb.run(). two alternative covariance structures can modelled, though require fitting multivariate normal likelihood therefore take longer run. covar=\"CS\" specifies fitting Compound Symmetry covariance structure, whilst covar=\"AR1\" specifies fitting autoregressive AR1 covariance structure multivariate normal likelihood used modelling correlation multiple time points within study (Kincaid 2005). However, addition , ’s also necessary specify value rho, can assigned one two ways: Given string representing JAGS prior distribution (Plummer 2017), indicates correlation estimated data. example, specify prior correlation time-points 0 1 equal probability set rho=\"dunif(0,1)\". Given single numeric value, indicates correlation fixed value. example, value estimated externally another study using Individual Participant Data. also used run deterministic sensitivity analysis using different fixed values rho. important note covariance matrix must positive semi-definite. may mean order satisfy requirement particular covariance matrix structures, values rho can take limited. rho must always bounded -1 1, even within range negative values rho can result non positive matrix, can lead error evaluation multivariate likelihood. , may necessary restrict prior distribution.","code":"# Using the COPD dataset network.copd <- mb.network(copd)  # Run an log-linear time-course MBNMA  # that accounts for correlation between time points using variance adjustment mbnma <- mb.run(network.copd,                  fun=tloglin(pool.rate=\"rel\", method.rate=\"random\"),                 rho=\"dunif(0,1)\", covar=\"varadj\")"},{"path":"/articles/MBNMAtime.html","id":"link-function","dir":"Articles","previous_headings":"Analysis using mb.run()","what":"Link function","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Time-course MBNMA can used continuous outcomes can summarised continuous outcomes (e.g. binary data can converted log-odds inclusion model). Typically means users analyse data using identity link function, default given link argument mb.run()m assumes additive treatment effect (e.g. mean difference). However, specifying link=\"log\" user can model log link therefore assume multiplicative treatment effect. continuous data models treatment effect Ratio Means (RoM) (Friedrich, Adhikari, Beyene 2011). also provides advantage treatment effect scale independent (.e. studies measuring outcome using different measurement scales can analysed simultaneously). However, within-study treatment effects must direction (either positive negative), change baseline measures must adjusted also expressed RoMs (log(follow-) - log(baseline)) avoid combining additive multiplicative assumptions within analysis. alternative approach modeling measurement scale-independent treatment effect whilst still assuming additive treatment effects perform analysis using Standardised Mean Differences (SMD). Whilst strictly different link function, can specified using link=\"smd\". Currently, MBNMAtime standardises treatment effects using pooled baseline standard deviation (SD) study, limit bias effect treatment might SD. resulting treatment effects reported units SD SMDs. robust approach minimise bias estimation within-study SD use single reference SD standardisation scale included dataset. something MBNMAtime incorporate future. details analysis continuous data include discussion RoM SMD see (Daly et al. 2021).","code":""},{"path":"/articles/MBNMAtime.html","id":"class-effects","dir":"Articles","previous_headings":"Analysis using mb.run()","what":"Class effects","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Shared effects treatments within network can modelled using class effects. requires assuming different treatments sort shared class effect, perhaps due different (yet clinically similar) doses agent different treatments similar mechanism action. One advantage class effects can used connect relative effects treatments network disconnected treatment level, can connected via classes class level. However, important ensure effect clinically justifiable, making assumptions risks introducing heterogeneity/inconsistency. Class effects can applied time-course parameters vary treatment (pool=\"rel\"), class effects modelled separately time-course parameter. mb.run() class effects specified list, element named time-course parameter modelled. class effect time-course parameter can either \"common\", effects treatment within class constrained common class effect, \"random\", effects treatment within class assumed randomly distributed around shared class mean. Mean class effects given output D.2 parameters. can interpreted relative effect class versus Plac (Placebo), 2nd spline coefficient (beta.2). Note number D.2 parameters therefore equal number classes defined dataset.","code":"# Run a B-spline time-course MBNMA with a knot at 0.2 times the max follow-up # Common class effect on beta.2, the 2nd spline coefficient mbnma <- mb.run(network.gout,                  fun=tspline(type=\"bs\", knots=c(0.2),                             pool.1 = \"rel\", method.1=\"common\",                             pool.2=\"rel\", method.2=\"random\"),                 class.effect = list(beta.2=\"common\")) summary(mbnma) #> ======================================== #> Time-course MBNMA #> ======================================== #>  #> Time-course function: B-spline (knots = 0.2; degree = 1) #> Data modelled without intercept (change from baseline data assumed) #>  #> beta.1 parameter #> Pooling: relative effects #> Method: common treatment effects #>  #> |Treatment |Parameter |   Median|     2.5%|    97.5%| #> |:---------|:---------|--------:|--------:|--------:| #> |Plac      |d.1[1]    |   0.0000|   0.0000|   0.0000| #> |Allo_100  |d.1[2]    |  -1.4893|  -2.8884|  -0.0572| #> |Allo_200  |d.1[3]    |  -2.9963|  -3.2469|  -2.7508| #> |Allo_289  |d.1[4]    |  -4.9099|  -5.0890|  -4.7413| #> |Allo_400  |d.1[5]    | -12.7941| -14.3275| -11.1717| #> |Arha_NA   |d.1[6]    |  -6.8196|  -7.5531|  -6.0944| #> |BCX4_140  |d.1[7]    |  -4.5841|  -4.9606|  -4.2150| #> |BCX4_18.5 |d.1[8]    |  -2.4449|  -2.9051|  -2.0104| #> |BCX4_240  |d.1[9]    |  -5.8921|  -6.3371|  -5.4320| #> |BCX4_80   |d.1[10]   |  -3.5977|  -4.0546|  -3.1365| #> |Benz_NA   |d.1[11]   | -15.5639| -16.7355| -14.3344| #> |Febu_140  |d.1[12]   |  -7.2840|  -7.4624|  -7.1067| #> |Febu_210  |d.1[13]   |  -8.8152|  -8.9176|  -8.7147| #> |Febu_25   |d.1[14]   |  -3.8366|  -4.0143|  -3.6730| #> |Febu_72.5 |d.1[15]   |  -6.1696|  -6.3446|  -5.9973| #> |RDEA_100  |d.1[16]   |  -2.3490|  -2.9171|  -1.7995| #> |RDEA_200  |d.1[17]   |  -4.1104|  -4.4505|  -3.7693| #> |RDEA_400  |d.1[18]   |  -5.2365|  -5.5818|  -4.9069| #> |RDEA_600  |d.1[19]   |  -8.0847|  -8.5153|  -7.6601| #>  #>  #> beta.2 parameter #> Pooling: relative effects #> Method: random treatment effects #> Class effects modelled for this parameter #>  #> |Treatment |Parameter |  Median|     2.5%|   97.5%| #> |:---------|:---------|-------:|--------:|-------:| #> |Plac      |d.2[1]    |  0.0000|   0.0000|  0.0000| #> |Allo_100  |d.2[2]    | 17.4612|   4.2966| 30.2461| #> |Allo_200  |d.2[3]    | 17.4612|   4.2966| 30.2461| #> |Allo_289  |d.2[4]    | 17.4612|   4.2966| 30.2461| #> |Allo_400  |d.2[5]    | 17.4612|   4.2966| 30.2461| #> |Arha_NA   |d.2[6]    |  0.9769| -60.5040| 66.5927| #> |BCX4_140  |d.2[7]    | 10.2200|  -2.2658| 22.5257| #> |BCX4_18.5 |d.2[8]    | 10.2200|  -2.2658| 22.5257| #> |BCX4_240  |d.2[9]    | 10.2200|  -2.2658| 22.5257| #> |BCX4_80   |d.2[10]   | 10.2200|  -2.2658| 22.5257| #> |Benz_NA   |d.2[11]   | 18.7686|  -5.7766| 43.2936| #> |Febu_140  |d.2[12]   | 16.3804|   5.0754| 26.6222| #> |Febu_210  |d.2[13]   | 16.3804|   5.0754| 26.6222| #> |Febu_25   |d.2[14]   | 16.3804|   5.0754| 26.6222| #> |Febu_72.5 |d.2[15]   | 16.3804|   5.0754| 26.6222| #> |RDEA_100  |d.2[16]   | 20.4213|   3.8401| 37.0501| #> |RDEA_200  |d.2[17]   | 20.4213|   3.8401| 37.0501| #> |RDEA_400  |d.2[18]   | 20.4213|   3.8401| 37.0501| #> |RDEA_600  |d.2[19]   | 20.4213|   3.8401| 37.0501| #>  #> Between-study SD modelled for this parameter: #>  #> |Parameter |  Median|   2.5%|   97.5%| #> |:---------|-------:|------:|-------:| #> |sd.beta.2 | 11.8872| 9.1769| 15.4818| #>  #>  #> Class Effects #>  #> Class effects for beta.2 #> Common (fixed) class effects #>  #> |Class |Parameter |  Median|     2.5%|   97.5%| #> |:-----|:---------|-------:|--------:|-------:| #> |Plac  |D.2[1]    |  0.0000|   0.0000|  0.0000| #> |Allo  |D.2[2]    | 17.4612|   4.2966| 30.2461| #> |Arha  |D.2[3]    |  0.9769| -60.5040| 66.5927| #> |BCX4  |D.2[4]    | 10.2200|  -2.2658| 22.5257| #> |Benz  |D.2[5]    | 18.7686|  -5.7766| 43.2936| #> |Febu  |D.2[6]    | 16.3804|   5.0754| 26.6222| #> |RDEA  |D.2[7]    | 20.4213|   3.8401| 37.0501| #>  #>  #> Correlation between time points #> Covariance structure: varadj  #> Rho assigned a numeric value: 0 #>  #> #### Model Fit Statistics #### #>  #> Effective number of parameters: #> pD (pV) calculated using the rule, pD = var(deviance)/2 = 83 #> Deviance = 149881 #> Residual deviance = 150575 #> Deviance Information Criterion (DIC) = 149964"},{"path":"/articles/MBNMAtime.html","id":"additional-arguments","dir":"Articles","previous_headings":"Analysis using mb.run()","what":"Additional arguments","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Several additional arguments can given mb.run() require explanation.","code":""},{"path":"/articles/MBNMAtime.html","id":"priors","dir":"Articles","previous_headings":"Analysis using mb.run() > Additional arguments","what":"Priors","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Default vague priors model follows: \\[ \\begin{aligned}   &\\alpha_{} \\sim N(0,10000)\\\\   &\\boldsymbol{\\mu}_{} \\sim N(0,10000)\\\\   &\\boldsymbol{d}_{t} \\sim N(0,10000)\\\\   &beta_{\\phi} \\sim N(0,10000)\\\\   &D_{\\phi,c} \\sim N(0,1000)\\\\   &\\tau_{\\phi} \\sim N(0,400) \\text{  limited  } x \\[0,\\infty]\\\\   &\\tau^D_{\\phi} \\sim N(0,400) \\text{ limited } x \\[0,\\infty]\\\\ \\end{aligned} \\] \\(\\alpha_i\\) response time=0 study \\(\\) \\(\\mu_i\\) vector study reference effects time-course parameter study \\(\\). single time-course parameter modelled using relative effects prior defined \\(\\mu_{} \\sim N(0,10000)\\). \\(\\boldsymbol{d}_{t}\\) vector pooled relative effects treatment \\(t\\) whose length number time-course parameters model. single time-course parameter modelled using relative effects prior defined \\(d_{t} \\sim N(0,10000)\\). \\(\\beta_{\\phi}\\) absolute effect time-course parameter \\(\\phi\\) modelled independently treatment \\(D_{\\phi,c}\\) class relative effect time-course parameter \\(\\phi\\) class \\(c\\) \\(\\tau_{\\phi}\\) -study SD time-course parameter \\(\\phi\\) \\(\\tau^D_{\\phi}\\) within-class SD time-course parameter \\(\\phi\\) Users may wish change , perhaps order use /less informative priors, also default prior distributions models may lead errors compiling/updating models. can likely certain types models. example prior distributions may generate results extreme JAGS compute, time-course parameters powers (e.g. Emax functions Hill parameter power parameters fractional polynomials). model fails compilation/updating (.e. due problem JAGS), mb.run() generate error return list arguments mb.run() used generate model. Within (within model run successfully), priors used model (JAGS syntax) stored within \"model.arg\". way model can first run vague priors rerun different priors, perhaps allow successful computation, perhaps provide informative priors, perhaps run sensitivity analysis different priors. change priors within model, list replacements can provided priors mb.run(). name element name parameter change (without indices) value element JAGS distribution use prior. See JAGS Manual (2017) syntax details regarding specifying distributions. can include censoring truncation desired. priors changed need specified - priors parameters aren’t specified take default values. Note JAGS, normal distributions specified using precision (1/variance) rather SD. example, may wish specify tighter prior -study SD:","code":"mbnma <- mb.run(network.copd,                  fun=tloglin(pool.rate=\"rel\", method.rate=\"random\"),                 priors=list(rate=\"dnorm(0,2) T(0,)\"))"},{"path":"/articles/MBNMAtime.html","id":"pd-effective-number-of-parameters","dir":"Articles","previous_headings":"Analysis using mb.run() > Additional arguments","what":"pD (effective number of parameters)","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"default value pd mb.run() pd=\"pv\", uses rapid approach automatically calculated R2jags package pv = var(deviance)/2. Whilst easy calculate, approximation effective number parameters, may numerically unstable (Gelman et al. 2003). However, shown reliable model comparison time-course MBNMA models simulation study (Pedder et al. 2020). reliable method estimating pd pd=\"pd.kl\", uses Kullback-Leibler divergence (Plummer 2008). reliable default method used R2jags calculating effective number parameters non-linear models. disadvantage approach requires running additional MCMC iterations, can slightly slower calculate. commonly-used approach Bayesian models calculating pD plug-method (pd=\"plugin\") (Spiegelhalter et al. 2002). However, can sometimes result negative non-sensical values due skewed posterior distributions deviance contributions can arise fitting non-linear models. Finally, pD can also calculated using optimism adjustment (pd=\"popt\") allows calculation penalized expected deviance (Plummer 2008). adjustment allows fact data used estimate model used assess parsimony. pd=\"pd.kl\", also requires running additional MCMC iterations.","code":""},{"path":"/articles/MBNMAtime.html","id":"correlation-between-time-course-parameters","dir":"Articles","previous_headings":"Analysis using mb.run() > Additional arguments","what":"Correlation between time-course parameters","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Since MBNMAtime version 0.2.2, mb.run() longer automatically models correlation time-course parameters modeled using relative effects. However, can enabled setting corparam=TRUE). Time-course parameters typically correlated allows information parameter help inform (s). correlation modeled using multivariate normal distribution whose covariance matrix \\(\\Sigma_t\\) modelled using correlation defined parameter rhoparam. previous versions, inverse Wishart prior used, though since considered overly constrain model.","code":""},{"path":"/articles/MBNMAtime.html","id":"arguments-to-be-sent-to-jags","dir":"Articles","previous_headings":"Analysis using mb.run() > Additional arguments","what":"Arguments to be sent to JAGS","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"addition arguments specific mb.run() also possible use arguments sent R2jags::jags(). relate improving performance MCMC simulations JAGS. key arguments may interest : n.chains number Markov chains run (default 3) n.iter total number iterations per MCMC chain n.burnin number iterations discarded ensure iterations saved chains converged n.thin thinning rate ensures results saved 1 every n.thin iterations per chain. can increased reduce autocorrelation MCMC samples","code":""},{"path":"/articles/MBNMAtime.html","id":"model-selection","dir":"Articles","previous_headings":"","what":"Model Selection","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Detailed description model selection based statistical measures Deviance Information Criterion (DIC) residual deviance outside scope vignette. However, following approach model identification selection recommended Pedder et al. (2020), also gives details model fit statistics used comparison: Identify candidate time-course functions based observed data clinical/biological reasoning Compare candidate time-course functions fitted common relative treatment effects time-course parameters candidate time-course functions converge successfully, absolute effects can modeled parameters convergence problematic Compare selected common effects model model(s) random effects different time-course parameters Compare model fitted univariate likelihood one fitted multivariate likelihood Finally validity consistency assumption explored selected final model (see Consistency Testing).","code":""},{"path":"/articles/MBNMAtime.html","id":"mcmc-convergence","dir":"Articles","previous_headings":"","what":"MCMC Convergence","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"MBNMAtime runs Bayesian models JAGS, uses Markov Chain Monte Carlo (MCMC) simulation (JAGS Computer Program 2017). However, validity results reliant MCMC chains converged successfully posterior densities parameters model. highly parameterised models run relatively limited data, often case MBNMA models, convergence can often challenge. Note convergence necessary able compare models evaluate model fit. However, successful convergence imply good model fit. full explanation facilitate check convergence outside scope vignette, simple steps checking convergence. None steps alone ensures convergence successful, interpretation jointly can provide strong evidence . Rhat values close 1 (<1.1 considered acceptable ). shown monitored parameters summary statistics table \"mbnma\" \"nma\" object printed. Trace plots “fuzzy caterpillar” look shows good mixing MCMC chains Density plots show smooth posterior distribution similar across chains Autocorrelation plots show low autocorrelation neighbouring MCMC iterations (.e. low correlation higher lags) HTML document convergence plots can easily generated parameters model simultaneously using mcmcplots::mcmcplot(). Two steps may improve convergence using MBNMAtime. One step run models iterations (can done using n.iter argument mb.run()). can take time MCMC chains converge, particularly non-linear models limited data. important note chains monitored converged - increasing number burn-iterations ensures case (using n.burnin argument mb.run()). Another method improve convergence providing information model via informative priors. detailed review MCMC convergence assessment see Sinharay (2003).","code":""},{"path":[]},{"path":"/articles/MBNMAtime.html","id":"deviance-plots","dir":"Articles","previous_headings":"Post-Estimation","what":"Deviance plots","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"assess well model fits data, can useful look plot contributions data point total deviance residual deviance. can done using devplot(). individual deviance contributions automatically monitored model, might require model run additional iterations. Results can plotted either scatter plot (plot.type=\"scatter\") series boxplots (plot.type=\"box\").  plots can see whilst model fit typically better later time points, fits poorly earlier time points. function appropriately captures time-course shape show reasonably flat shape deviance contributions (.e. contributions similar across time points). saved object, output devplot() contains results individual deviance contributions, can used identify extreme outliers.","code":"# Run a first-order fractional polynomial time-course MBNMA mbnma <- mb.run(network.pain,                  fun=tfpoly(degree=1,                           pool.1=\"rel\", method.1=\"random\",                           method.power1=0.5))  # Plot a box-plot of deviance contributions (the default) devplot(mbnma, n.iter=1000) #> Change from version 0.2.2 onwards: corparam=FALSE as default #> `dev` not monitored in mbnma$parameters.to.save. #> additional iterations will be run in order to obtain results for `dev`"},{"path":"/articles/MBNMAtime.html","id":"fitted-values","dir":"Articles","previous_headings":"Post-Estimation","what":"Fitted values","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Another approach assessing model fit can plot fitted values, using fitplot(). devplot(), may require running additional model iterations monitor theta. Fitted values plotted connecting lines observed values original dataset plotted points. plots can used identify model fits data well different treatments different parts time-course.","code":"# Plot fitted and observed values with treatment labels fitplot(mbnma, n.iter=1000)"},{"path":"/articles/MBNMAtime.html","id":"forest-plots","dir":"Articles","previous_headings":"Post-Estimation","what":"Forest plots","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Forest plots can easily generated MBNMA models using plot() method \"mbnma\" object. default plot separate panel time-course parameter model. Forest plots can generated parameters vary treatment/class.","code":"# Run a quadratic time-course MBNMA using the alogliptin dataset mbnma <- mb.run(network.alog,                  fun=tpoly(degree=2,                           pool.1=\"rel\", method.1=\"random\",                           pool.2=\"rel\", method.2=\"common\"                           ) ) #> Change from version 0.2.2 onwards: corparam=FALSE as default  plot(mbnma)"},{"path":"/articles/MBNMAtime.html","id":"get-relative-calculating-differences-between-treatments-at-a-specified-time-point","dir":"Articles","previous_headings":"Post-Estimation","what":"get.relative(): Calculating differences between treatments at a specified time-point","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Although mb.run() estimates effects different treatments different time-course parameters, necessarily easy draw conclusions , particularly time-course functions less easily interpretable parameters. get.relative() allows users calculate mean differences (log-Ratio Means mb.run(link=\"log\")) treatments specified time-point even subset, even none treatments investigated time-point included RCTs. results reported scale data modeled (.e. depending link function specified mb.run()), rather specific time-course parameters. Within matrices results, mean differences/relative effects shown row-defined treatment versus column-defined treatment.","code":"allres <- get.relative(mbnma, time=20,                        treats = c(\"alog_100\", \"alog_50\", \"placebo\")) print(allres) #> ======================================== #> Treatment comparisons at time = 20 #> ======================================== #>  #>      alog_100        0.89 (0.61, 1.2)    0.86 (-0.52, 2.3)  #> -0.89 (-1.2, -0.61)       alog_50       -0.037 (-1.4, 1.4)  #> -0.86 (-2.3, 0.52)   0.037 (-1.4, 1.4)        placebo"},{"path":"/articles/MBNMAtime.html","id":"rank-ranking","dir":"Articles","previous_headings":"Post-Estimation","what":"rank(): Ranking","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Rankings can calculated different time-course parameters MBNMA models using rank() \"mbnma\" object. parameter monitored MBNMA model varies treatment/class can ranked. vector assigned params. lower_better indicates whether negative scores ranked “better” (TRUE) “worse” (FALSE) addition, possible rank Area Curve (AUC) particular treatment adding \"auc\" vector params (included default). calculate area predicted response time, therefore function time-course parameters model simultaneously. However, dependent range times chosen integrate (int.range), different choice time-frame may lead different treatment rankings. \"auc\" can also currently calculated MBNMA models complex time-course functions (piecewise, fractional polynomials), MBNMA models use class effects. output object class(\"mb.rank\"), containing list ranked parameter params, consists summary table rankings raw information treatment ranking probabilities. summary median ranks 95% credible intervals can simply displayed using print(). Histograms ranking results can also plotted using plot() method, takes raw MCMC ranking results given rank.matrix plots number MCMC iterations parameter value treatment ranked particular position.  Cumulative rankograms indicating probability treatment ranked 1st, 2nd, etc. ranked parameter can also plotted using cumrank(). can used easily compare different treatments rank ranked parameter simultaneously. default, Surface Cumulative Ranking curve (SUCRA) also returned treatment ranked parameter (Salanti, Ades, Ioannidis 2011).","code":"# Identify quantile for knot at 1 week timequant <- 1/max(network.pain$data.ab$time)  # Run a piecewise linear time-course MBNMA with a knot at 1 week mbnma <- mb.run(network.pain,                 fun=tspline(type=\"ls\", knots = timequant,                             pool.1 = \"rel\", method.1=\"common\",                             pool.2 = \"rel\", method.2=\"common\")) #> Change from version 0.2.2 onwards: corparam=FALSE as default   # Rank results based on AUC (calculated 0-10 weeks), more negative slopes considered to be \"better\" ranks <- rank(mbnma, params=c(\"auc\", \"d.2\"),                      int.range=c(0,10),  lower_better = TRUE, n.iter=1000) print(ranks) #>  #> ======================================== #> Treatment rankings #> ========================================  #>  #> d.2 ranking #>  #> |Treatment |  Mean| Median| 2.5%| 97.5%| #> |:---------|-----:|------:|----:|-----:| #> |Pl_0      |  7.81|    8.0|    4|    12| #> |Ce_100    | 16.75|   17.0|    7|    25| #> |Ce_200    | 14.91|   15.0|   10|    20| #> |Ce_400    | 17.16|   18.0|    7|    25| #> |Du_90     | 15.04|   18.5|    1|    29| #> |Et_10     | 23.40|   26.0|    4|    29| #> |Et_30     | 13.93|   14.0|    6|    22| #> |Et_5      |  4.94|    3.0|    1|    23| #> |Et_60     | 23.48|   24.0|   15|    28| #> |Et_90     | 20.62|   24.0|    3|    29| #> |Lu_100    | 11.73|   11.0|    6|    19| #> |Lu_200    | 12.94|   13.0|    7|    20| #> |Lu_400    | 13.68|   13.0|    7|    21| #> |Lu_NA     | 14.06|    2.0|    1|    29| #> |Na_1000   | 20.36|   20.0|   15|    25| #> |Na_1500   | 17.81|   18.0|   10|    24| #> |Na_250    | 20.23|   24.0|    3|    29| #> |Na_750    | 21.12|   22.0|   12|    27| #> |Ox_44     |  7.96|    4.0|    1|    26| #> |Ro_12     | 20.79|   24.0|    3|    29| #> |Ro_125    | 14.09|   13.0|    1|    28| #> |Ro_25     | 24.03|   25.0|   13|    28| #> |Tr_100    |  5.44|    5.0|    2|    11| #> |Tr_200    |  6.72|    6.0|    2|    14| #> |Tr_300    |  9.01|    9.0|    4|    18| #> |Tr_400    |  6.43|    6.0|    2|    16| #> |Va_10     | 20.96|   22.0|    9|    28| #> |Va_20     | 16.19|   17.0|    4|    26| #> |Va_5      | 13.44|   13.0|    3|    25| #>  #>  #> auc ranking #>  #> |Treatment |  Mean| Median|  2.5%| 97.5%| #> |:---------|-----:|------:|-----:|-----:| #> |Pl_0      | 26.18|     26| 24.00|    28| #> |Ce_100    | 21.35|     22| 15.00|    26| #> |Ce_200    | 13.80|     14| 10.00|    18| #> |Ce_400    | 13.18|     13|  6.00|    20| #> |Du_90     | 14.95|     15|  1.00|    29| #> |Et_10     | 27.13|     28| 20.00|    29| #> |Et_30     |  6.51|      6|  3.00|    12| #> |Et_5      | 13.65|     13|  2.00|    27| #> |Et_60     |  4.17|      4|  2.00|     8| #> |Et_90     |  7.97|      5|  1.00|    25| #> |Lu_100    | 13.46|     13|  9.00|    18| #> |Lu_200    | 15.37|     16| 10.00|    20| #> |Lu_400    |  9.73|     10|  5.00|    16| #> |Lu_NA     | 14.66|     14|  1.00|    29| #> |Na_1000   |  8.11|      8|  4.98|    13| #> |Na_1500   |  9.21|      9|  4.00|    16| #> |Na_250    | 27.58|     28| 21.00|    29| #> |Na_750    | 19.14|     20| 11.00|    25| #> |Ox_44     |  5.05|      4|  1.00|    19| #> |Ro_12     | 20.62|     23|  4.00|    28| #> |Ro_125    |  2.72|      2|  1.00|    18| #> |Ro_25     | 16.98|     18|  5.00|    26| #> |Tr_100    | 23.23|     23| 19.00|    26| #> |Tr_200    | 22.30|     23| 18.00|    26| #> |Tr_300    | 15.43|     16|  8.00|    21| #> |Tr_400    | 11.19|     11|  4.00|    20| #> |Va_10     | 21.34|     22| 12.98|    26| #> |Va_20     | 13.63|     14|  5.00|    22| #> |Va_5      | 16.34|     17|  6.00|    24| # Ranking histograms for AUC plot(ranks, params = \"auc\") # Cumulative ranking for all ranked parameters cumrank(ranks) #> # A tibble: 58 × 3 #>    treatment parameter sucra #>    <fct>     <chr>     <dbl> #>  1 Pl_0      auc        3.32 #>  2 Pl_0      d.2       21.7  #>  3 Ce_100    auc        8.15 #>  4 Ce_100    d.2       12.8  #>  5 Ce_200    auc       15.7  #>  6 Ce_200    d.2       14.6  #>  7 Ce_400    auc       16.3  #>  8 Ce_400    d.2       12.3  #>  9 Du_90     auc       14.4  #> 10 Du_90     d.2       14.3  #> # … with 48 more rows"},{"path":"/articles/MBNMAtime.html","id":"prediction","dir":"Articles","previous_headings":"Post-Estimation","what":"Prediction","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"performing MBNMA, responses can predicted parameter estimates using predict() \"mbnma\" object. number important parameters need identified make robust predictions. However, default values can used set values zero reference treatment baseline time-course parameters indicates mean differences / relative treatment effects estimated. information help file can accessed using ?predict.mbnma. One key parameter E0, defines value(s) use predicted mean time = 0. single numeric value can given E0 indicate deterministic value, function representing random number generator (RNG) distribution R (stochastic) (e.g. E0 = ~rnorm(n, 7, 0.2). values can identified population interest external data (e.g. observational/registry). challenging parameter(s) identify network reference treatment time-course, supplied predict() ref.resp argument. estimating mean differences / relative treatment effects time need specified since typically MBNMA, relative effects estimated network reference effect modeled nuisance parameter. However, predicting mean responses time need provide input network reference treatment effect time-course parameters modeled using pool=\"rel\" can apply relative effects estimated model . two options providing values. first approach give values time-course parameter modeled using relative effects ref.resp. given list, separate named element time-course parameter. element can take either single numeric value (deterministic), function representing random number generator distribution R (stochastic). second assign ref.resp data frame composed single-arm studies network reference treatment. separate synthesis model reference treatment effect run, values used prediction reference treatment effect. dataset series observational studies measured multiple follow-times closely match population interest prediction. Alternatively subset data original RCT dataset used MBNMA model (though may less generalisable population interest). also possible specify time points make predictions (times), given vector positive numbers. left default maximum follow-dataset used upper limit range predicted time-points. object class \"mb.predict\" returned, list summary tables MCMC prediction matrices treatment, addition original mbnma object. summary() method can used print mean posterior predictions time point treatment. Predicted values can also plotted using plot() method object class(\"mb.predict\"). Within default arguments, median predicted network reference treatment effect overlaid predictions treatment. Setting overlay.ref = FALSE prevents causes network reference treatment effect plotted separate panel. Shaded counts observations original dataset predicted time point can plotted 95% CrI treatment setting disp.obs = TRUE.  can used identify extrapolation/interpretation time-course might occurring particular treatment, predictions might therefore problematic. illustrate situation informative, can look predictions quadratic time-course function fitted Obesity dataset:  can see, within limits observed data predicted values appear reasonable. However, extrapolation beyond dexf_30MG leads rather strange results, suggesting unrealistically huge increase body weight 50 weeks treatment. hand, predicted response 50 weeks follow-treatment 15 within limits observed data likely justifiable.","code":"# Run an Emax time-course MBNMA using the osteoarthritis dataset mbnma <- mb.run(network.pain,                 fun=temax(pool.emax=\"rel\", method.emax=\"common\",                           pool.et50=\"abs\", method.et50=\"common\"),                 rho=\"dunif(0,1)\", covar=\"varadj\") # Specify placebo time-course parameters ref.params <- list(emax=-2)  # Predict responses for a selection of treatments using a stochastic E0 and # placebo parameters defined in ref.params to estimate the network reference treatment effect pred <- predict(mbnma, treats=c(\"Pl_0\", \"Ce_200\", \"Du_90\", \"Et_60\",                                          \"Lu_400\", \"Na_1000\", \"Ox_44\", \"Ro_25\",                                         \"Tr_300\", \"Va_20\"),                         E0=~rnorm(n, 8, 0.5), ref.resp=ref.params)  print(pred) # Generate a dataset of network reference treatment responses over time placebo.df <- network.pain$data.ab[network.pain$data.ab$treatment==1,]  # Predict responses for a selection of treatments using a deterministic E0 and  #placebo.df to model the network reference treatment effect pred <- predict(mbnma, treats=c(\"Pl_0\", \"Ce_200\", \"Du_90\", \"Et_60\",                                          \"Lu_400\", \"Na_1000\", \"Ox_44\", \"Ro_25\",                                         \"Tr_300\", \"Va_20\"),                         E0=10, ref.resp=placebo.df)  print(pred) plot(pred, overlay.ref=TRUE, disp.obs=TRUE) # Fit a quadratic time-course MBNMA to the Obesity dataset network.obese <- mb.network(obesityBW_CFB, reference = \"plac\")  mbnma <- mb.run(network.obese,                 fun=tpoly(degree=2,                           pool.1 = \"rel\", method.1=\"common\",                           pool.2=\"rel\", method.2=\"common\"))  # Define stochastic values centred at zero for network reference treatment ref.params <- list(beta.1=~rnorm(n, 0, 0.05), beta.2=~rnorm(n, 0, 0.0001))  # Predict responses over the pred.obese <- predict(mbnma, times=c(0:50), E0=100, treats = c(1,4,15),                         ref.resp=ref.params)  # Plot predictions plot(pred.obese, disp.obs = TRUE)"},{"path":"/articles/MBNMAtime.html","id":"plotting-lumped-nma-results","dir":"Articles","previous_headings":"Post-Estimation > Prediction","what":"Plotting “lumped” NMA results","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"addition plots MBNMA predictions, possible add predicted results NMA model multiple “lumped” NMA models performed different time “bins” (specified overlay.nma), time periods within assuming treatment effects constant time. similar output generated binplot(). Either \"random\" (default) \"common\" effects NMA can specified, model fit statistics reported resulting plot. can useful assess MBNMA predictions agreement predictions lumped NMA models specific set time-points, can general indicator fit time-course model. However, important note NMA model necessarily robust model, since ignores potential differences treatment effects may arise lumping time-points together. wider range specified overlay.nma, greater effect lumping stronger assumption similarity studies. NMA predictions plotted range specified overlay.nma horizontal line representing posterior median, 95%CrI shown shaded rectangle. NMA predictions theory represent time-points within range since lump together data time-points, though width (x-axis) shaded rectangle represents range time-points studies included time bin. Predictions treatments disconnected network reference treatment data points specified within overlay.nma estimated included.","code":"# Overlay predictions from lumped NMAs between 5-8 and between 8-15 weeks follow-up plot(pred, overlay.nma=c(5,8,15), n.iter=20000) #> Reference treatment in plots is Pl_0 #> Running overlay.nma for time=5 and time=8 #> Running overlay.nma for time=8 and time=15"},{"path":"/articles/MBNMAtime.html","id":"consistency-testing","dir":"Articles","previous_headings":"","what":"Consistency Testing","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"performing MBNMA pooling relative treatment effects (pool=\"rel\"), modelling approach assumes consistency direct indirect evidence within network. incredibly useful assumption allows us improve precision existing direct estimates, estimate relative effects treatments compared head--head trials, making use indirect evidence. However, assumption hold extremely problematic inference, important able test . number different approaches exist allow standard Network Meta-Analysis (Dias et al. 2013). Two implemented within MBNMAtime. important note model specifications likely sharing model parameters (e.g. heterogeneity parameters, correlation coefficients) across networks lead conservative tests consistency, may lead inflated type II error. Consistency also likely differ depending model used. Failing appropriately model time-course function may fact induce inconsistency data. “Lumping” together different time points studies standard NMA known potential cause inconsistency, one reasons accounting time-course using MBNMA important (Pedder et al. 2019). performing MBNMA, important first try identify best model possible terms time-course common/random effects, test consistency within model, rather testing consistency models known good fit data. Consistency testing can performed networks closed loops treatment comparisons exist drawn independent sources evidence. networks loops evidence, consistency formally tested (though may still present). mb.nodesplit.comparisons() function identifies loops evidence conform property, identifies treatment comparison within loop direct indirect evidence can compared using node-splitting (see ).","code":"# Loops of evidence within the alogliptin dataset splits.alog <- mb.nodesplit.comparisons(network.alog) print(splits.alog) #>   t1 t2    path #> 8  3  4 3->1->4 #> 7  2  5 2->1->5 #> 6  2  4 2->1->4 #> 5  2  3 2->1->3"},{"path":"/articles/MBNMAtime.html","id":"unrelated-mean-effects-ume-models","dir":"Articles","previous_headings":"Consistency Testing","what":"Unrelated Mean Effects (UME) models","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"check consistency using UME fit model assume consistency relationships, models direct relative effects arm study study reference treatment. consistency assumption holds true results UME model MBNMA similar. However, discrepancy direct indirect evidence network, consistency assumption may valid, UME results likely differ several ways: UME model may provide better fit data, measured deviance residual deviance -study SD different parameters may lower UME model Individual relative effects may differ magnitude (severely) direction different treatment comparisons UME MBNMA models UME can fitted time-course parameter modelled using relative effects (pool=\"rel\"). UME can specified time-course parameter separate analyses, can modelled single analysis. comparing deviance (residual deviance) models UME fitted different time-course parameters MBNMA model, can see reduction deviance different UME models. Given deviance lowest UME modelled beta.1 suggestive inconsistency direct indirect evidence beta.1, perhaps also beta.2 given modelling UME also leads reduction deviance. Direct estimates UME MBNMA models can also compared examine greater detail inconsistency may affecting results. However, important note whilst discrepancy UME MBNMA results may seen particular relative effect, inconsistency exclusively applicable particular treatment comparison may originate comparisons network. consistency checking important, violation consistency assumption raises concerns estimates treatments within network.","code":"# Identify quantile for knot at 0.5 weeks timequant <- 0.5/max(network.pain$data.ab$time)  # Fit a B-spline MBNMA with common relative effects on slope.1 and slope.2 mbnma <- mb.run(network.pain,                 fun=tspline(type=\"bs\", knots=timequant,                             pool.1 = \"rel\", method.1=\"common\",                             pool.2 = \"rel\", method.2=\"common\"                             ))  # Fit a UME model on both spline coefficients simultaneously ume <- mb.run(network.pain,                 fun=tspline(type=\"bs\", knots=timequant,                             pool.1 = \"rel\", method.1=\"common\",                             pool.2 = \"rel\", method.2=\"common\"                             ),               UME=TRUE)  # Fit a UME model on the 1nd coefficient only ume.slope.1 <- mb.run(network.pain,                 fun=tspline(type=\"bs\", knots=timequant,                             pool.1 = \"rel\", method.1=\"common\",                             pool.2 = \"rel\", method.2=\"common\"                             ),               UME=\"beta.1\")  # Fit a UME model on the 2nd coefficient only ume.slope.2 <- mb.run(network.pain,                 fun=tspline(type=\"bs\", knots=timequant,                             pool.1 = \"rel\", method.1=\"common\",                             pool.2 = \"rel\", method.2=\"common\"                             ),               UME=\"beta.2\") #> [1] \"Deviance for mbnma: -104.54\" #> [1] \"Deviance for ume on beta.1 and beta.2: -115.5\" #> [1] \"Deviance for ume on beta.1: -117.0\" #> [1] \"Deviance for ume on beta.2: -115.2\""},{"path":"/articles/MBNMAtime.html","id":"node-splitting","dir":"Articles","previous_headings":"Consistency Testing","what":"Node-splitting","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"Another approach consistency checking node-splitting. splits contributions particular treatment comparison direct indirect evidence, two can compared test similarity. mb.nodesplit() takes similar arguments mb.run() define underlying MBNMA model test consistency, returns object class(\"mb.nodesplit\"). two additional arguments required: comparisons indicates treatment comparisons perform node-split. default value automatically identify comparisons direct indirect evidence contributions available using mb.nodesplit.comparisons(). nodesplit.parameters indicates time-course parameters perform node-split. can take time-course parameters assigned relative effects model (pool=\"rel\"). Alternatively default \"\" can used split available time-course parameters model pooled using relative effects. two models need run treatment comparison split, function can take time run. Performing print() method object class(\"mb.nodesplit\") prints summary node-split results console, whilst summary() method return data frame posterior summaries direct indirect estimates split treatment comparison time-course parameter. possible generate different plots node-split comparison using plot():  example, use different time-course function (1-parameter ITP) less good fit data, perform node-split rate time-course parameter, find seems strong discrepancy direct indirect estimates. strong evidence reject consistency assumption, either (case) try identify better fitting model, re-examine dataset try explain whether differences studies making different comparisons may causing . highlights importance testing consistency identifying appropriate time-course common/random treatment effects model.","code":"# Nodesplit using an Emax MBNMA nodesplit <- mb.nodesplit(network.pain,                           fun=temax(pool.emax=\"rel\", method.emax = \"random\",                                     pool.et50=\"abs\", method.et50 = \"common\"),                           nodesplit.parameters=\"all\"                           ) print(nodesplit) #> ======================================== #> Node-splitting analysis of inconsistency #> ======================================== #>  #> emax #>  #> |Comparison        | p-value| Median|   2.5%|  97.5%| #> |:-----------------|-------:|------:|------:|------:| #> |Ro_25 vs Ce_200   |   0.028|       |       |       | #> |-> direct         |        |  0.384| -0.460|  1.205| #> |-> indirect       |        | -0.541| -1.020| -0.064| #> |                  |        |       |       |       | #> |Na_1000 vs Ce_200 |   0.007|       |       |       | #> |-> direct         |        |  0.228| -0.213|  0.684| #> |-> indirect       |        | -0.515| -0.891| -0.137| #> |                  |        |       |       |       | # Plot forest plots of direct and indirect results for each node-split comparison plot(nodesplit, plot.type=\"forest\")  # Plot posterior densities of direct and indirect results for each node-split comparisons plot(nodesplit, plot.type=\"density\") # Nodesplit on emax of 1-parameter ITP MBNMA ns.itp <- mb.nodesplit(network.pain,                        fun=titp(pool.emax = \"rel\", method.emax=\"common\"),                        nodesplit.parameters=\"all\") print(ns.itp) #> ======================================== #> Node-splitting analysis of inconsistency #> ======================================== #>  #> emax #>  #> |Comparison        | p-value| Median|   2.5%|  97.5%| #> |:-----------------|-------:|------:|------:|------:| #> |Ro_25 vs Ce_200   |    0.09|       |       |       | #> |-> direct         |        |  0.163| -0.200|  0.542| #> |-> indirect       |        | -0.136| -0.440|  0.126| #> |                  |        |       |       |       | #> |Na_1000 vs Ce_200 |    0.00|       |       |       | #> |-> direct         |        |  0.002| -0.129|  0.137| #> |-> indirect       |        | -0.378| -0.513| -0.249| #> |                  |        |       |       |       | #>  #> rate #>  #> |Comparison        | p-value| Median|   2.5%|  97.5%| #> |:-----------------|-------:|------:|------:|------:| #> |Ro_25 vs Ce_200   |   0.396|       |       |       | #> |-> direct         |        | 21.295|  0.869| 68.722| #> |-> indirect       |        | 14.079|  0.261| 67.282| #> |                  |        |       |       |       | #> |Na_1000 vs Ce_200 |   0.082|       |       |       | #> |-> direct         |        | 21.176|  1.085| 69.708| #> |-> indirect       |        |  0.320| -0.088| 38.232| #> |                  |        |       |       |       |  plot(ns.itp, plot.type=\"forest\")"},{"path":"/articles/MBNMAtime.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"MBNMAtime for time-course Model-Based (Network) Meta-Analysis","text":"MBNMAtime provides complete set functions allow meta-analysis longitudinal time-course data plotting number informative graphics. Functions provided ranking, prediction, assessing consistency modelling using relative effects. accounting time-course meta-analysis can help explain heterogeneity/inconsistency may arise lumping together different time-points using conventional NMA. package allows flexible modelling either relative absolute effects interchangeably different time-course parameters within analysis, whilst providing straightforward syntax define models.","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hugo Pedder. Author, maintainer. Nicky Welton. Contributor, reviewer. Sofia Dias. Contributor, reviewer. Meg Bennetts. Contributor, reviewer. Martin Boucher. Contributor, reviewer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pedder, H., Dias, S., Bennetts, M., Boucher, M. Welton, N. J. (2019), Modelling time-course relationships multiple treatments: Model-based network meta-analysis continuous summary outcomes. Research Synthesis Methods, 10:267-286. doi:10.1002/jrsm.1351","code":"@Article{,   title = {Modelling time-course relationships with multiple treatments: Model-based network meta-analysis for continuous summary outcomes},   author = {Hugo Pedder and Sofia Dias and Margherita Bennetts and Martin Boucher and Nicky J Welton},   journal = {Research Synthesis Methods},   year = {2019},   volume = {10},   number = {2},   pages = {267-286},   url = {https://doi.org/10.1002/jrsm.1351},   doi = {10.1002/jrsm.1351}, }"},{"path":"/index.html","id":"mbnmatime","dir":"","previous_headings":"","what":"Run Time-Course Model-Based Network Meta-Analysis (MBNMA) Models","title":"Run Time-Course Model-Based Network Meta-Analysis (MBNMA) Models","text":"goal MBNMAtime provide collection useful commands allow users run time-course Model-Based Network Meta-Analysis (MBNMA). allows meta-analysis studies multiple follow-measurements can account time-course single multiple treatment comparisons. Including available follow-measurements within study makes use available evidence way maintains connectivity treatments, way explains time-course, thus explaining heterogeneity inconsistency may present standard Network Meta-Analysis (NMA). models analyses implemented Bayesian framework, following extension standard NMA methodology presented Lu Ades (2004) run JAGS (JAGS Computer Program 2017). full details time-course MBNMA methodology see Pedder et al. (2019).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Run Time-Course Model-Based Network Meta-Analysis (MBNMA) Models","text":"Currently package available CRAN can can installed using: development version can installed directly GitHub using devtools R package:","code":"install.packages(\"MBNMAtime\") # First install devtools install.packages(\"devtools\")  # Then install MBNMAtime directly from GitHub devtools::install_github(\"hugaped/MBNMAtime\")"},{"path":"/index.html","id":"workflow","dir":"","previous_headings":"","what":"Workflow","title":"Run Time-Course Model-Based Network Meta-Analysis (MBNMA) Models","text":"Functions within MBNMAtime follow clear pattern use: Load data correct format using mb.network() Specify suitable time-course function analyse data using mb.run() Test consistency using functions like mb.nodesplit() Examine model results using forest plots treatment rankings Use model predict responses estimate treatment effects specific time-points using predict() stages number informative plots can generated help make sense data models fitting. Exported functions package connected like : MBNMAtime package structure: Light green nodes represent classes generic functions can applied . Dashed boxes indicate functions can applied objects specific classes","code":""},{"path":[]},{"path":"/reference/MBNMAtime-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MBNMAtime for Model-Based Network Meta-Analysis of longitudinal (time-course) data — MBNMAtime-package","title":"MBNMAtime for Model-Based Network Meta-Analysis of longitudinal (time-course) data — MBNMAtime-package","text":"MBNMAtime provides collection useful commands allow users run time-course Model-Based Network Meta-Analysis (MBNMA).","code":""},{"path":"/reference/MBNMAtime-package.html","id":"introduction","dir":"Reference","previous_headings":"","what":"Introduction","title":"MBNMAtime for Model-Based Network Meta-Analysis of longitudinal (time-course) data — MBNMAtime-package","text":"MBNMAtime allows meta-analysis studies multiple follow-measurements can account time-course single multiple treatment comparisons. Including available follow-measurements within study makes use available evidence way maintains connectivity treatments, way explains time-course, thus explaining heterogeneity inconsistency may present standard Network Meta-Analysis (NMA). models analyses implemented Bayesian framework, following extension standard NMA methodology presented (Lu Ades 2004)  run JAGS ( ) . Correlation time-points can accounted modeling framework. full details time-course MBNMA methodology see Pedder et al. (2019) .","code":""},{"path":"/reference/MBNMAtime-package.html","id":"workflow","dir":"Reference","previous_headings":"","what":"Workflow","title":"MBNMAtime for Model-Based Network Meta-Analysis of longitudinal (time-course) data — MBNMAtime-package","text":"Functions within MBNMAtime follow clear pattern use: Load data correct format using mb.network Specify suitable time-course function analyse data using mb.run Test consistency using mb.nodesplit fitting Unrelated Mean Effects models Examine model results using forest plots treatment rankings Use model predict responses estimate treatment effects specific time-points using predict.mbnma stages number informative plots can generated help make sense data models fitting.","code":""},{"path":"/reference/MBNMAtime-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"MBNMAtime for Model-Based Network Meta-Analysis of longitudinal (time-course) data — MBNMAtime-package","text":"(2017). https://mcmc-jags.sourceforge.io/. Lu G, Ades AE (2004). “Combination direct indirect evidence mixed treatment comparisons.” Stat Med, 23(20), 3105-24. ISSN 0277-6715 (Print) 0277-6715 (Linking), doi:10.1002/sim.1875 , https://pubmed.ncbi.nlm.nih.gov/15449338/. Pedder H, Dias S, Bennetts M, Boucher M, Welton NJ (2019). “Modelling time-course relationships multiple treatments: Model-Based Network Meta-Analysis continuous summary outcomes.” Res Synth Methods, 10(2), 267-286.","code":""},{"path":"/reference/MBNMAtime-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MBNMAtime for Model-Based Network Meta-Analysis of longitudinal (time-course) data — MBNMAtime-package","text":"Maintainer: Hugo Pedder hugopedder@gmail.com (ORCID) contributors: Nicky Welton [contributor, reviewer] Sofia Dias [contributor, reviewer] Meg Bennetts [contributor, reviewer] Martin Boucher [contributor, reviewer]","code":""},{"path":"/reference/MBNMAtime-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MBNMAtime for Model-Based Network Meta-Analysis of longitudinal (time-course) data — MBNMAtime-package","text":"","code":"# \\donttest{ # Generate an \"mb.network\" object that stores data in the correct format network <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Generate a network plot plot(network, label.distance=3)  # Analyse data using mb.run() result <- mb.run(network, fun=tloglin()) #> Change from version 0.2.2 onwards: corparam=FALSE as default #> module glm loaded  #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 88 #>    Total graph size: 7302 #>  #> Initializing model #>   # Time-course parameters can be explicitly specified # Correlation between time-points can be accounted for result <- mb.run(network,   fun=temax(pool.emax=\"rel\", method.emax=\"common\",     pool.et50=\"rel\", method.et50=\"common\"),   rho=\"dunif(0,1)\") #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 147 #>    Total graph size: 8296 #>  #> Initializing model #>   # Explore model fit statistics - plot residual deviances devplot(result, n.iter=500) #> `dev` not monitored in mbnma$parameters.to.save. #> additional iterations will be run in order to obtain results for `dev`   # Generate a forest plot for model results plot(result)   decision.treats <- c(\"Pl_0\", \"Ce_100\", \"Lu_400\", \"Ro_125\",   \"Na_1000\", \"Na_1500\", \"Et_10\")  # Predict responses for selected treatments pred <- predict(result, time=c(0:10), E0=8,   treats=decision.treats,   ref.resp=subset(osteopain, treatment==\"Pl_0\")) #> Data frame must contain only data from reference treatment #> Studies reporting change from baseline automatically identified from ref.resp #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 113 #>    Unobserved stochastic nodes: 32 #>    Total graph size: 2039 #>  #> Initializing model #>   # Plot predicted response plot(pred, disp.obs=TRUE) #> Reference treatment in plots is Pl_0   # Rank by Area Under the time-course Curve ranks <- rank(result, param=\"auc\", lower_better=TRUE, n.iter=500,   treats=decision.treats) #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  17%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |=====================                                                 |  31%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |============================                                          |  41%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |===================================                                   |  51%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  79%   |                                                                               |========================================================              |  80%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100%  plot(ranks) # Plot histogram of rankings  cumrank(ranks) # Plot cumulative rankograms  #> # A tibble: 7 × 3 #>   treatment parameter sucra #>   <fct>     <chr>     <dbl> #> 1 Pl_0      auc        0.5  #> 2 Ce_100    auc        2.35 #> 3 Lu_400    auc        1.65 #> 4 Ro_125    auc        3.77 #> 5 Na_1000   auc        5.31 #> 6 Na_1500   auc        4.41 #> 7 Et_10     auc        6    # }"},{"path":"/reference/add_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Add follow-up time and arm indices to a dataset — add_index","title":"Add follow-up time and arm indices to a dataset — add_index","text":"Adds follow-time (fups, fupcount) arm (arms, narms) indices dataset.","code":""},{"path":"/reference/add_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add follow-up time and arm indices to a dataset — add_index","text":"","code":"add_index(data.ab, reference = 1)"},{"path":"/reference/add_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add follow-up time and arm indices to a dataset — add_index","text":"data.ab data frame arm-level data \"long\" format containing columns: studyID Study identifiers time Numeric data indicating follow-times treatment Treatment identifiers (can numeric, factor character) class optional column indicating particular class code. Treatments identifier must also class code. reference number character (depending format treatment within data.ab) indicating reference treatment network (.e. estimated relative treatment effects estimated model compared ).","code":""},{"path":"/reference/add_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add follow-up time and arm indices to a dataset — add_index","text":"data frame similar data.ab additional columns: arm Arm identifiers coded study fupcount Follow-identifiers coded study fups total number follow-measurements study narm total number arms study treatment class non-numeric non-sequential (.e. missing numeric codes), treatments/classes returned data frame numbered recoded enforce sequential numbering (warning shown stating ).","code":""},{"path":"/reference/add_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add follow-up time and arm indices to a dataset — add_index","text":"","code":"# Add indices to osteoarthritis pain dataset data.ab <- add_index(osteopain) #> Reference treatment is `Pl_0`  # Add indices to dataset using different network reference treatment data.ab <- add_index(osteopain, reference=3) #> Reference treatment is `Ce_200`"},{"path":"/reference/alog_pcfb.html","id":null,"dir":"Reference","previous_headings":"","what":"Studies of alogliptin for lowering blood glucose concentration in patients with type II diabetes — alog_pcfb","title":"Studies of alogliptin for lowering blood glucose concentration in patients with type II diabetes — alog_pcfb","text":"dataset systematic review Randomised-Controlled Trials (RCTs) comparing different doses alogliptin placebo (Langford et al. 2016) . systematic review simply performed intended provide data illustrate statistical methodology rather clinical inference. Alogliptin treatment aimed reducing blood glucose concentration type II diabetes. outcome continuous, aggregate data responses correspond mean change HbA1c baseline follow-. dataset includes 14 Randomised-Controlled Trials (RCTs), comparing 5 different doses alogliptin placebo, leading 6 different treatments (combination dose agent) within network.","code":""},{"path":"/reference/alog_pcfb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Studies of alogliptin for lowering blood glucose concentration in patients with type II diabetes — alog_pcfb","text":"","code":"alog_pcfb"},{"path":"/reference/alog_pcfb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Studies of alogliptin for lowering blood glucose concentration in patients with type II diabetes — alog_pcfb","text":"data frame long format (one row per arm study), 46 rows 9 variables: studyID Study identifiers clinicaltrialGov_ID clinicaltrial.gov ID code agent Character data indicating agent participants randomised dose Numeric data indicating standardised dose received treatment Character data indicating treatment (combination agent dose) participants randomised time Numeric data indicating time observation measured (given weeks) y Numeric data indicating mean change baseline blood glucose concentration (mg/dL) study arm se Numeric data indicating standard error mean change baseline blood glucose concentration (mg/dL) study arm n Numeric data indicating number arm follow-time","code":""},{"path":"/reference/alog_pcfb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Studies of alogliptin for lowering blood glucose concentration in patients with type II diabetes — alog_pcfb","text":"alog_pcfb data frame long format (one row per observation, arm study), variables studyID, clinicaltrialGov_ID, agent, dose, treatment, time, y, se, n.","code":""},{"path":"/reference/alog_pcfb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Studies of alogliptin for lowering blood glucose concentration in patients with type II diabetes — alog_pcfb","text":"Langford O, Aronson JK, van Valkenhoef G, Stevens RJ (2016). “Methods meta-analysis pharmacodynamic dose-response data application multi-arm studies alogliptin.” Stat Methods Med Res. ISSN 1477-0334 (Electronic) 0962-2802 (Linking), doi:10.1177/0962280216637093 , https://pubmed.ncbi.nlm.nih.gov/26994216/.","code":""},{"path":"/reference/binplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot relative effects from NMAs performed at multiple time-bins — binplot","title":"Plot relative effects from NMAs performed at multiple time-bins — binplot","text":"Plot relative effects NMAs performed multiple time-bins","code":""},{"path":"/reference/binplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot relative effects from NMAs performed at multiple time-bins — binplot","text":"","code":"binplot(   network,   overlay.nma = c(0, stats::quantile(network$data.ab$time)),   method = \"common\",   link = \"identity\",   lim = \"cred\",   plot.bins = TRUE,   legend = TRUE,   ... )"},{"path":"/reference/binplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot relative effects from NMAs performed at multiple time-bins — binplot","text":"network object class \"mb.network\". overlay.nma Numeric vector used overlay results standard NMA model \"lumps\" time-points together within time bin ranges specified overlay.nma. numbers overlay.nma define boundaries time bins within perform standard NMA. Length must >=2, can left NULL (default) indicate NMA perfomed. overlay.nma can specified overlay.ref==TRUE. See Details information. method Can take \"common\" \"random\" indicate type NMA model used synthesise data points given overlay.nma. default \"random\" since assumes different time-points overlay.nma lumped together estimate NMA. link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function). lim Specifies calculation either 95% credible intervals (lim=\"cred\") 95% prediction intervals (lim=\"pred\"). plot.bins Plot time bin boundaries vertical dashed lines. Setting plot.bins=TRUE overlay.nma specified also sets x-axis ticks time bin boundaries automatically. legend TRUE/FALSE indicate whether legend plotted. ... Arguments sent R2jags.","code":""},{"path":"/reference/binplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot relative effects from NMAs performed at multiple time-bins — binplot","text":"Performs several standard NMAs different time \"bins\", time periods within treatment effects assumed constant time. Separate NMAs performed within time bin data points studies fall within time bin (single follow-time taken study avoid double counting). Note wider time bin boundaries specified user, larger potential range included follow-times can introduce heterogeneity inconsistency. Results plotted versus network reference plotted specified link scale. time bin window marked plot vertical dashed lines. NMA estimates within time bin plotted horizontal solid black line (posterior median) shaded region indicating 95% credible interval (prediction intervals can instead plotted). width shaded regions equal range study time-points included NMA performed within timebin, may therefore narrow time bin specified binplot() command due follow-times data available included studies.","code":""},{"path":"/reference/binplot.html","id":"overlaying-nma-results","dir":"Reference","previous_headings":"","what":"Overlaying NMA results","title":"Plot relative effects from NMAs performed at multiple time-bins — binplot","text":"overlay.nma indicates regions data (defined \"time bins\") may reasonable \"lump\" different follow-times different studies together assume standard NMA model. example: overlay.nma=c(5,10) indicates single NMA studies follow-times >5 <=10 overlay.nma=c(5,10,15) indicates two NMAs performed studies follow-times >5 <=10 studies follow-times >10 <=15 used MBNMA (via predict.mbnma()) allows comparison MBNMA results specific range time within time bin. can useful assess time-course function might suitable using binplot(), assess MBNMA predictions agreement predictions NMA model using plot.mb.predict() specific range time-points. can general indicator fit time-course model. However, important note wider range specified overlay.nma, likely different time-points included, therefore greater heterogeneity/inconsistency NMA model. overlay.nma includes several follow-times study single time-point taken (one closest mean(overlay.nma)). NMA predictions plotted range specified overlay.nma horizontal line, 95%CrI shown grey rectangle. NMA predictions represent time-points within range since lump together data time-points. Predictions treatments disconnected network reference treatment data points specified within overlay.nma estimated included. important note NMA model necessarily \"correct\" model, since \"lumps\" different time-points together ignores potential differences treatment effects may arise . wider range specified overlay.nma, greater effect \"lumping\" stronger assumption similarity studies. NMA model estimated corresponding prediction made , time bin must include network reference treatment (treatment=1) evaluated least 1 connected study time bin. given time bin meet criteria NMA calculated .","code":""},{"path":"/reference/binplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot relative effects from NMAs performed at multiple time-bins — binplot","text":"","code":"# \\donttest{ # Create an mb.network object from a dataset alognet <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Plot relative effects from NMAs calculated for a single time-bins # Do not plot time-bin boundaries binplot(alognet, overlay.nma=c(0,5), plot.bins=FALSE) #> Running overlay.nma for time=0 and time=5 #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 32 #>    Unobserved stochastic nodes: 14 #>    Total graph size: 307 #>  #> Initializing model #>    # Plot relative effects from NMAs at multiple time-bins # With random treatment effects binplot(alognet, overlay.nma=c(5,10,15,20),   method=\"random\") #> Running overlay.nma for time=5 and time=10 #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 42 #>    Unobserved stochastic nodes: 48 #>    Total graph size: 580 #>  #> Initializing model #>  #> Running overlay.nma for time=10 and time=15 #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 46 #>    Unobserved stochastic nodes: 52 #>    Total graph size: 641 #>  #> Initializing model #>  #> Running overlay.nma for time=15 and time=20 #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 23 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 321 #>  #> Initializing model #>   # }"},{"path":"/reference/copd.html","id":null,"dir":"Reference","previous_headings":"","what":"Studies comparing Tiotropium, Aclidinium and Placebo for maintenance treatment of moderate to severe chronic obstructive pulmonary disease — copd","title":"Studies comparing Tiotropium, Aclidinium and Placebo for maintenance treatment of moderate to severe chronic obstructive pulmonary disease — copd","text":"dataset systematic review Randomised-Controlled Trials (RCTs) maintenance treatment moderate severe chronic obstructive pulmonary disease (COPD) (Karabis et al. 2013) . Data extracted (Tallarita et al. 2019) . SEs imputed three studies, number patients randomised imputed one study (LAS 39) missing, using median standard deviation calculated studies dataset. outcome trough Forced Expiratory Volume 1 second (FEV1), measured litres reported study arm mean change baseline follow-. dataset includes 13 Randomised-Controlled Trials (RCTs), comparing 2 treatments (Tiotropium Aclidinium) placebo.","code":""},{"path":"/reference/copd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Studies comparing Tiotropium, Aclidinium and Placebo for maintenance treatment of moderate to severe chronic obstructive pulmonary disease — copd","text":"","code":"copd"},{"path":"/reference/copd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Studies comparing Tiotropium, Aclidinium and Placebo for maintenance treatment of moderate to severe chronic obstructive pulmonary disease — copd","text":"data frame long format (one row per arm study), 80 rows 6 variables: studyID Study identifiers time Numeric data indicating time observation measured (given weeks) y Numeric data indicating mean change baseline FEV1 (litres) study arm se Numeric data indicating standard error mean change baseline FEV1 study arm treatment Factor data indicating treatment participants randomised n Numeric data indicating number participants randomised arm","code":""},{"path":"/reference/copd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Studies comparing Tiotropium, Aclidinium and Placebo for maintenance treatment of moderate to severe chronic obstructive pulmonary disease — copd","text":"copd data frame long format (one row per observation, arm study), variables studyID, time, y, se, treatment, n.","code":""},{"path":"/reference/copd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Studies comparing Tiotropium, Aclidinium and Placebo for maintenance treatment of moderate to severe chronic obstructive pulmonary disease — copd","text":"Karabis , Lindner L, Mocarski M, Huisman E, Greening (2013). “Comparative efficacy aclidinium versus glycopyrronium tiotropium, maintenance treatment moderate severe COPD patients: systematic review network meta-analysis.” Int J Chron Obstruct Pulmon Dis, 8, 405-423. doi:10.2147/COPD.S48967 , https://pubmed.ncbi.nlm.nih.gov/24043936/. Tallarita M, De lorio M, Baio G (2019). “comparative review network meta-analysis models longitudinal randomized controlled trial.” Statistics Medicine, 38(16), 3053-3072. doi:10.1002/sim.8169 , https://onlinelibrary.wiley.com/doi/abs/10.1002/sim.8169.","code":""},{"path":"/reference/cumrank.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cumulative ranking curves from MBNMA models — cumrank","title":"Plot cumulative ranking curves from MBNMA models — cumrank","text":"Plot cumulative ranking curves MBNMA models","code":""},{"path":"/reference/cumrank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cumulative ranking curves from MBNMA models — cumrank","text":"","code":"cumrank(x, params = NULL, sucra = TRUE, ...)"},{"path":"/reference/cumrank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cumulative ranking curves from MBNMA models — cumrank","text":"x object class \"mb.rank\" generated rank.mbnma() params character vector containing model parameters monitored mbnma ranking desired (e.g. \"beta.1\", \"emax\"). Parameters must vary treatment ranking possible. Can include \"auc\" (see details). sucra logical object indicate whether Surface Cumulative Ranking Curve (SUCRA) values calculated returned data frame. Areas calculated using readWKT. ... Arguments sent ggplot::geom_line()","code":""},{"path":"/reference/cumrank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot cumulative ranking curves from MBNMA models — cumrank","text":"Line plots showing cumulative ranking probabilities agent/class dose-response parameter x. object returned list contains plot (object class(c(\"gg\", \"ggplot\")) data frame SUCRA values sucra = TRUE.","code":""},{"path":"/reference/cumrank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cumulative ranking curves from MBNMA models — cumrank","text":"","code":"# \\donttest{ # Using the alogliptin data network <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Estimate rankings  from an Emax dose-response MBNMA emax <- mb.run(network, fun=temax()) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 233 #>    Unobserved stochastic nodes: 38 #>    Total graph size: 4166 #>  #> Initializing model #>  ranks <- rank(emax, params=c(\"emax\", \"et50\", \"auc\")) #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |==                                                                    |   4%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  16%   |                                                                               |============                                                          |  17%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |================                                                      |  24%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |=====================                                                 |  31%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |=======================                                               |  34%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |============================                                          |  41%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |==============================                                        |  44%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |===================================                                   |  51%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |=====================================                                 |  54%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  56%   |                                                                               |========================================                              |  57%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |============================================                          |  64%   |                                                                               |=============================================                         |  64%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  79%   |                                                                               |========================================================              |  80%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |==========================================================            |  84%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |=================================================================     |  94%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100%  # Plot cumulative rankings for both dose-response parameters simultaneously # Note that SUCRA values are also returned cumrank(ranks)  #> # A tibble: 18 × 3 #>    treatment parameter sucra #>    <fct>     <chr>     <dbl> #>  1 placebo   auc       5     #>  2 placebo   emax      5     #>  3 placebo   et50      0.5   #>  4 alog_6.25 auc       4.42  #>  5 alog_6.25 emax      4.37  #>  6 alog_6.25 et50      4.23  #>  7 alog_12.5 auc       3.19  #>  8 alog_12.5 emax      3.60  #>  9 alog_12.5 et50      2.09  #> 10 alog_25   auc       2.05  #> 11 alog_25   emax      2.47  #> 12 alog_25   et50      1.95  #> 13 alog_50   auc       0.919 #> 14 alog_50   emax      1.42  #> 15 alog_50   et50      3.82  #> 16 alog_100  auc       1.91  #> 17 alog_100  emax      0.636 #> 18 alog_100  et50      4.92  # }"},{"path":"/reference/default.priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets default priors for JAGS model code — default.priors","title":"Sets default priors for JAGS model code — default.priors","text":"function creates JAGS code snippets default MBNMA model priors.","code":""},{"path":"/reference/default.priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets default priors for JAGS model code — default.priors","text":"","code":"default.priors(fun = tloglin())"},{"path":"/reference/default.priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets default priors for JAGS model code — default.priors","text":"fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser()","code":""},{"path":"/reference/default.priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets default priors for JAGS model code — default.priors","text":"list, element named JAGS snippet corresponding prior MBNMA JAGS code.","code":""},{"path":"/reference/default.priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets default priors for JAGS model code — default.priors","text":"","code":"# \\donttest{ default.priors(fun=temax()) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> $rho #> [1] \"rho ~ dunif(0,1)\" #>  #> $alpha #> [1] \"alpha[i] ~ dnorm(0,0.0001)\" #>  #> $inv.R #> [1] \"inv.R ~ dwish(omega[,], mat.size)\" #>  #> $rhoparam #> [1] \"rhoparam ~ dunif(-1,1)\" #>  #> $mu.1 #> [1] \"mu.1[i] ~ dnorm(0,0.0001)\" #>  #> $m.mu.1 #> [1] \"mu.1 ~ dnorm(0,0.0001)\" #>  #> $d.1 #> [1] \"d.1[k] ~ dnorm(0,0.001)\" #>  #> $dume.1 #> [1] \"d.1[c,k] ~ dnorm(0,0.001)\" #>  #> $D.1 #> [1] \"D.1[k] ~ dnorm(0,0.001)\" #>  #> $beta.1 #> [1] \"beta.1 ~ dnorm(0,0.0001)\" #>  #> $sd.mu.1 #> [1] \"sd.mu.1 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.d.1 #> [1] \"sd.d.1 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.D.1 #> [1] \"sd.D.1 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.beta.1 #> [1] \"sd.beta.1 ~ dnorm(0,0.05) T(0,)\" #>  #> $mu.2 #> [1] \"mu.2[i] ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $m.mu.2 #> [1] \"mu.2 ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $d.2 #> [1] \"d.2[k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $dume.2 #> [1] \"d.2[c,k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $D.2 #> [1] \"D.2[k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $beta.2 #> [1] \"beta.2 ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $sd.mu.2 #> [1] \"sd.mu.2 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.d.2 #> [1] \"sd.d.2 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.D.2 #> [1] \"sd.D.2 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.beta.2 #> [1] \"sd.beta.2 ~ dnorm(0,0.05) T(0,)\" #>  #> $mu.3 #> [1] \"mu.3[i] ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $m.mu.3 #> [1] \"mu.3 ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $d.3 #> [1] \"d.3[k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $dume.3 #> [1] \"d.3[c,k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $D.3 #> [1] \"D.3[k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $beta.3 #> [1] \"beta.3 ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $sd.mu.3 #> [1] \"sd.mu.3 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.d.3 #> [1] \"sd.d.3 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.D.3 #> [1] \"sd.D.3 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.beta.3 #> [1] \"sd.beta.3 ~ dnorm(0,0.05) T(0,)\" #>  #> $mu.4 #> [1] \"mu.4[i] ~ dnorm(0,0.0001)\" #>  #> $m.mu.4 #> [1] \"mu.4 ~ dnorm(0,0.0001)\" #>  #> $d.4 #> [1] \"d.4[k] ~ dnorm(0,0.001)\" #>  #> $dume.4 #> [1] \"d.4[c,k] ~ dnorm(0,0.001)\" #>  #> $D.4 #> [1] \"D.4[k] ~ dnorm(0,0.001)\" #>  #> $beta.4 #> [1] \"beta.4 ~ dnorm(0,0.0001)\" #>  #> $sd.mu.4 #> [1] \"sd.mu.4 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.d.4 #> [1] \"sd.d.4 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.D.4 #> [1] \"sd.D.4 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.beta.4 #> [1] \"sd.beta.4 ~ dnorm(0,0.05) T(0,)\" #>  #> $mu.z.1 #> [1] \"mu.z[i,1] ~ dnorm(0,0.0001)\" #>  #> $z.1 #> [1] \"z[1,k] ~ dnorm(0,0.0001)\" #>  #> $mu.z.2 #> [1] \"mu.z[i,2] ~ dnorm(0,0.0001) T(-d.prior[2],)\" #>  #> $z.2 #> [1] \"z[2,k] ~ dnorm(0,0.0001) T(-d.prior[2],)\" #>   default.priors(fun=titp(p.expon=TRUE)) #> 'rate' parameters are on exponential scale to ensure they take positive values on the natural scale #> $rho #> [1] \"rho ~ dunif(0,1)\" #>  #> $alpha #> [1] \"alpha[i] ~ dnorm(0,0.0001)\" #>  #> $inv.R #> [1] \"inv.R ~ dwish(omega[,], mat.size)\" #>  #> $rhoparam #> [1] \"rhoparam ~ dunif(-1,1)\" #>  #> $mu.1 #> [1] \"mu.1[i] ~ dnorm(0,0.0001)\" #>  #> $m.mu.1 #> [1] \"mu.1 ~ dnorm(0,0.0001)\" #>  #> $d.1 #> [1] \"d.1[k] ~ dnorm(0,0.001)\" #>  #> $dume.1 #> [1] \"d.1[c,k] ~ dnorm(0,0.001)\" #>  #> $D.1 #> [1] \"D.1[k] ~ dnorm(0,0.001)\" #>  #> $beta.1 #> [1] \"beta.1 ~ dnorm(0,0.0001)\" #>  #> $sd.mu.1 #> [1] \"sd.mu.1 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.d.1 #> [1] \"sd.d.1 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.D.1 #> [1] \"sd.D.1 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.beta.1 #> [1] \"sd.beta.1 ~ dnorm(0,0.05) T(0,)\" #>  #> $mu.2 #> [1] \"mu.2[i] ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $m.mu.2 #> [1] \"mu.2 ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $d.2 #> [1] \"d.2[k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $dume.2 #> [1] \"d.2[c,k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $D.2 #> [1] \"D.2[k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $beta.2 #> [1] \"beta.2 ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $sd.mu.2 #> [1] \"sd.mu.2 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.d.2 #> [1] \"sd.d.2 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.D.2 #> [1] \"sd.D.2 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.beta.2 #> [1] \"sd.beta.2 ~ dnorm(0,0.05) T(0,)\" #>  #> $mu.3 #> [1] \"mu.3[i] ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $m.mu.3 #> [1] \"mu.3 ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $d.3 #> [1] \"d.3[k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $dume.3 #> [1] \"d.3[c,k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $D.3 #> [1] \"D.3[k] ~ dnorm(0.00001,0.001) T(0,)\" #>  #> $beta.3 #> [1] \"beta.3 ~ dnorm(0.00001,0.0001) T(0,)\" #>  #> $sd.mu.3 #> [1] \"sd.mu.3 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.d.3 #> [1] \"sd.d.3 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.D.3 #> [1] \"sd.D.3 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.beta.3 #> [1] \"sd.beta.3 ~ dnorm(0,0.05) T(0,)\" #>  #> $mu.4 #> [1] \"mu.4[i] ~ dnorm(0,0.0001)\" #>  #> $m.mu.4 #> [1] \"mu.4 ~ dnorm(0,0.0001)\" #>  #> $d.4 #> [1] \"d.4[k] ~ dnorm(0,0.001)\" #>  #> $dume.4 #> [1] \"d.4[c,k] ~ dnorm(0,0.001)\" #>  #> $D.4 #> [1] \"D.4[k] ~ dnorm(0,0.001)\" #>  #> $beta.4 #> [1] \"beta.4 ~ dnorm(0,0.0001)\" #>  #> $sd.mu.4 #> [1] \"sd.mu.4 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.d.4 #> [1] \"sd.d.4 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.D.4 #> [1] \"sd.D.4 ~ dnorm(0,0.05) T(0,)\" #>  #> $sd.beta.4 #> [1] \"sd.beta.4 ~ dnorm(0,0.05) T(0,)\" #>  #> $mu.z.1 #> [1] \"mu.z[i,1] ~ dnorm(0,0.0001)\" #>  #> $z.1 #> [1] \"z[1,k] ~ dnorm(0,0.0001)\" #>  #> $mu.z.2 #> [1] \"mu.z[i,2] ~ dnorm(0,0.0001) T(-d.prior[2],)\" #>  #> $z.2 #> [1] \"z[2,k] ~ dnorm(0,0.0001) T(-d.prior[2],)\" #>  # }"},{"path":"/reference/devplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot deviance contributions from an MBNMA model — devplot","title":"Plot deviance contributions from an MBNMA model — devplot","text":"Plot deviance contributions MBNMA model","code":""},{"path":"/reference/devplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot deviance contributions from an MBNMA model — devplot","text":"","code":"devplot(   mbnma,   dev.type = \"dev\",   plot.type = \"box\",   xaxis = \"time\",   facet = TRUE,   n.iter = round(mbnma$BUGSoutput$n.iter/4),   n.thin = mbnma$BUGSoutput$n.thin,   ... )"},{"path":"/reference/devplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot deviance contributions from an MBNMA model — devplot","text":"mbnma S3 object class \"mbnma\" generated running time-course MBNMA model dev.type Deviances plot - can either residual deviances (\"resdev\") deviances (\"dev\", default) plot.type Deviances can plotted either scatter points (\"scatter\" - using geom_point()) boxplots (\"box\", default) xaxis character object indicates whether deviance contributions plotted time (\"time\") follow-count (\"fup\") facet boolean object indicates whether facet treatment n.iter number iterations update model whilst monitoring additional parameters (necessary). Must positive integer. Default value used mbnma. n.thin thinning rate. Must positive integer. Default value used mbnma. ... Arguments sent ggplot2::ggplot()","code":""},{"path":"/reference/devplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot deviance contributions from an MBNMA model — devplot","text":"Generates plot deviance contributions returns list containing plot (object class c(\"gg\", \"ggplot\")), data.frame posterior mean deviance/residual deviance contributions observation.","code":""},{"path":"/reference/devplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot deviance contributions from an MBNMA model — devplot","text":"Deviances plotted models converged successfully. deviance contributions monitored mbnma$parameters..save additional iterations run get results . Deviance contributions calculated models multivariate likelihood (.e. account correlation observations) covariance matrix models treated unknown (rho=\"estimate\") deviance contributions correlated.","code":""},{"path":"/reference/devplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot deviance contributions from an MBNMA model — devplot","text":"","code":"# \\donttest{ # Make network alognet <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Run MBNMA mbnma <- mb.run(alognet, fun=tpoly(degree=2), intercept=FALSE) #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 233 #>    Unobserved stochastic nodes: 38 #>    Total graph size: 4178 #>  #> Initializing model #>   # Plot residual deviance contributions in a scatterplot devplot(mbnma) #> `dev` not monitored in mbnma$parameters.to.save. #> additional iterations will be run in order to obtain results for `dev`   # Plot deviance contributions in boxplots at each follow-up measurement # Monitor for 500 additional iterations devplot(mbnma, dev.type=\"dev\", plot.type=\"box\", xaxis=\"fup\", n.iter=500) #> `dev` not monitored in mbnma$parameters.to.save. #> additional iterations will be run in order to obtain results for `dev`  # }"},{"path":"/reference/diabetes.html","id":null,"dir":"Reference","previous_headings":"","what":"Studies comparing treatments for type 2 diabetes — diabetes","title":"Studies comparing treatments for type 2 diabetes — diabetes","text":"dataset trials reduction hsemoglobin A1c (HbA1c) patients type 2 diabetes(Ding Fu 2013) . Data reported study arm mean change baseline follow-. dataset includes 4 Randomised-Controlled Trials (RCTs), comparing 4 treatments.","code":""},{"path":"/reference/diabetes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Studies comparing treatments for type 2 diabetes — diabetes","text":"","code":"diabetes"},{"path":"/reference/diabetes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Studies comparing treatments for type 2 diabetes — diabetes","text":"data frame long format (one row per arm study), 28 rows 7 variables: studyID Study identifiers treatment Numeric data indicating treatment participants randomised time Numeric data indicating time observation measured (given weeks) y Numeric data indicating mean change baseline HbA1c study arm se Numeric data indicating standard error mean change baseline HbA1c study arm sd Numeric data indicating standard deviation mean change baseline HbA1c study arm n Numeric data indicating number participants arm time-point","code":""},{"path":"/reference/diabetes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Studies comparing treatments for type 2 diabetes — diabetes","text":"diabetes data frame long format (one row per observation, arm study), variables studyID, treatment, time, y, se, sd, n.","code":""},{"path":"/reference/diabetes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Studies comparing treatments for type 2 diabetes — diabetes","text":"Ding Y, Fu H (2013). “Bayesian indirect mixed treatment comparisons across longitudinal time points.” Statistics Medicine, 32, 2613-2628. doi:10.1002/sim.5688 .","code":""},{"path":"/reference/fitplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot fitted values from MBNMA model — fitplot","title":"Plot fitted values from MBNMA model — fitplot","text":"Plot fitted values MBNMA model","code":""},{"path":"/reference/fitplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot fitted values from MBNMA model — fitplot","text":"","code":"fitplot(   mbnma,   treat.labs = NULL,   disp.obs = TRUE,   n.iter = round(mbnma$BUGSoutput$n.iter/4),   n.thin = mbnma$BUGSoutput$n.thin,   ... )"},{"path":"/reference/fitplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot fitted values from MBNMA model — fitplot","text":"mbnma S3 object class \"mbnma\" generated running time-course MBNMA model treat.labs character vector treatment labels name graph panels. Can use mb.network()[[\"treatments\"]] original dataset doubt. disp.obs boolean object indicate whether raw data responses plotted points graph n.iter number total iterations per chain (including burn ;     default: 2000) n.thin thinning rate. Must positive integer.  Set     n.thin > 1 save memory computation time     n.iter large.  Default max(1, floor(n.chains *     (n.iter-n.burnin) / 1000)) thin     least 2000 simulations. ... Arguments sent ggplot2::ggplot()","code":""},{"path":"/reference/fitplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot fitted values from MBNMA model — fitplot","text":"Generates plot fitted values MBNMA model returns list containing plot (object class c(\"gg\", \"ggplot\")), data.frame posterior mean fitted values observation.","code":""},{"path":"/reference/fitplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot fitted values from MBNMA model — fitplot","text":"Fitted values plotted models converged successfully. fitted values (theta) monitored mbnma$parameters..save additional iterations run get results .","code":""},{"path":"/reference/fitplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot fitted values from MBNMA model — fitplot","text":"","code":"# \\donttest{ # Make network painnet <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Run MBNMA mbnma <- mb.run(painnet,   fun=temax(pool.emax=\"rel\", method.emax=\"common\",     pool.et50=\"abs\", method.et50=\"random\")) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 194 #>    Total graph size: 8210 #>  #> Initializing model #>   # Plot fitted values from the model # Monitor fitted values for 500 additional iterations fitplot(mbnma, n.iter=500) #> `theta` not monitored in mbnma$parameters.to.save. #> additional iterations will be run in order to obtain results  # }"},{"path":"/reference/gen.parameters.to.save.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically generate parameters to save for a dose-response MBNMA model — gen.parameters.to.save","title":"Automatically generate parameters to save for a dose-response MBNMA model — gen.parameters.to.save","text":"Automatically generate parameters save dose-response MBNMA model","code":""},{"path":"/reference/gen.parameters.to.save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically generate parameters to save for a dose-response MBNMA model — gen.parameters.to.save","text":"","code":"gen.parameters.to.save(fun, model)"},{"path":"/reference/gen.parameters.to.save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically generate parameters to save for a dose-response MBNMA model — gen.parameters.to.save","text":"fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser() model JAGS model written character object","code":""},{"path":"/reference/genmaxcols.html","id":null,"dir":"Reference","previous_headings":"","what":"Get large vector of distinct colours using Rcolorbrewer — genmaxcols","title":"Get large vector of distinct colours using Rcolorbrewer — genmaxcols","text":"Get large vector distinct colours using Rcolorbrewer","code":""},{"path":"/reference/genmaxcols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get large vector of distinct colours using Rcolorbrewer — genmaxcols","text":"","code":"genmaxcols()"},{"path":"/reference/genspline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates spline basis matrices for fitting to time-course function — genspline","title":"Generates spline basis matrices for fitting to time-course function — genspline","text":"Generates spline basis matrices fitting time-course function","code":""},{"path":"/reference/genspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates spline basis matrices for fitting to time-course function — genspline","text":"","code":"genspline(   x,   spline = \"bs\",   knots = 1,   degree = 1,   max.time = max(x),   boundaries = NULL )"},{"path":"/reference/genspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates spline basis matrices for fitting to time-course function — genspline","text":"x numeric vector indicating time points available dataset spline Indicates type spline function. Can either piecewise linear spline (\"ls\"), natural cubic spline (\"ns\") B-spline (\"bs\"). knots number/location knots. single integer given indicates number knots (equally spaced across range time-points). numeric vector given indicates quantiles knots proportion maximum study follow-dataset. example, maximum follow-time dataset 10 months, knots=c(0.1,0.5) indicate knots fitted 1 5 months follow-. degree positive integer giving degree polynomial spline function composed (e.g. degree=3 represents cubic spline). max.time number indicating maximum time calculate spline function. boundaries positive numeric vector length 2 represents time-points anchor B-spline natural cubic spline basis matrix. allows data extend beyond boundary knots, basis parameters depend x. default (boundaries=NULL)range x.","code":""},{"path":"/reference/genspline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates spline basis matrices for fitting to time-course function — genspline","text":"spline basis matrix number rows equal length(x) number columns equal number coefficients spline.","code":""},{"path":"/reference/genspline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates spline basis matrices for fitting to time-course function — genspline","text":"","code":"x <- 0:100  genspline(x) #>        1    2 #> 0   0.00 0.00 #> 1   0.02 0.00 #> 2   0.04 0.00 #> 3   0.06 0.00 #> 4   0.08 0.00 #> 5   0.10 0.00 #> 6   0.12 0.00 #> 7   0.14 0.00 #> 8   0.16 0.00 #> 9   0.18 0.00 #> 10  0.20 0.00 #> 11  0.22 0.00 #> 12  0.24 0.00 #> 13  0.26 0.00 #> 14  0.28 0.00 #> 15  0.30 0.00 #> 16  0.32 0.00 #> 17  0.34 0.00 #> 18  0.36 0.00 #> 19  0.38 0.00 #> 20  0.40 0.00 #> 21  0.42 0.00 #> 22  0.44 0.00 #> 23  0.46 0.00 #> 24  0.48 0.00 #> 25  0.50 0.00 #> 26  0.52 0.00 #> 27  0.54 0.00 #> 28  0.56 0.00 #> 29  0.58 0.00 #> 30  0.60 0.00 #> 31  0.62 0.00 #> 32  0.64 0.00 #> 33  0.66 0.00 #> 34  0.68 0.00 #> 35  0.70 0.00 #> 36  0.72 0.00 #> 37  0.74 0.00 #> 38  0.76 0.00 #> 39  0.78 0.00 #> 40  0.80 0.00 #> 41  0.82 0.00 #> 42  0.84 0.00 #> 43  0.86 0.00 #> 44  0.88 0.00 #> 45  0.90 0.00 #> 46  0.92 0.00 #> 47  0.94 0.00 #> 48  0.96 0.00 #> 49  0.98 0.00 #> 50  1.00 0.00 #> 51  0.98 0.02 #> 52  0.96 0.04 #> 53  0.94 0.06 #> 54  0.92 0.08 #> 55  0.90 0.10 #> 56  0.88 0.12 #> 57  0.86 0.14 #> 58  0.84 0.16 #> 59  0.82 0.18 #> 60  0.80 0.20 #> 61  0.78 0.22 #> 62  0.76 0.24 #> 63  0.74 0.26 #> 64  0.72 0.28 #> 65  0.70 0.30 #> 66  0.68 0.32 #> 67  0.66 0.34 #> 68  0.64 0.36 #> 69  0.62 0.38 #> 70  0.60 0.40 #> 71  0.58 0.42 #> 72  0.56 0.44 #> 73  0.54 0.46 #> 74  0.52 0.48 #> 75  0.50 0.50 #> 76  0.48 0.52 #> 77  0.46 0.54 #> 78  0.44 0.56 #> 79  0.42 0.58 #> 80  0.40 0.60 #> 81  0.38 0.62 #> 82  0.36 0.64 #> 83  0.34 0.66 #> 84  0.32 0.68 #> 85  0.30 0.70 #> 86  0.28 0.72 #> 87  0.26 0.74 #> 88  0.24 0.76 #> 89  0.22 0.78 #> 90  0.20 0.80 #> 91  0.18 0.82 #> 92  0.16 0.84 #> 93  0.14 0.86 #> 94  0.12 0.88 #> 95  0.10 0.90 #> 96  0.08 0.92 #> 97  0.06 0.94 #> 98  0.04 0.96 #> 99  0.02 0.98 #> 100 0.00 1.00  # Generate a quadratic B-spline with 1 equally spaced internal knot genspline(x, spline=\"bs\", knots=2, degree=2) #>           1       2       3      4 #> 0   0.00000 0.00000 0.00000 0.0000 #> 1   0.05865 0.00045 0.00000 0.0000 #> 2   0.11460 0.00180 0.00000 0.0000 #> 3   0.16785 0.00405 0.00000 0.0000 #> 4   0.21840 0.00720 0.00000 0.0000 #> 5   0.26625 0.01125 0.00000 0.0000 #> 6   0.31140 0.01620 0.00000 0.0000 #> 7   0.35385 0.02205 0.00000 0.0000 #> 8   0.39360 0.02880 0.00000 0.0000 #> 9   0.43065 0.03645 0.00000 0.0000 #> 10  0.46500 0.04500 0.00000 0.0000 #> 11  0.49665 0.05445 0.00000 0.0000 #> 12  0.52560 0.06480 0.00000 0.0000 #> 13  0.55185 0.07605 0.00000 0.0000 #> 14  0.57540 0.08820 0.00000 0.0000 #> 15  0.59625 0.10125 0.00000 0.0000 #> 16  0.61440 0.11520 0.00000 0.0000 #> 17  0.62985 0.13005 0.00000 0.0000 #> 18  0.64260 0.14580 0.00000 0.0000 #> 19  0.65265 0.16245 0.00000 0.0000 #> 20  0.66000 0.18000 0.00000 0.0000 #> 21  0.66465 0.19845 0.00000 0.0000 #> 22  0.66660 0.21780 0.00000 0.0000 #> 23  0.66585 0.23805 0.00000 0.0000 #> 24  0.66240 0.25920 0.00000 0.0000 #> 25  0.65625 0.28125 0.00000 0.0000 #> 26  0.64740 0.30420 0.00000 0.0000 #> 27  0.63585 0.32805 0.00000 0.0000 #> 28  0.62160 0.35280 0.00000 0.0000 #> 29  0.60465 0.37845 0.00000 0.0000 #> 30  0.58500 0.40500 0.00000 0.0000 #> 31  0.56265 0.43245 0.00000 0.0000 #> 32  0.53760 0.46080 0.00000 0.0000 #> 33  0.50985 0.49005 0.00000 0.0000 #> 34  0.48020 0.51960 0.00020 0.0000 #> 35  0.45125 0.54750 0.00125 0.0000 #> 36  0.42320 0.57360 0.00320 0.0000 #> 37  0.39605 0.59790 0.00605 0.0000 #> 38  0.36980 0.62040 0.00980 0.0000 #> 39  0.34445 0.64110 0.01445 0.0000 #> 40  0.32000 0.66000 0.02000 0.0000 #> 41  0.29645 0.67710 0.02645 0.0000 #> 42  0.27380 0.69240 0.03380 0.0000 #> 43  0.25205 0.70590 0.04205 0.0000 #> 44  0.23120 0.71760 0.05120 0.0000 #> 45  0.21125 0.72750 0.06125 0.0000 #> 46  0.19220 0.73560 0.07220 0.0000 #> 47  0.17405 0.74190 0.08405 0.0000 #> 48  0.15680 0.74640 0.09680 0.0000 #> 49  0.14045 0.74910 0.11045 0.0000 #> 50  0.12500 0.75000 0.12500 0.0000 #> 51  0.11045 0.74910 0.14045 0.0000 #> 52  0.09680 0.74640 0.15680 0.0000 #> 53  0.08405 0.74190 0.17405 0.0000 #> 54  0.07220 0.73560 0.19220 0.0000 #> 55  0.06125 0.72750 0.21125 0.0000 #> 56  0.05120 0.71760 0.23120 0.0000 #> 57  0.04205 0.70590 0.25205 0.0000 #> 58  0.03380 0.69240 0.27380 0.0000 #> 59  0.02645 0.67710 0.29645 0.0000 #> 60  0.02000 0.66000 0.32000 0.0000 #> 61  0.01445 0.64110 0.34445 0.0000 #> 62  0.00980 0.62040 0.36980 0.0000 #> 63  0.00605 0.59790 0.39605 0.0000 #> 64  0.00320 0.57360 0.42320 0.0000 #> 65  0.00125 0.54750 0.45125 0.0000 #> 66  0.00020 0.51960 0.48020 0.0000 #> 67  0.00000 0.49005 0.50985 0.0001 #> 68  0.00000 0.46080 0.53760 0.0016 #> 69  0.00000 0.43245 0.56265 0.0049 #> 70  0.00000 0.40500 0.58500 0.0100 #> 71  0.00000 0.37845 0.60465 0.0169 #> 72  0.00000 0.35280 0.62160 0.0256 #> 73  0.00000 0.32805 0.63585 0.0361 #> 74  0.00000 0.30420 0.64740 0.0484 #> 75  0.00000 0.28125 0.65625 0.0625 #> 76  0.00000 0.25920 0.66240 0.0784 #> 77  0.00000 0.23805 0.66585 0.0961 #> 78  0.00000 0.21780 0.66660 0.1156 #> 79  0.00000 0.19845 0.66465 0.1369 #> 80  0.00000 0.18000 0.66000 0.1600 #> 81  0.00000 0.16245 0.65265 0.1849 #> 82  0.00000 0.14580 0.64260 0.2116 #> 83  0.00000 0.13005 0.62985 0.2401 #> 84  0.00000 0.11520 0.61440 0.2704 #> 85  0.00000 0.10125 0.59625 0.3025 #> 86  0.00000 0.08820 0.57540 0.3364 #> 87  0.00000 0.07605 0.55185 0.3721 #> 88  0.00000 0.06480 0.52560 0.4096 #> 89  0.00000 0.05445 0.49665 0.4489 #> 90  0.00000 0.04500 0.46500 0.4900 #> 91  0.00000 0.03645 0.43065 0.5329 #> 92  0.00000 0.02880 0.39360 0.5776 #> 93  0.00000 0.02205 0.35385 0.6241 #> 94  0.00000 0.01620 0.31140 0.6724 #> 95  0.00000 0.01125 0.26625 0.7225 #> 96  0.00000 0.00720 0.21840 0.7744 #> 97  0.00000 0.00405 0.16785 0.8281 #> 98  0.00000 0.00180 0.11460 0.8836 #> 99  0.00000 0.00045 0.05865 0.9409 #> 100 0.00000 0.00000 0.00000 1.0000  # Generate a natural spline with 2 knots at selected quantiles genspline(x, spline=\"ns\", knots=c(0.1, 0.5)) #>                1          2           3 #> 0    0.000000000 0.00000000  0.00000000 #> 1   -0.014156667 0.03969467 -0.02551800 #> 2   -0.028112452 0.07916287 -0.05089041 #> 3   -0.041666470 0.11817812 -0.07597165 #> 4   -0.054617838 0.15651395 -0.10061611 #> 5   -0.066765674 0.19394389 -0.12467821 #> 6   -0.077909094 0.23024146 -0.14801237 #> 7   -0.087847215 0.26518020 -0.17047299 #> 8   -0.096379153 0.29853363 -0.19191448 #> 9   -0.103304027 0.33007527 -0.21219125 #> 10  -0.108420951 0.35957866 -0.23115771 #> 11  -0.111576347 0.38686644 -0.24869787 #> 12  -0.112805841 0.41195769 -0.26481407 #> 13  -0.112192366 0.43492063 -0.27953826 #> 14  -0.109818852 0.45582345 -0.29290238 #> 15  -0.105768230 0.47473438 -0.30493837 #> 16  -0.100123432 0.49172161 -0.31567818 #> 17  -0.092967387 0.50685335 -0.32515374 #> 18  -0.084383028 0.52019781 -0.33339701 #> 19  -0.074453285 0.53182320 -0.34043991 #> 20  -0.063261088 0.54179771 -0.34631440 #> 21  -0.050889370 0.55018957 -0.35105242 #> 22  -0.037421061 0.55706697 -0.35468591 #> 23  -0.022939091 0.56249812 -0.35724681 #> 24  -0.007526393 0.56655123 -0.35876706 #> 25   0.008734103 0.56929451 -0.35927861 #> 26   0.025759467 0.57079616 -0.35881340 #> 27   0.043466767 0.57112439 -0.35740338 #> 28   0.061773071 0.57034740 -0.35508047 #> 29   0.080595450 0.56853341 -0.35187663 #> 30   0.099850972 0.56575061 -0.34782381 #> 31   0.119456707 0.56206722 -0.34295393 #> 32   0.139329723 0.55755144 -0.33729894 #> 33   0.159387088 0.55227149 -0.33089080 #> 34   0.179545874 0.54629555 -0.32376143 #> 35   0.199723147 0.53969185 -0.31594278 #> 36   0.219835978 0.53252859 -0.30746679 #> 37   0.239801435 0.52487398 -0.29836542 #> 38   0.259536588 0.51679622 -0.28867059 #> 39   0.278958505 0.50836352 -0.27841425 #> 40   0.297984256 0.49964408 -0.26762834 #> 41   0.316530909 0.49070612 -0.25634481 #> 42   0.334515533 0.48161784 -0.24459560 #> 43   0.351855199 0.47244744 -0.23241264 #> 44   0.368466973 0.46326314 -0.21982789 #> 45   0.384267926 0.45413314 -0.20687329 #> 46   0.399175127 0.44512564 -0.19358077 #> 47   0.413105645 0.43630886 -0.17998228 #> 48   0.425976548 0.42775100 -0.16610977 #> 49   0.437704905 0.41952026 -0.15199517 #> 50   0.448207787 0.41168486 -0.13767043 #> 51   0.457420444 0.40430009 -0.12316276 #> 52   0.465350863 0.39736958 -0.10848045 #> 53   0.472025210 0.39088408 -0.09362707 #> 54   0.477469654 0.38483430 -0.07860618 #> 55   0.481710364 0.37921098 -0.06342134 #> 56   0.484773507 0.37400485 -0.04807613 #> 57   0.486685252 0.36920663 -0.03257410 #> 58   0.487471767 0.36480705 -0.01691882 #> 59   0.487159219 0.36079685 -0.00111385 #> 60   0.485773778 0.35716676  0.01483724 #> 61   0.483341610 0.35390749  0.03093090 #> 62   0.479888885 0.35100979  0.04716355 #> 63   0.475441771 0.34846438  0.06353163 #> 64   0.470026435 0.34626198  0.08003158 #> 65   0.463669046 0.34439334  0.09665984 #> 66   0.456395772 0.34284917  0.11341283 #> 67   0.448232780 0.34162021  0.13028700 #> 68   0.439206240 0.34069719  0.14727879 #> 69   0.429342320 0.34007084  0.16438462 #> 70   0.418667187 0.33973188  0.18160094 #> 71   0.407207009 0.33967104  0.19892417 #> 72   0.394987955 0.33987906  0.21635076 #> 73   0.382036194 0.34034666  0.23387715 #> 74   0.368377892 0.34106457  0.25149976 #> 75   0.354039218 0.34202352  0.26921504 #> 76   0.339046341 0.34321424  0.28701941 #> 77   0.323425429 0.34462747  0.30490933 #> 78   0.307202649 0.34625392  0.32288121 #> 79   0.290404170 0.34808433  0.34093151 #> 80   0.273056159 0.35010942  0.35905664 #> 81   0.255184786 0.35231993  0.37725306 #> 82   0.236816218 0.35470659  0.39551719 #> 83   0.217976624 0.35726012  0.41384548 #> 84   0.198692171 0.35997126  0.43223435 #> 85   0.178989027 0.36283072  0.45068025 #> 86   0.158893362 0.36582925  0.46917961 #> 87   0.138431342 0.36895757  0.48772886 #> 88   0.117629137 0.37220642  0.50632445 #> 89   0.096512914 0.37556651  0.52496280 #> 90   0.075108841 0.37902858  0.54364036 #> 91   0.053443087 0.38258336  0.56235356 #> 92   0.031541819 0.38622157  0.58109883 #> 93   0.009431207 0.38993395  0.59987262 #> 94  -0.012862583 0.39371123  0.61867135 #> 95  -0.035313382 0.39754414  0.63749147 #> 96  -0.057895021 0.40142339  0.65632941 #> 97  -0.080581333 0.40533973  0.67518160 #> 98  -0.103346149 0.40928388  0.69404449 #> 99  -0.126163302 0.41324658  0.71291450 #> 100 -0.149006623 0.41721854  0.73178808  # Generate a piecewise linear spline with 3 equally spaced knots genspline(x, spline=\"ls\", knots=3) #>      1  2  3  4 #> 0    0  0  0  0 #> 1    1  0  0  0 #> 2    2  0  0  0 #> 3    3  0  0  0 #> 4    4  0  0  0 #> 5    5  0  0  0 #> 6    6  0  0  0 #> 7    7  0  0  0 #> 8    8  0  0  0 #> 9    9  0  0  0 #> 10  10  0  0  0 #> 11  11  0  0  0 #> 12  12  0  0  0 #> 13  13  0  0  0 #> 14  14  0  0  0 #> 15  15  0  0  0 #> 16  16  0  0  0 #> 17  17  0  0  0 #> 18  18  0  0  0 #> 19  19  0  0  0 #> 20  20  0  0  0 #> 21  21  0  0  0 #> 22  22  0  0  0 #> 23  23  0  0  0 #> 24  24  0  0  0 #> 25  25  0  0  0 #> 26  25  1  0  0 #> 27  25  2  0  0 #> 28  25  3  0  0 #> 29  25  4  0  0 #> 30  25  5  0  0 #> 31  25  6  0  0 #> 32  25  7  0  0 #> 33  25  8  0  0 #> 34  25  9  0  0 #> 35  25 10  0  0 #> 36  25 11  0  0 #> 37  25 12  0  0 #> 38  25 13  0  0 #> 39  25 14  0  0 #> 40  25 15  0  0 #> 41  25 16  0  0 #> 42  25 17  0  0 #> 43  25 18  0  0 #> 44  25 19  0  0 #> 45  25 20  0  0 #> 46  25 21  0  0 #> 47  25 22  0  0 #> 48  25 23  0  0 #> 49  25 24  0  0 #> 50  25 25  0  0 #> 51  25 25  1  0 #> 52  25 25  2  0 #> 53  25 25  3  0 #> 54  25 25  4  0 #> 55  25 25  5  0 #> 56  25 25  6  0 #> 57  25 25  7  0 #> 58  25 25  8  0 #> 59  25 25  9  0 #> 60  25 25 10  0 #> 61  25 25 11  0 #> 62  25 25 12  0 #> 63  25 25 13  0 #> 64  25 25 14  0 #> 65  25 25 15  0 #> 66  25 25 16  0 #> 67  25 25 17  0 #> 68  25 25 18  0 #> 69  25 25 19  0 #> 70  25 25 20  0 #> 71  25 25 21  0 #> 72  25 25 22  0 #> 73  25 25 23  0 #> 74  25 25 24  0 #> 75  25 25 25  0 #> 76  25 25 25  1 #> 77  25 25 25  2 #> 78  25 25 25  3 #> 79  25 25 25  4 #> 80  25 25 25  5 #> 81  25 25 25  6 #> 82  25 25 25  7 #> 83  25 25 25  8 #> 84  25 25 25  9 #> 85  25 25 25 10 #> 86  25 25 25 11 #> 87  25 25 25 12 #> 88  25 25 25 13 #> 89  25 25 25 14 #> 90  25 25 25 15 #> 91  25 25 25 16 #> 92  25 25 25 17 #> 93  25 25 25 18 #> 94  25 25 25 19 #> 95  25 25 25 20 #> 96  25 25 25 21 #> 97  25 25 25 22 #> 98  25 25 25 23 #> 99  25 25 25 24 #> 100 25 25 25 25"},{"path":"/reference/get.closest.time.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataset with a single time point from each study closest to specified time — get.closest.time","title":"Create a dataset with a single time point from each study closest to specified time — get.closest.time","text":"Takes closest time point arm study specified time (t) within mb.network object. Useful network plots exploring standard NMA.","code":""},{"path":"/reference/get.closest.time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataset with a single time point from each study closest to specified time — get.closest.time","text":"","code":"get.closest.time(network, t = stats::median(network$data.ab$time))"},{"path":"/reference/get.closest.time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataset with a single time point from each study closest to specified time — get.closest.time","text":"network object class \"mb.network\". t time point ","code":""},{"path":"/reference/get.closest.time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataset with a single time point from each study closest to specified time — get.closest.time","text":"data frame long format responses closest time point t arm study.","code":""},{"path":"/reference/get.closest.time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dataset with a single time point from each study closest to specified time — get.closest.time","text":"","code":"# Using the alogliptin dataset network <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Take a single follow-up time from each study... # ...closest to 7 get.closest.time(network, t=7) #> # A tibble: 46 × 13 #> # Groups:   studyID, arm [46] #>    studyID  time treatment  narm   arm     y     se     n clinical…¹ agent  dose #>      <dbl> <dbl>     <dbl> <int> <int> <dbl>  <dbl> <dbl> <chr>      <chr> <dbl> #>  1       1     2         1     5     1  0    0.0216    75 NCT012634… alog…  0    #>  2       1     2         2     5     2 -0.16 0.0172    79 NCT012634… alog…  6.25 #>  3       1     2         3     5     3 -0.17 0.0212    84 NCT012634… alog… 12.5  #>  4       1     2         4     5     4 -0.16 0.0210    79 NCT012634… alog… 25    #>  5       1     2         5     5     5 -0.15 0.0203    79 NCT012634… alog… 50    #>  6       2     4         1     3     1 -0.11 0.052     63 NCT002864… alog…  0    #>  7       2     4         3     3     2 -0.37 0.035    131 NCT002864… alog… 12.5  #>  8       2     4         4     3     3 -0.45 0.036    128 NCT002864… alog… 25    #>  9       3    12         2     4     1 -0.55 0.0726    93 NCT012634… alog…  6.25 #> 10       3    12         3     4     2 -0.7  0.0548    97 NCT012634… alog… 12.5  #> # … with 36 more rows, 2 more variables: fupcount <int>, fups <int>, and #> #   abbreviated variable name ¹​clinicaltrialGov_ID  # ...closest to 20 get.closest.time(network, t=7) #> # A tibble: 46 × 13 #> # Groups:   studyID, arm [46] #>    studyID  time treatment  narm   arm     y     se     n clinical…¹ agent  dose #>      <dbl> <dbl>     <dbl> <int> <int> <dbl>  <dbl> <dbl> <chr>      <chr> <dbl> #>  1       1     2         1     5     1  0    0.0216    75 NCT012634… alog…  0    #>  2       1     2         2     5     2 -0.16 0.0172    79 NCT012634… alog…  6.25 #>  3       1     2         3     5     3 -0.17 0.0212    84 NCT012634… alog… 12.5  #>  4       1     2         4     5     4 -0.16 0.0210    79 NCT012634… alog… 25    #>  5       1     2         5     5     5 -0.15 0.0203    79 NCT012634… alog… 50    #>  6       2     4         1     3     1 -0.11 0.052     63 NCT002864… alog…  0    #>  7       2     4         3     3     2 -0.37 0.035    131 NCT002864… alog… 12.5  #>  8       2     4         4     3     3 -0.45 0.036    128 NCT002864… alog… 25    #>  9       3    12         2     4     1 -0.55 0.0726    93 NCT012634… alog…  6.25 #> 10       3    12         3     4     2 -0.7  0.0548    97 NCT012634… alog… 12.5  #> # … with 36 more rows, 2 more variables: fupcount <int>, fups <int>, and #> #   abbreviated variable name ¹​clinicaltrialGov_ID  # ...closest to the median follow-up across all studies get.closest.time(network, t=26) #> # A tibble: 46 × 13 #> # Groups:   studyID, arm [46] #>    studyID  time treatment  narm   arm     y     se     n clinical…¹ agent  dose #>      <dbl> <dbl>     <dbl> <int> <int> <dbl>  <dbl> <dbl> <chr>      <chr> <dbl> #>  1       1     2         1     5     1  0    0.0216    75 NCT012634… alog…  0    #>  2       1     2         2     5     2 -0.16 0.0172    79 NCT012634… alog…  6.25 #>  3       1     2         3     5     3 -0.17 0.0212    84 NCT012634… alog… 12.5  #>  4       1     2         4     5     4 -0.16 0.0210    79 NCT012634… alog… 25    #>  5       1     2         5     5     5 -0.15 0.0203    79 NCT012634… alog… 50    #>  6       2     4         1     3     1 -0.11 0.052     63 NCT002864… alog…  0    #>  7       2     4         3     3     2 -0.37 0.035    131 NCT002864… alog… 12.5  #>  8       2     4         4     3     3 -0.45 0.036    128 NCT002864… alog… 25    #>  9       3    12         2     4     1 -0.55 0.0726    93 NCT012634… alog…  6.25 #> 10       3    12         3     4     2 -0.7  0.0548    97 NCT012634… alog… 12.5  #> # … with 36 more rows, 2 more variables: fupcount <int>, fups <int>, and #> #   abbreviated variable name ¹​clinicaltrialGov_ID"},{"path":"/reference/get.earliest.time.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataset with the earliest time point only — get.earliest.time","title":"Create a dataset with the earliest time point only — get.earliest.time","text":"Takes earliest time point arm study within mb.network object. Useful network plots.","code":""},{"path":"/reference/get.earliest.time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataset with the earliest time point only — get.earliest.time","text":"","code":"get.earliest.time(network)"},{"path":"/reference/get.earliest.time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataset with the earliest time point only — get.earliest.time","text":"network object class \"mb.network\".","code":""},{"path":"/reference/get.earliest.time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataset with the earliest time point only — get.earliest.time","text":"data frame long format responses earliest time point arm study.","code":""},{"path":"/reference/get.earliest.time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dataset with the earliest time point only — get.earliest.time","text":"","code":"# Using the alogliptin dataset network <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Generate a data frame with only the earliest time point included in each study get.earliest.time(network) #>    studyID time treatment narm arm     y         se   n clinicaltrialGov_ID #> 1        1    2         1    5   1  0.00 0.02159290  75         NCT01263470 #> 2        1    2         2    5   2 -0.16 0.01721384  79         NCT01263470 #> 3        1    2         3    5   3 -0.17 0.02116714  84         NCT01263470 #> 4        1    2         4    5   4 -0.16 0.02103914  79         NCT01263470 #> 5        1    2         5    5   5 -0.15 0.02025158  79         NCT01263470 #> 6        2    4         1    3   1 -0.11 0.05200000  63         NCT00286455 #> 7        2    4         3    3   2 -0.37 0.03500000 131         NCT00286455 #> 8        2    4         4    3   3 -0.45 0.03600000 128         NCT00286455 #> 9        3   12         2    4   1 -0.55 0.07258662  93         NCT01263496 #> 10       3   12         3    4   2 -0.70 0.05482869  97         NCT01263496 #> 11       3   12         4    4   3 -0.74 0.05363391  94         NCT01263496 #> 12       3   12         5    4   4 -0.86 0.05157106  94         NCT01263496 #> 13       4    4         1    3   1 -0.14 0.04200000  90         NCT00286494 #> 14       4    4         3    3   2 -0.40 0.02900000 182         NCT00286494 #> 15       4    4         4    3   3 -0.45 0.03000000 176         NCT00286494 #> 16       5    4         1    3   1 -0.18 0.04200000  89         NCT00286468 #> 17       5    4         3    3   2 -0.40 0.02800000 191         NCT00286468 #> 18       5    4         4    3   3 -0.46 0.02900000 186         NCT00286468 #> 19       6    4         1    3   1 -0.10 0.04400000  91         NCT00286442 #> 20       6    4         3    3   2 -0.36 0.03100000 188         NCT00286442 #> 21       6    4         4    3   3 -0.40 0.03100000 187         NCT00286442 #> 22       7    2         1    3   1 -0.04 0.01734459 115         NCT01318070 #> 23       7    2         3    3   2 -0.22 0.01430194 110         NCT01318070 #> 24       7    2         4    3   3 -0.22 0.01461703 111         NCT01318070 #> 25       8    4         1    3   1 -0.26 0.04500000 114         NCT00286429 #> 26       8    4         3    3   2 -0.47 0.04500000 116         NCT00286429 #> 27       8    4         4    3   3 -0.58 0.04500000 116         NCT00286429 #> 28       9    2         1    3   1  0.08 0.02946134 103         NCT01318083 #> 29       9    2         3    3   2 -0.12 0.02392617 104         NCT01318083 #> 30       9    2         4    3   3 -0.13 0.02019996 104         NCT01318083 #> 31      10    2         1    3   1 -0.01 0.02092458  74         NCT01263483 #> 32      10    2         3    3   2 -0.19 0.01709147  76         NCT01263483 #> 33      10    2         4    3   3 -0.21 0.01968904  79         NCT01263483 #> 34      11    6         1    6   1  0.02 0.09700000  41         NCT00755846 #> 35      11    6         2    6   2 -0.12 0.09500000  42         NCT00755846 #> 36      11    6         3    6   3 -0.35 0.09600000  42         NCT00755846 #> 37      11    6         4    6   4 -0.36 0.09300000  45         NCT00755846 #> 38      11    6         5    6   5 -0.32 0.09700000  43         NCT00755846 #> 39      11    6         6    6   6 -0.31 0.09400000  44         NCT00755846 #> 40      12    8         3    2   1 -0.68 0.02888231 165         NCT01318122 #> 41      12    8         4    2   2 -0.73 0.03240606 164         NCT01318122 #> 42      13    8         3    2   1 -0.69 0.04630668 107         NCT01263509 #> 43      13    8         4    2   2 -0.79 0.04170000 100         NCT01263509 #> 44      14    2         1    3   1  0.06 0.01970000 100         NCT01318109 #> 45      14    2         3    3   2 -0.13 0.02043441  92         NCT01318109 #> 46      14    2         4    3   3 -0.13 0.01530931  96         NCT01318109 #>         agent   dose fupcount fups #> 1  alogliptin   0.00        1    4 #> 2  alogliptin   6.25        1    4 #> 3  alogliptin  12.50        1    4 #> 4  alogliptin  25.00        1    4 #> 5  alogliptin  50.00        1    4 #> 6  alogliptin   0.00        1    6 #> 7  alogliptin  12.50        1    6 #> 8  alogliptin  25.00        1    6 #> 9  alogliptin   6.25        1    8 #> 10 alogliptin  12.50        1    8 #> 11 alogliptin  25.00        1    8 #> 12 alogliptin  50.00        1    8 #> 13 alogliptin   0.00        1    6 #> 14 alogliptin  12.50        1    6 #> 15 alogliptin  25.00        1    6 #> 16 alogliptin   0.00        1    5 #> 17 alogliptin  12.50        1    5 #> 18 alogliptin  25.00        1    5 #> 19 alogliptin   0.00        1    6 #> 20 alogliptin  12.50        1    6 #> 21 alogliptin  25.00        1    6 #> 22 alogliptin   0.00        1    4 #> 23 alogliptin  12.50        1    4 #> 24 alogliptin  25.00        1    4 #> 25 alogliptin   0.00        1    6 #> 26 alogliptin  12.50        1    6 #> 27 alogliptin  25.00        1    6 #> 28 alogliptin   0.00        1    4 #> 29 alogliptin  12.50        1    4 #> 30 alogliptin  25.00        1    4 #> 31 alogliptin   0.00        1    4 #> 32 alogliptin  12.50        1    4 #> 33 alogliptin  25.00        1    4 #> 34 alogliptin   0.00        1    2 #> 35 alogliptin   6.25        1    2 #> 36 alogliptin  12.50        1    2 #> 37 alogliptin  25.00        1    2 #> 38 alogliptin  50.00        1    2 #> 39 alogliptin 100.00        1    2 #> 40 alogliptin  12.50        1    8 #> 41 alogliptin  25.00        1    8 #> 42 alogliptin  12.50        1    9 #> 43 alogliptin  25.00        1    9 #> 44 alogliptin   0.00        1    4 #> 45 alogliptin  12.50        1    4 #> 46 alogliptin  25.00        1    4"},{"path":"/reference/get.latest.time.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataset with the latest time point only — get.latest.time","title":"Create a dataset with the latest time point only — get.latest.time","text":"Takes latest time point arm study within mb.network object. Useful network plots.","code":""},{"path":"/reference/get.latest.time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataset with the latest time point only — get.latest.time","text":"","code":"get.latest.time(network)"},{"path":"/reference/get.latest.time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataset with the latest time point only — get.latest.time","text":"network object class \"mb.network\".","code":""},{"path":"/reference/get.latest.time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataset with the latest time point only — get.latest.time","text":"data frame long format responses latest time point arm study.","code":""},{"path":"/reference/get.latest.time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dataset with the latest time point only — get.latest.time","text":"","code":"# Using the alogliptin dataset network <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Generate a data frame with only the latest time point included in each study get.latest.time(network) #>    studyID time treatment narm arm     y         se   n clinicaltrialGov_ID #> 1        1   12         1    5   1  0.06 0.05311623  75         NCT01263470 #> 2        1   12         2    5   2 -0.51 0.07650598  79         NCT01263470 #> 3        1   12         3    5   3 -0.70 0.06219210  84         NCT01263470 #> 4        1   12         4    5   4 -0.76 0.06187984  79         NCT01263470 #> 5        1   12         5    5   5 -0.82 0.05287913  79         NCT01263470 #> 6        2   26         1    3   1 -0.02 0.09400000  63         NCT00286455 #> 7        2   26         3    3   2 -0.56 0.06500000 131         NCT00286455 #> 8        2   26         4    3   3 -0.59 0.06600000 128         NCT00286455 #> 9        3   40         2    4   1 -0.33 0.07622222  81         NCT01263496 #> 10       3   40         3    4   2 -0.48 0.09923275  79         NCT01263496 #> 11       3   40         4    4   3 -0.66 0.07808110  79         NCT01263496 #> 12       3   40         5    4   4 -0.77 0.08346834  84         NCT01263496 #> 13       4   26         1    3   1 -0.19 0.08100000  95         NCT00286494 #> 14       4   26         3    3   2 -0.66 0.05600000 196         NCT00286494 #> 15       4   26         4    3   3 -0.80 0.05600000 195         NCT00286494 #> 16       5   26         1    3   1  0.01 0.08400000  97         NCT00286468 #> 17       5   26         3    3   2 -0.38 0.05800000 201         NCT00286468 #> 18       5   26         4    3   3 -0.52 0.05800000 197         NCT00286468 #> 19       6   26         1    3   1 -0.10 0.07600000 103         NCT00286442 #> 20       6   26         3    3   2 -0.61 0.05300000 210         NCT00286442 #> 21       6   26         4    3   3 -0.59 0.05400000 203         NCT00286442 #> 22       7   12         1    3   1 -0.19 0.05128776 115         NCT01318070 #> 23       7   12         3    3   2 -0.91 0.04176295 111         NCT01318070 #> 24       7   12         4    3   3 -0.97 0.04891748 113         NCT01318070 #> 25       8   26         1    3   1 -0.13 0.07700000 126         NCT00286429 #> 26       8   26         3    3   2 -0.63 0.07600000 130         NCT00286429 #> 27       8   26         4    3   3 -0.71 0.07800000 126         NCT00286429 #> 28       9   12         1    3   1  0.34 0.06010509 103         NCT01318083 #> 29       9   12         3    3   2 -0.60 0.05491252 104         NCT01318083 #> 30       9   12         4    3   3 -0.66 0.05491252 104         NCT01318083 #> 31      10   12         1    3   1  0.04 0.05347391  74         NCT01263483 #> 32      10   12         3    3   2 -0.96 0.06308933  76         NCT01263483 #> 33      10   12         4    3   3 -0.91 0.05400422  79         NCT01263483 #> 34      11   12         1    6   1 -0.01 0.13430944  41         NCT00755846 #> 35      11   12         2    6   2 -0.19 0.12035661  42         NCT00755846 #> 36      11   12         3    6   3 -0.54 0.12189965  42         NCT00755846 #> 37      11   12         4    6   4 -0.56 0.11627553  45         NCT00755846 #> 38      11   12         5    6   5 -0.44 0.12352384  43         NCT00755846 #> 39      11   12         6    6   6 -0.51 0.11909698  44         NCT00755846 #> 40      12   36         3    2   1 -0.67 0.04742520 147         NCT01318122 #> 41      12   36         4    2   2 -0.69 0.04874593 151         NCT01318122 #> 42      13   40         3    2   1 -0.78 0.08194019  82         NCT01263509 #> 43      13   40         4    2   2 -0.92 0.07608902  78         NCT01263509 #> 44      14   12         1    3   1  0.21 0.06400000 100         NCT01318109 #> 45      14   12         3    3   2 -0.54 0.05838404  92         NCT01318109 #> 46      14   12         4    3   3 -0.64 0.05001042  96         NCT01318109 #>         agent   dose fupcount fups #> 1  alogliptin   0.00        4    4 #> 2  alogliptin   6.25        4    4 #> 3  alogliptin  12.50        4    4 #> 4  alogliptin  25.00        4    4 #> 5  alogliptin  50.00        4    4 #> 6  alogliptin   0.00        6    6 #> 7  alogliptin  12.50        6    6 #> 8  alogliptin  25.00        6    6 #> 9  alogliptin   6.25        8    8 #> 10 alogliptin  12.50        8    8 #> 11 alogliptin  25.00        8    8 #> 12 alogliptin  50.00        8    8 #> 13 alogliptin   0.00        6    6 #> 14 alogliptin  12.50        6    6 #> 15 alogliptin  25.00        6    6 #> 16 alogliptin   0.00        5    5 #> 17 alogliptin  12.50        5    5 #> 18 alogliptin  25.00        5    5 #> 19 alogliptin   0.00        6    6 #> 20 alogliptin  12.50        6    6 #> 21 alogliptin  25.00        6    6 #> 22 alogliptin   0.00        4    4 #> 23 alogliptin  12.50        4    4 #> 24 alogliptin  25.00        4    4 #> 25 alogliptin   0.00        6    6 #> 26 alogliptin  12.50        6    6 #> 27 alogliptin  25.00        6    6 #> 28 alogliptin   0.00        4    4 #> 29 alogliptin  12.50        4    4 #> 30 alogliptin  25.00        4    4 #> 31 alogliptin   0.00        4    4 #> 32 alogliptin  12.50        4    4 #> 33 alogliptin  25.00        4    4 #> 34 alogliptin   0.00        2    2 #> 35 alogliptin   6.25        2    2 #> 36 alogliptin  12.50        2    2 #> 37 alogliptin  25.00        2    2 #> 38 alogliptin  50.00        2    2 #> 39 alogliptin 100.00        2    2 #> 40 alogliptin  12.50        8    8 #> 41 alogliptin  25.00        8    8 #> 42 alogliptin  12.50        9    9 #> 43 alogliptin  25.00        9    9 #> 44 alogliptin   0.00        4    4 #> 45 alogliptin  12.50        4    4 #> 46 alogliptin  25.00        4    4"},{"path":"/reference/get.model.vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MBNMA model values — get.model.vals","title":"Get MBNMA model values — get.model.vals","text":"Extracts specific information required prediction time-course MBNMA model","code":""},{"path":"/reference/get.model.vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MBNMA model values — get.model.vals","text":"","code":"get.model.vals(mbnma, E0 = 0, level = \"treatments\", lim = \"cred\")"},{"path":"/reference/get.model.vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MBNMA model values — get.model.vals","text":"mbnma S3 object class \"mbnma\" generated running time-course MBNMA model E0 object indicate value(s) use response time = 0 prediction. can take number different formats depending used/calculated. default 0 may lead non-sensical predictions Ratio Means modeled. numeric() single numeric value representing deterministic response time = 0 formula() formula representing stochastic distribution response time = 0. specified random number generator (RNG) given string, can take RNG distribution function exists R. example: ~rnorm(n, 7, 0.5). level Can take either \"treatment\" make predictions treatments, \"class\" make predictions classes (case object must class effect model). lim Specifies calculation either 95% credible intervals (lim=\"cred\") 95% prediction intervals (lim=\"pred\").","code":""},{"path":"/reference/get.model.vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MBNMA model values — get.model.vals","text":"list containing named elements correspond different time-course parameters mbnma. elements contain MCMC results either taken directly mbnma (case random time-course parameters specified method=\"random\") randomly generated using parameter values estimated mbnma. Additional elements contain following values: timecourse character object specifies time-course used mbnma terms alpha, beta, mu, d time. Consistency relative time-course parameters specified terms mu d. time.params character vector indicates different time-course parameters required prediction @noRd","code":""},{"path":"/reference/get.prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current priors from JAGS model code — get.prior","title":"Get current priors from JAGS model code — get.prior","text":"Identical get.prior() MBNMAdose. function takes JAGS model presented string identifies prior values used calculation.","code":""},{"path":"/reference/get.prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current priors from JAGS model code — get.prior","text":"","code":"get.prior(model)"},{"path":"/reference/get.prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get current priors from JAGS model code — get.prior","text":"model character object JAGS MBNMA model code","code":""},{"path":"/reference/get.prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current priors from JAGS model code — get.prior","text":"character vector, element line JAGS code corresponding prior JAGS code.","code":""},{"path":"/reference/get.prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get current priors from JAGS model code — get.prior","text":"Even MBNMA model initialised successfully results calculated, JAGS model saved MBNMA$model.arg$jagscode therefore priors can still obtained. allows priors changed even failing models, may help solve issues initialisation.","code":""},{"path":"/reference/get.prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get current priors from JAGS model code — get.prior","text":"","code":"# \\donttest{ # Create mb.network object using an MBNMAtime dataset network <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Create mb.network object using an MBNMAdose dataset  # Run linear MBNMA result <- mb.run(network, fun=tpoly(degree=1,     pool.1=\"rel\", method.1=\"random\")) #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 163 #>    Total graph size: 7701 #>  #> Initializing model #>   # Obtain model prior values get.prior(result$model.arg$jagscode) #> $mu.1 #> [1] \"dnorm(0,0.0001)\" #>  #> $alpha #> [1] \"dnorm(0,0.0001)\" #>  #> $d.1 #> [1] \"dnorm(0,0.001)\" #>  #> $sd.beta.1 #> [1] \"dnorm(0,0.05) T(0,)\" #>   # ...also equivalent to print(result$model.arg$priors) #> $mu.1 #> [1] \"dnorm(0,0.0001)\" #>  #> $alpha #> [1] \"dnorm(0,0.0001)\" #>  #> $d.1 #> [1] \"dnorm(0,0.001)\" #>  #> $sd.beta.1 #> [1] \"dnorm(0,0.05) T(0,)\" #>  # }"},{"path":"/reference/get.relative.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates relative effects/mean differences at a particular time-point — get.relative","title":"Calculates relative effects/mean differences at a particular time-point — get.relative","text":"Uses mbnma time-course parameter estimates calculate treatment differences treatments classes particular time-point. Can used compare treatments evaluated studies different follow-times, even compare treatments different MBNMA models via common comparator.","code":""},{"path":"/reference/get.relative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates relative effects/mean differences at a particular time-point — get.relative","text":"","code":"get.relative(   mbnma,   mbnma.add = NULL,   time = max(mbnma$model.arg$jagsdata$time, na.rm = TRUE),   treats = unique(c(mbnma$network$treatments, mbnma.add$network$treatments)),   classes = NULL,   lim = \"cred\" )"},{"path":"/reference/get.relative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates relative effects/mean differences at a particular time-point — get.relative","text":"mbnma S3 object class \"mbnma\" generated running time-course MBNMA model mbnma.add S3 object class(\"mbnma\") generated running time-course MBNMA model. specified results two different MBNMA models combined perform 2-stage MBNMA (see Details). time numeric value time estimate relative effects/mean differences. treats character vector treatment names calculate relative effects/mean differences. Must subset mbnma$network$treatments classes character vector class names calculate relative effects/mean differences . Must subset mbnma$network$classes. works class effect models. lim Specifies calculation either 95% credible intervals (lim=\"cred\") 95% prediction intervals (lim=\"pred\").","code":""},{"path":"/reference/get.relative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates relative effects/mean differences at a particular time-point — get.relative","text":"object class \"relative.array\" list containing: time-point results estimated Matrices posterior means, medians, SDs upper lower 95% credible intervals differences treatment array containing MCMC results differences treatments specified treats classes specified classes. Results reported tables row-defined treatment minus column-defined treatment.","code":""},{"path":"/reference/get.relative.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates relative effects/mean differences at a particular time-point — get.relative","text":"get.relative() can also used perform 2-stage MBNMA allows synthesis results two different MBNMA models via single common comparator. MBNMA model, treatments must share time-course function. However, 2-stage approach can enable fitting different time-course functions different sets (\"subnetworks\") treatments. example, treatments may rich time-course information, allowing complex time-course function used, whereas others may sparse, requiring simpler time-course function. Relative comparisons treatments two datasets specific follow-times can estimated MBNMA predicted effects versus common comparator using Bucher method assuming consistency.  Step 1: network chosen network reference treatment () subnetworks rich sparse time-course data. Step 2: Separate time-course MBNMAs fitted subnetwork using different time-course function, relative effects versus network reference treatment predicted time. Step 3: Bucher method used calculate predicted relative effects treatments specific time-points interest (e.g. \\(S_{1}\\), \\(S_{2}\\) \\(S_{3}\\)). clarity, 95%CrIs shown plots tables calculated computed get.relative(). Thick connecting lines network plots indicate comparisons rich time-course data can modelled complex function (e.g. B-spline), thin connecting lines network plots indicate comparisons sparse time-course data can modelled less complex function (e.g. BEST-ITP). Comparisons treatments different subnetworks network reference must excluded (red dashed line network plot).","code":""},{"path":"/reference/get.relative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates relative effects/mean differences at a particular time-point — get.relative","text":"","code":"# \\donttest{ # Create an mb.network object from a dataset alognet <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Run a quadratic time-course MBNMA using the alogliptin dataset mbnma <- mb.run(alognet,   fun=tpoly(degree=2,   pool.1=\"rel\", method.1=\"random\",   pool.2=\"rel\", method.2=\"common\"   ) ) #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 233 #>    Unobserved stochastic nodes: 71 #>    Total graph size: 4375 #>  #> Initializing model #>   # Calculate differences between all treatments at 20 weeks follow-up allres <- get.relative(mbnma, time=20)  # Calculate difference between a subset of treatments at 10 weeks follow-up subres <- get.relative(mbnma, time=10,   treats=c(\"alog_50\", \"alog_25\", \"placebo\"))    ########################### ##### 2-stage MBNMA ##### ###########################  # Using the osteoarthritis dataset # With placebo (Pl_0) as common comparator between subnetworks  #### Sparse model ####  # Treatments on which time-course data is limited sparse.trt <- c(\"Ce_100\", \"Ce_400\", \"Du_90\", \"Lu_200\", \"Lu_400\",   \"Lu_NA\", \"Et_5\", \"Ox_44\")  # Create a subnetwork of studies comparing these treatments sparse.df <- osteopain %>% dplyr::group_by(studyID) %>%   dplyr::filter(any(treatment %in% sparse.trt)) %>%   dplyr::ungroup() %>%   subset(treatment %in% c(\"Pl_0\", sparse.trt))  sparse.net <- mb.network(sparse.df) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Run a ITP MBNMA with a known rate sparse.mbnma <- mb.run(sparse.net, fun=titp(method.rate=0.8, pool.rate=\"abs\")) #> 'rate' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 76 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 1447 #>  #> Initializing model #>    #### Complex model ####  # Treatments on which time-course data is rich rich.trt <- levels(osteopain$treatment)[!levels(osteopain$treatment) %in%   c(\"Pl_0\", \"Ce_100\", \"Ce_400\", \"Du_90\", \"Lu_200\",     \"Lu_400\", \"Lu_NA\", \"Et_5\", \"Ox_44\")]  # Create a subnetwork of studies comparing these treatments rich.df <- osteopain %>% dplyr::group_by(studyID) %>%   dplyr::filter(any(treatment %in% rich.trt)) %>%   dplyr::ungroup() %>%   subset(treatment %in% c(\"Pl_0\", rich.trt))  rich.net <- mb.network(rich.df) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Run a Emax MBNMA rich.mbnma <- mb.run(rich.net, temax(p.expon = FALSE)) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 363 #>    Unobserved stochastic nodes: 121 #>    Total graph size: 7221 #>  #> Initializing model #>    #### Calculate relative effects between models ####  # At 10 weeks follow-up rels.sparse <- get.relative(sparse.mbnma, time=10) rels.rich <- get.relative(rich.mbnma, time=10)  rels.all <- get.relative(mbnma=rich.mbnma,   mbnma.add=sparse.mbnma, time=10)  print(rels.all$median) #>                Pl_0      Ce_200         Et_10       Et_30       Et_60 #> Pl_0             NA  0.96014928  0.4817863229  1.23461425  1.64947402 #> Ce_200  -0.96014928          NA -0.4810535294  0.27098080  0.69082272 #> Et_10   -0.48178632  0.48105353            NA  0.75619504  1.17535019 #> Et_30   -1.23461425 -0.27098080 -0.7561950446          NA  0.41852159 #> Et_60   -1.64947402 -0.69082272 -1.1753501907 -0.41852159          NA #> Et_90   -1.72761373 -0.76790325 -1.2493429753 -0.49763737 -0.08127654 #> Lu_100  -0.91763756  0.04322117 -0.4375884360  0.31464840  0.73082184 #> Na_1000 -1.19869541 -0.23761651 -0.7190806833  0.03430981  0.45152254 #> Na_1500 -1.12467590 -0.16437437 -0.6463373311  0.10816709  0.52514107 #> Na_250  -0.00994127  0.95011263  0.4592876151  1.22346206  1.64341623 #> Na_750  -0.87657911  0.08320037 -0.3963772888  0.35767160  0.77465535 #> Ro_12   -0.94280714  0.01948290 -0.4683760454  0.29105761  0.70299699 #> Ro_125  -2.36187253 -1.39876548 -1.8907207225 -1.12966628 -0.70979486 #> Ro_25   -1.29990002 -0.33854543 -0.8254709154 -0.06929328  0.35273392 #> Tr_100  -0.47812305  0.48205060 -0.0008957854  0.75581183  1.17496436 #> Tr_200  -0.48380137  0.47617941 -0.0118888234  0.74864214  1.16474514 #> Tr_300  -0.83970302  0.12031724 -0.3625859764  0.39159090  0.80878609 #> Tr_400  -0.92633824  0.03326899 -0.4464090824  0.30871238  0.72285379 #> Va_10   -0.75424186  0.20622803 -0.2785973869  0.47848498  0.89573468 #> Va_20   -0.98964064 -0.02724947 -0.5120088346  0.24274016  0.66301754 #> Va_5    -0.84470878  0.11420284 -0.3654016774  0.38571336  0.80267869 #> Ce_100  -0.55083650  0.41061454 -0.0727331884  0.68370251  1.10245875 #> Ce_400  -0.90284080  0.05778819 -0.4239096609  0.33079235  0.74770178 #> Du_90   -0.55724997  0.40300931 -0.0776303700  0.67937405  1.09235447 #> Et_5    -1.02017150 -0.05973366 -0.5411036530  0.21199361  0.62686096 #> Lu_200  -0.54583544  0.41415858 -0.0673273947  0.68688986  1.10583247 #> Lu_400  -0.70904719  0.25186170 -0.2296291898  0.52379808  0.94091024 #> Lu_NA   -0.79780805  0.16200370 -0.3196509847  0.43600575  0.84947927 #> Ox_44   -1.07961816 -0.11608845 -0.6034550176  0.15304818  0.57241102 #>               Et_90       Lu_100     Na_1000     Na_1500      Na_250 #> Pl_0     1.72761373  0.917637559  1.19869541  1.12467590  0.00994127 #> Ce_200   0.76790325 -0.043221169  0.23761651  0.16437437 -0.95011263 #> Et_10    1.24934298  0.437588436  0.71908068  0.64633733 -0.45928762 #> Et_30    0.49763737 -0.314648400 -0.03430981 -0.10816709 -1.22346206 #> Et_60    0.08127654 -0.730821839 -0.45152254 -0.52514107 -1.64341623 #> Et_90            NA -0.811087658 -0.53075323 -0.60395772 -1.71126785 #> Lu_100   0.81108766           NA  0.27950251  0.20712885 -0.90517610 #> Na_1000  0.53075323 -0.279502507          NA -0.07253419 -1.18912470 #> Na_1500  0.60395772 -0.207128849  0.07253419          NA -1.11488771 #> Na_250   1.71126785  0.905176098  1.18912470  1.11488771          NA #> Na_750   0.85288244  0.039800462  0.32237405  0.24882586 -0.86659897 #> Ro_12    0.78198164 -0.022515979  0.25679975  0.18240286 -0.93465729 #> Ro_125  -0.63235863 -1.441947744 -1.15901557 -1.23320406 -2.35539421 #> Ro_25    0.43206711 -0.380536129 -0.09944239 -0.17603612 -1.28748159 #> Tr_100   1.25668181  0.441660254  0.72183525  0.65045672 -0.46818587 #> Tr_200   1.24741779  0.435078215  0.71275962  0.63843292 -0.47659379 #> Tr_300   0.89023422  0.080709803  0.35954402  0.28431429 -0.83013075 #> Tr_400   0.80650003 -0.006325801  0.26999354  0.19915827 -0.91494023 #> Va_10    0.97977958  0.161663015  0.44457780  0.37038205 -0.74608208 #> Va_20    0.74426266 -0.068399595  0.21012895  0.13698075 -0.97823884 #> Va_5     0.89195120  0.069979893  0.35165693  0.27826026 -0.83054874 #> Ce_100   1.18420697  0.366647152  0.64961192  0.57387716 -0.53748901 #> Ce_400   0.82816969  0.014626335  0.29690798  0.22291107 -0.89280816 #> Du_90    1.17882513  0.362542018  0.64501040  0.56655480 -0.53998213 #> Et_5     0.70924684 -0.101435777  0.18015102  0.10223813 -1.00590361 #> Lu_200   1.18812965  0.371769792  0.65209165  0.58038222 -0.53584810 #> Lu_400   1.02099497  0.209232788  0.49012263  0.41782350 -0.69811099 #> Lu_NA    0.93289234  0.120752013  0.39967387  0.32619522 -0.78278575 #> Ox_44    0.65537723 -0.161099004  0.12231915  0.04016301 -1.06458654 #>              Na_750       Ro_12    Ro_125       Ro_25        Tr_100      Tr_200 #> Pl_0     0.87657911  0.94280714 2.3618725  1.29990002  0.4781230513  0.48380137 #> Ce_200  -0.08320037 -0.01948290 1.3987655  0.33854543 -0.4820505980 -0.47617941 #> Et_10    0.39637729  0.46837605 1.8907207  0.82547092  0.0008957854  0.01188882 #> Et_30   -0.35767160 -0.29105761 1.1296663  0.06929328 -0.7558118302 -0.74864214 #> Et_60   -0.77465535 -0.70299699 0.7097949 -0.35273392 -1.1749643602 -1.16474514 #> Et_90   -0.85288244 -0.78198164 0.6323586 -0.43206711 -1.2566818111 -1.24741779 #> Lu_100  -0.03980046  0.02251598 1.4419477  0.38053613 -0.4416602537 -0.43507822 #> Na_1000 -0.32237405 -0.25679975 1.1590156  0.09944239 -0.7218352466 -0.71275962 #> Na_1500 -0.24882586 -0.18240286 1.2332041  0.17603612 -0.6504567193 -0.63843292 #> Na_250   0.86659897  0.93465729 2.3553942  1.28748159  0.4681858690  0.47659379 #> Na_750           NA  0.06628995 1.4888706  0.42133192 -0.3996991254 -0.39245616 #> Ro_12   -0.06628995          NA 1.4246306  0.35504950 -0.4650925507 -0.46316364 #> Ro_125  -1.48887059 -1.42463060        NA -1.05587116 -1.8864767453 -1.87576318 #> Ro_25   -0.42133192 -0.35504950 1.0558712          NA -0.8276799262 -0.81753715 #> Tr_100   0.39969913  0.46509255 1.8864767  0.82767993            NA  0.01059577 #> Tr_200   0.39245616  0.46316364 1.8757632  0.81753715 -0.0105957666          NA #> Tr_300   0.03266361  0.09634922 1.5215529  0.46346641 -0.3655492483 -0.35805115 #> Tr_400  -0.04711339  0.02035018 1.4357994  0.37524318 -0.4507007559 -0.44241951 #> Va_10    0.12387819  0.19193242 1.6076138  0.54346846 -0.2799931426 -0.26611599 #> Va_20   -0.11256611 -0.04569981 1.3783269  0.31325715 -0.5105661562 -0.50482151 #> Va_5     0.03316625  0.10100420 1.5208243  0.45971504 -0.3698858496 -0.35669785 #> Ce_100   0.32570802  0.39694813 1.8137886  0.75278878 -0.0756328930 -0.06687033 #> Ce_400  -0.02698858  0.04044075 1.4596841  0.39844084 -0.4243159350 -0.42094871 #> Du_90    0.32109322  0.38804387 1.8138597  0.74915182 -0.0768059378 -0.07552565 #> Et_5    -0.15018097 -0.07571431 1.3421964  0.27737261 -0.5476440921 -0.53472012 #> Lu_200   0.33076494  0.39567264 1.8138803  0.75561780 -0.0703817813 -0.05831139 #> Lu_400   0.16742662  0.23249347 1.6503544  0.59647202 -0.2315267710 -0.22213917 #> Lu_NA    0.07805312  0.14511335 1.5636411  0.50100352 -0.3237124887 -0.31758158 #> Ox_44   -0.20451349 -0.12747622 1.2897205  0.22806976 -0.6027946925 -0.59405284 #>               Tr_300       Tr_400       Va_10       Va_20         Va_5 #> Pl_0     0.839703024  0.926338243  0.75424186  0.98964064  0.844708785 #> Ce_200  -0.120317240 -0.033268991 -0.20622803  0.02724947 -0.114202837 #> Et_10    0.362585976  0.446409082  0.27859739  0.51200883  0.365401677 #> Et_30   -0.391590903 -0.308712376 -0.47848498 -0.24274016 -0.385713363 #> Et_60   -0.808786087 -0.722853789 -0.89573468 -0.66301754 -0.802678686 #> Et_90   -0.890234224 -0.806500034 -0.97977958 -0.74426266 -0.891951197 #> Lu_100  -0.080709803  0.006325801 -0.16166302  0.06839959 -0.069979893 #> Na_1000 -0.359544023 -0.269993537 -0.44457780 -0.21012895 -0.351656926 #> Na_1500 -0.284314287 -0.199158268 -0.37038205 -0.13698075 -0.278260261 #> Na_250   0.830130753  0.914940226  0.74608208  0.97823884  0.830548741 #> Na_750  -0.032663608  0.047113395 -0.12387819  0.11256611 -0.033166249 #> Ro_12   -0.096349221 -0.020350185 -0.19193242  0.04569981 -0.101004204 #> Ro_125  -1.521552941 -1.435799386 -1.60761377 -1.37832693 -1.520824305 #> Ro_25   -0.463466408 -0.375243184 -0.54346846 -0.31325715 -0.459715037 #> Tr_100   0.365549248  0.450700756  0.27999314  0.51056616  0.369885850 #> Tr_200   0.358051147  0.442419505  0.26611599  0.50482151  0.356697850 #> Tr_300            NA  0.084102155 -0.08874037  0.14826440  0.005918271 #> Tr_400  -0.084102155           NA -0.17112368  0.06069959 -0.079695111 #> Va_10    0.088740370  0.171123677          NA  0.23475285  0.092786938 #> Va_20   -0.148264396 -0.060699591 -0.23475285          NA -0.144877279 #> Va_5    -0.005918271  0.079695111 -0.09278694  0.14487728           NA #> Ce_100   0.290644454  0.375808419  0.20496924  0.43907236  0.295335358 #> Ce_400  -0.063334807  0.025385503 -0.14808828  0.08207619 -0.053734369 #> Du_90    0.288376788  0.371357930  0.19759731  0.43483858  0.292970919 #> Et_5    -0.176833874 -0.097862501 -0.26862920 -0.03030559 -0.178574487 #> Lu_200   0.295164401  0.381629822  0.20873047  0.44172946  0.297946025 #> Lu_400   0.131774794  0.214908179  0.04494832  0.27959932  0.137067886 #> Lu_NA    0.040123683  0.124827746 -0.04554566  0.19051467  0.039338676 #> Ox_44   -0.240885162 -0.154109600 -0.32600323 -0.09345845 -0.235090451 #>               Ce_100      Ce_400        Du_90        Et_5       Lu_200 #> Pl_0     0.550836500  0.90284080  0.557249965  1.02017150  0.545835440 #> Ce_200  -0.410614542 -0.05778819 -0.403009311  0.05973366 -0.414158582 #> Et_10    0.072733188  0.42390966  0.077630370  0.54110365  0.067327395 #> Et_30   -0.683702505 -0.33079235 -0.679374055 -0.21199361 -0.686889856 #> Et_60   -1.102458750 -0.74770178 -1.092354470 -0.62686096 -1.105832468 #> Et_90   -1.184206972 -0.82816969 -1.178825135 -0.70924684 -1.188129648 #> Lu_100  -0.366647152 -0.01462634 -0.362542018  0.10143578 -0.371769792 #> Na_1000 -0.649611919 -0.29690798 -0.645010402 -0.18015102 -0.652091648 #> Na_1500 -0.573877157 -0.22291107 -0.566554796 -0.10223813 -0.580382220 #> Na_250   0.537489012  0.89280816  0.539982126  1.00590361  0.535848105 #> Na_750  -0.325708019  0.02698858 -0.321093225  0.15018097 -0.330764935 #> Ro_12   -0.396948130 -0.04044075 -0.388043865  0.07571431 -0.395672640 #> Ro_125  -1.813788630 -1.45968407 -1.813859689 -1.34219635 -1.813880259 #> Ro_25   -0.752788783 -0.39844084 -0.749151823 -0.27737261 -0.755617801 #> Tr_100   0.075632893  0.42431593  0.076805938  0.54764409  0.070381781 #> Tr_200   0.066870332  0.42094871  0.075525650  0.53472012  0.058311395 #> Tr_300  -0.290644454  0.06333481 -0.288376788  0.17683387 -0.295164401 #> Tr_400  -0.375808419 -0.02538550 -0.371357930  0.09786250 -0.381629822 #> Va_10   -0.204969245  0.14808828 -0.197597306  0.26862920 -0.208730474 #> Va_20   -0.439072355 -0.08207619 -0.434838579  0.03030559 -0.441729455 #> Va_5    -0.295335358  0.05373437 -0.292970919  0.17857449 -0.297946025 #> Ce_100            NA  0.35388277  0.004909994  0.47398865 -0.006914044 #> Ce_400  -0.353882774          NA -0.345936063  0.11840410 -0.359384104 #> Du_90   -0.004909994  0.34593606           NA  0.46696759 -0.012541439 #> Et_5    -0.473988653 -0.11840410 -0.466967586          NA -0.474748410 #> Lu_200   0.006914044  0.35938410  0.012541439  0.47474841           NA #> Lu_400  -0.154244057  0.19354931 -0.151817768  0.31317716 -0.162193376 #> Lu_NA   -0.252834206  0.10468648 -0.243695824  0.22316589 -0.253877451 #> Ox_44   -0.524999833 -0.17840775 -0.521969244 -0.05787356 -0.535805740 #>              Lu_400       Lu_NA       Ox_44 #> Pl_0     0.70904719  0.79780805  1.07961816 #> Ce_200  -0.25186170 -0.16200370  0.11608845 #> Et_10    0.22962919  0.31965098  0.60345502 #> Et_30   -0.52379808 -0.43600575 -0.15304818 #> Et_60   -0.94091024 -0.84947927 -0.57241102 #> Et_90   -1.02099497 -0.93289234 -0.65537723 #> Lu_100  -0.20923279 -0.12075201  0.16109900 #> Na_1000 -0.49012263 -0.39967387 -0.12231915 #> Na_1500 -0.41782350 -0.32619522 -0.04016301 #> Na_250   0.69811099  0.78278575  1.06458654 #> Na_750  -0.16742662 -0.07805312  0.20451349 #> Ro_12   -0.23249347 -0.14511335  0.12747622 #> Ro_125  -1.65035438 -1.56364106 -1.28972047 #> Ro_25   -0.59647202 -0.50100352 -0.22806976 #> Tr_100   0.23152677  0.32371249  0.60279469 #> Tr_200   0.22213917  0.31758158  0.59405284 #> Tr_300  -0.13177479 -0.04012368  0.24088516 #> Tr_400  -0.21490818 -0.12482775  0.15410960 #> Va_10   -0.04494832  0.04554566  0.32600323 #> Va_20   -0.27959932 -0.19051467  0.09345845 #> Va_5    -0.13706789 -0.03933868  0.23509045 #> Ce_100   0.15424406  0.25283421  0.52499983 #> Ce_400  -0.19354931 -0.10468648  0.17840775 #> Du_90    0.15181777  0.24369582  0.52196924 #> Et_5    -0.31317716 -0.22316589  0.05787356 #> Lu_200   0.16219338  0.25387745  0.53580574 #> Lu_400           NA  0.08990091  0.36980747 #> Lu_NA   -0.08990091          NA  0.28557228 #> Ox_44   -0.36980747 -0.28557228          NA   # }"},{"path":"/reference/getjagsdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares data for JAGS — getjagsdata","title":"Prepares data for JAGS — getjagsdata","text":"Converts MBNMA data frame list use JAGS model","code":""},{"path":"/reference/getjagsdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares data for JAGS — getjagsdata","text":"","code":"getjagsdata(   data.ab,   fun = NULL,   class = FALSE,   rho = NULL,   covstruct = \"CS\",   link = \"identity\",   cfb = NULL )"},{"path":"/reference/getjagsdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares data for JAGS — getjagsdata","text":"data.ab data frame arm-level data \"long\" format containing columns: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating aggregate response given observation (e.g. mean) se Numeric data indicating standard error given observation treatment Treatment identifiers (can numeric, factor character) class optional column indicating particular class identifier. Observations treatment identifier must also class identifier. n optional column indicating number participants used calculate response given observation (required modelling using Standardised Mean Differences) fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser() class boolean object indicating whether data.ab contains information different classes treatments rho correlation coefficient modelling within-study correlation time points. default string representing prior distribution JAGS, indicating estimated data (e.g. rho=\"dunif(0,1)\"). rho also assigned numeric value (e.g. rho=0.7), fixes rho model value (e.g. use deterministic sensitivity analysis). set rho=0 (default) implies modelling correlation time points. covstruct character indicate covariance structure required modelling correlation time points (), since determines data. Can either \"CS\" (compound symmetry), \"AR1\" (autoregressive AR1) \"varadj\" (variance-adjustment). link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function). cfb logical vector whose length equal unique number studies data.ab, element TRUE study data reported change--baseline FALSE otherwise. left NULL (default) identified data assuming study data time=0 reports change--baseline.","code":""},{"path":"/reference/getjagsdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares data for JAGS — getjagsdata","text":"named list numbers, vector, matrices arrays sent JAGS. List elements : y array mean responses observation arm within study se array standard errors observation arm within study time matrix follow-times within study fups numeric vector number follow-measurements per study narm numeric vector number arms per study NS total number studies dataset NT total number treatments dataset treat matrix treatment codes within study Nclass Optional. total number classes dataset class Optional. matrix class codes within study classkey Optional. vector class codes correspond treatment codes. length number treatment codes. mat.triangle Optional. matrix number indicating fill covariance matrices within JAGS code. mat.order Optional. matrix number indicating order fill covariance matrices within JAGS code. timedif.0 Optional. vector difference times first second follow-time study.","code":""},{"path":"/reference/getjagsdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepares data for JAGS — getjagsdata","text":"","code":"# Using the alogliptin dataset network <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data jagsdat <- getjagsdata(network$data.ab)   # Get JAGS data with class netclass <- mb.network(goutSUA_CFBcomb) #> Reference treatment is `Plac` #> Studies reporting change from baseline automatically identified from the data jagsdat <- getjagsdata(netclass$data.ab, class=TRUE)   # Get JAGS data that allows for modelling correlation between time points painnet <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data jagsdat <- getjagsdata(painnet$data.ab, rho=\"dunif(0,1)\", covstruct=\"AR1\")"},{"path":"/reference/getnmadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares NMA data for JAGS — getnmadata","title":"Prepares NMA data for JAGS — getnmadata","text":"Converts data frame list use JAGS NMA model","code":""},{"path":"/reference/getnmadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares NMA data for JAGS — getnmadata","text":"","code":"getnmadata(data.ab, link = \"identity\")"},{"path":"/reference/getnmadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares NMA data for JAGS — getnmadata","text":"data.ab data frame arm-level data \"long\" format containing columns: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating aggregate response given observation (e.g. mean) se Numeric data indicating standard error given observation treatment Treatment identifiers (can numeric, factor character) class optional column indicating particular class identifier. Observations treatment identifier must also class identifier. n optional column indicating number participants used calculate response given observation (required modelling using Standardised Mean Differences) link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function).","code":""},{"path":"/reference/getnmadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares NMA data for JAGS — getnmadata","text":"named list numbers, vector, matrices arrays sent JAGS. List elements : y array mean responses observation arm within study se array standard errors observation arm within study narm numeric vector number arms per study NS total number studies dataset NT total number treatments dataset treat matrix treatment codes within study","code":""},{"path":"/reference/getnmadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepares NMA data for JAGS — getnmadata","text":"","code":"# Using the alogliptin dataset network <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Construct a dataset with the latest time point in each study data.ab <- get.latest.time(network) getnmadata(data.ab) #> $narm #>  [1] 6 5 4 3 3 3 3 3 3 3 3 3 2 2 #>  #> $NS #> [1] 14 #>  #> $studyID #>  [1] 11  1  3  2  4  5  6  7  8  9 10 14 12 13 #>  #> $NT #> [1] 6 #>  #> $y #>        [,1]  [,2]  [,3]  [,4]  [,5]  [,6] #>  [1,] -0.01 -0.19 -0.54 -0.56 -0.44 -0.51 #>  [2,]  0.06 -0.51 -0.70 -0.76 -0.82    NA #>  [3,] -0.33 -0.48 -0.66 -0.77    NA    NA #>  [4,] -0.02 -0.56 -0.59    NA    NA    NA #>  [5,] -0.19 -0.66 -0.80    NA    NA    NA #>  [6,]  0.01 -0.38 -0.52    NA    NA    NA #>  [7,] -0.10 -0.61 -0.59    NA    NA    NA #>  [8,] -0.19 -0.91 -0.97    NA    NA    NA #>  [9,] -0.13 -0.63 -0.71    NA    NA    NA #> [10,]  0.34 -0.60 -0.66    NA    NA    NA #> [11,]  0.04 -0.96 -0.91    NA    NA    NA #> [12,]  0.21 -0.54 -0.64    NA    NA    NA #> [13,] -0.67 -0.69    NA    NA    NA    NA #> [14,] -0.78 -0.92    NA    NA    NA    NA #>  #> $se #>             [,1]       [,2]       [,3]       [,4]       [,5]     [,6] #>  [1,] 0.13430944 0.12035661 0.12189965 0.11627553 0.12352384 0.119097 #>  [2,] 0.05311623 0.07650598 0.06219210 0.06187984 0.05287913       NA #>  [3,] 0.07622222 0.09923275 0.07808110 0.08346834         NA       NA #>  [4,] 0.09400000 0.06500000 0.06600000         NA         NA       NA #>  [5,] 0.08100000 0.05600000 0.05600000         NA         NA       NA #>  [6,] 0.08400000 0.05800000 0.05800000         NA         NA       NA #>  [7,] 0.07600000 0.05300000 0.05400000         NA         NA       NA #>  [8,] 0.05128776 0.04176295 0.04891748         NA         NA       NA #>  [9,] 0.07700000 0.07600000 0.07800000         NA         NA       NA #> [10,] 0.06010509 0.05491252 0.05491252         NA         NA       NA #> [11,] 0.05347391 0.06308933 0.05400422         NA         NA       NA #> [12,] 0.06400000 0.05838404 0.05001042         NA         NA       NA #> [13,] 0.04742520 0.04874593         NA         NA         NA       NA #> [14,] 0.08194019 0.07608902         NA         NA         NA       NA #>  #> $treat #>       [,1] [,2] [,3] [,4] [,5] [,6] #>  [1,]    1    2    3    4    5    6 #>  [2,]    1    2    3    4    5   NA #>  [3,]    2    3    4    5   NA   NA #>  [4,]    1    3    4   NA   NA   NA #>  [5,]    1    3    4   NA   NA   NA #>  [6,]    1    3    4   NA   NA   NA #>  [7,]    1    3    4   NA   NA   NA #>  [8,]    1    3    4   NA   NA   NA #>  [9,]    1    3    4   NA   NA   NA #> [10,]    1    3    4   NA   NA   NA #> [11,]    1    3    4   NA   NA   NA #> [12,]    1    3    4   NA   NA   NA #> [13,]    3    4   NA   NA   NA   NA #> [14,]    3    4   NA   NA   NA   NA #>"},{"path":"/reference/goutSUA_CFB.html","id":null,"dir":"Reference","previous_headings":"","what":"Studies of treatments for reducing serum uric acid in patients with gout — goutSUA_CFB","title":"Studies of treatments for reducing serum uric acid in patients with gout — goutSUA_CFB","text":"dataset systematic review interventions lowering Serum Uric Acid (SUA) concentration patients gout (published previously). outcome continuous, aggregate data responses correspond mean change baseline SUA mg/dL. Overall 41 treatments 8 agents network. Standard deviations imputed 181 observations.","code":""},{"path":"/reference/goutSUA_CFB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Studies of treatments for reducing serum uric acid in patients with gout — goutSUA_CFB","text":"","code":"goutSUA_CFB"},{"path":"/reference/goutSUA_CFB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Studies of treatments for reducing serum uric acid in patients with gout — goutSUA_CFB","text":"data frame 224 rows 7 variables: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating mean response given observation se Numeric data indicating standard error given observation treatment Treatment identifiers factors. Labels shortened treatment names. treatname Character data giving full names treatment format agent_dose class Shortened agent names stored factors.","code":""},{"path":"/reference/goutSUA_CFB.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Studies of treatments for reducing serum uric acid in patients with gout — goutSUA_CFB","text":"Pfizer Ltd.","code":""},{"path":"/reference/goutSUA_CFB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Studies of treatments for reducing serum uric acid in patients with gout — goutSUA_CFB","text":"goutSUA_CFB data frame long format (one row per observation, arm study), variables studyID, time, y, se, treatment, treatname class.","code":""},{"path":"/reference/goutSUA_CFBcomb.html","id":null,"dir":"Reference","previous_headings":"","what":"Studies of combined treatments for reducing serum uric acid in patients with gout — goutSUA_CFBcomb","title":"Studies of combined treatments for reducing serum uric acid in patients with gout — goutSUA_CFBcomb","text":"dataset systematic review interventions lowering Serum Uric Acid (SUA) concentration patients gout (published previously). outcome continuous, aggregate data responses correspond mean change baseline SUA mg/dL. Treatments similar doses pooled together improve network connectivity facilitate evidence synthesis, resulting 19 treatments 7 agents included network. Standard deviations imputed 181 observations.","code":""},{"path":"/reference/goutSUA_CFBcomb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Studies of combined treatments for reducing serum uric acid in patients with gout — goutSUA_CFBcomb","text":"","code":"goutSUA_CFBcomb"},{"path":"/reference/goutSUA_CFBcomb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Studies of combined treatments for reducing serum uric acid in patients with gout — goutSUA_CFBcomb","text":"data frame 224 rows 7 variables: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating mean response given observation se Numeric data indicating standard error given observation treatment Treatment identifiers factors. Labels shortened treatment names. treatname Character data giving full names treatment format agent_dose class Shortened agent names stored factors.","code":""},{"path":"/reference/goutSUA_CFBcomb.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Studies of combined treatments for reducing serum uric acid in patients with gout — goutSUA_CFBcomb","text":"Pfizer Ltd.","code":""},{"path":"/reference/goutSUA_CFBcomb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Studies of combined treatments for reducing serum uric acid in patients with gout — goutSUA_CFBcomb","text":"goutSUA_CFBcomb data frame long format (one row per observation, arm study), variables studyID, time, y, se, treatment, treatname class.","code":""},{"path":"/reference/hyalarthritis.html","id":null,"dir":"Reference","previous_headings":"","what":"Studies comparing hyaluronan (HA)–based viscosupplements for osteoarthritis — hyalarthritis","title":"Studies comparing hyaluronan (HA)–based viscosupplements for osteoarthritis — hyalarthritis","text":"dataset trials pain reduction patients osteoarthritis treated HA-based viscosupplements(Jansen et al. 2015) . Data reported study arm mean change baseline follow-visual analogue scale (0-100). dataset includes 16 Randomised-Controlled Trials (RCTs), comparing 6 treatments placebo.","code":""},{"path":"/reference/hyalarthritis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Studies comparing hyaluronan (HA)–based viscosupplements for osteoarthritis — hyalarthritis","text":"","code":"hyalarthritis"},{"path":"/reference/hyalarthritis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Studies comparing hyaluronan (HA)–based viscosupplements for osteoarthritis — hyalarthritis","text":"data frame long format (one row per arm study), 150 rows 6 variables: studyID Study identifiers time Numeric data indicating time observation measured (given weeks) treatment Factor data indicating treatment participants randomised n Numeric data indicating number participants randomised arm y Numeric data indicating mean change baseline HbA1c study arm se Numeric data indicating standard error mean change baseline HbA1c study arm","code":""},{"path":"/reference/hyalarthritis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Studies comparing hyaluronan (HA)–based viscosupplements for osteoarthritis — hyalarthritis","text":"hyalarthritis data frame long format (one row per observation, arm study), variables studyID, time, treatment, n, y, se.","code":""},{"path":"/reference/hyalarthritis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Studies comparing hyaluronan (HA)–based viscosupplements for osteoarthritis — hyalarthritis","text":"Jansen JP, Vieira MC, Cope S (2015). “Network meta-analysis longitudinal data using fractional polynomials.” Stat Med, 34(15), 2294-311. ISSN 1097-0258 (Electronic) 0277-6715 (Linking), doi:10.1002/sim.6492 , https://pubmed.ncbi.nlm.nih.gov/25877808/.","code":""},{"path":"/reference/inconsistency.loops.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify comparisons in loops that fulfil criteria for node-splitting — inconsistency.loops","title":"Identify comparisons in loops that fulfil criteria for node-splitting — inconsistency.loops","text":"Identify comparisons informed direct indirect evidence independent sources, therefore fulfil criteria testing inconsistency via node-splitting. Follows method van Valkenhoef van Valkenhoef et al. (2016) .","code":""},{"path":"/reference/inconsistency.loops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify comparisons in loops that fulfil criteria for node-splitting — inconsistency.loops","text":"","code":"inconsistency.loops(data)"},{"path":"/reference/inconsistency.loops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify comparisons in loops that fulfil criteria for node-splitting — inconsistency.loops","text":"data data frame containing variables studyID treatment (numeric codes) indicate treatments used studies.","code":""},{"path":"/reference/inconsistency.loops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify comparisons in loops that fulfil criteria for node-splitting — inconsistency.loops","text":"data frame comparisons informed direct indirect evidence independent sources. row data frame different treatment comparison. Numerical codes t1 t2 correspond treatment codes.","code":""},{"path":"/reference/inconsistency.loops.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify comparisons in loops that fulfil criteria for node-splitting — inconsistency.loops","text":"Similar gemtc::mtc.nodesplit() uses fixed reference treatment therefore suggests fewer loops test inconsistency. Heterogeneity can also parameterised inconsistency testing inconsistency additional loops whilst changing reference treatment also identifying heterogeneity. Depends igraph.","code":""},{"path":"/reference/inconsistency.loops.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identify comparisons in loops that fulfil criteria for node-splitting — inconsistency.loops","text":"van Valkenhoef G, Dias S, Ades AE, Welton NJ (2016). “Automated generation node-splitting models assessment inconsistency network meta-analysis.” Res Synth Methods, 7(1), 80-93. ISSN 1759-2887 (Electronic) 1759-2879 (Linking), doi:10.1002/jrsm.1167 , https://pubmed.ncbi.nlm.nih.gov/26461181/.","code":""},{"path":"/reference/inconsistency.loops.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify comparisons in loops that fulfil criteria for node-splitting — inconsistency.loops","text":"","code":"data <- data.frame(studyID=c(1,1,2,2,3,3,4,4,5,5,5),   treatment=c(1,2,1,3,2,3,3,4,1,2,4)   )  # Identify comparisons informed by direct and indirect evidence inconsistency.loops(data) #>   t1 t2    path #> 5  3  4 3->1->4 #> 4  2  3 2->1->3"},{"path":"/reference/mb.comparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify unique comparisons within a network (identical to MBNMAdose) — mb.comparisons","title":"Identify unique comparisons within a network (identical to MBNMAdose) — mb.comparisons","text":"Identify unique contrasts within network make head--head comparisons. Repetitions treatment comparison grouped together.","code":""},{"path":"/reference/mb.comparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify unique comparisons within a network (identical to MBNMAdose) — mb.comparisons","text":"","code":"mb.comparisons(data)"},{"path":"/reference/mb.comparisons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify unique comparisons within a network (identical to MBNMAdose) — mb.comparisons","text":"data data frame containing variables studyID treatment (numeric codes) indicate treatments used studies.","code":""},{"path":"/reference/mb.comparisons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify unique comparisons within a network (identical to MBNMAdose) — mb.comparisons","text":"data frame unique comparisons row represents different comparison. t1 t2 indicate treatment codes make comparison. nr indicates number times given comparison made within network. single observation study within dataset (.e. standard network meta-analysis) nr represent number studies compare treatments t1 t2. multiple observations study within dataset (time-course MBNMA) nr represent number time points dataset treatments t1 t2 compared.","code":""},{"path":"/reference/mb.comparisons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify unique comparisons within a network (identical to MBNMAdose) — mb.comparisons","text":"","code":"data <- data.frame(studyID=c(1,1,2,2,3,3,4,4,5,5,5),   treatment=c(1,2,1,3,2,3,3,4,1,2,4)   )  # Identify comparisons informed by direct and indirect evidence mb.comparisons(data) #> # A tibble: 6 × 3 #> # Groups:   t1, t2 [6] #>      t1    t2    nr #>   <dbl> <dbl> <int> #> 1     1     2     2 #> 2     1     3     1 #> 3     1     4     1 #> 4     2     3     1 #> 5     2     4     1 #> 6     3     4     1"},{"path":"/reference/mb.make.contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert arm-based MBNMA data to contrast data — mb.make.contrast","title":"Convert arm-based MBNMA data to contrast data — mb.make.contrast","text":"Converts object class mb.network arm-based long MBNMA data data frame contrast data (separate contrast treatment comparison time point within study). Data can either long wide.","code":""},{"path":"/reference/mb.make.contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert arm-based MBNMA data to contrast data — mb.make.contrast","text":"","code":"mb.make.contrast(network, datatype = NULL, format = \"wide\")"},{"path":"/reference/mb.make.contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert arm-based MBNMA data to contrast data — mb.make.contrast","text":"network object class mb.network datatype string indicating data type. Can binomial normal format string indicating data format. Can wide (two additional columns variable - contrast arms) long.","code":""},{"path":"/reference/mb.make.contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert arm-based MBNMA data to contrast data — mb.make.contrast","text":"data frame following columns. wide format, columns given indices 1 2 indicate arm given treatment comparison.: t treatment arm TE treatment effect (mean difference, log-odds) treatment arm 1 versus treatment arm 2 seTE standard error treatment effect (mean difference, log-odds) treatment arm 1 versus treatment arm 2 y mean response arm se standard error mean arm r number responders arm n total number participants arm fupcount Follow-identifier time time data reported studyID Study identifier","code":""},{"path":"/reference/mb.make.contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert arm-based MBNMA data to contrast data — mb.make.contrast","text":"","code":"# Create mb.network network <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Convert to wide contrast data mb.make.contrast(network, format=\"wide\") #> Warning: Data type not specified and data frame contains y - data are assumed to be normal #>     t1 t2         TE       seTE       y1       y2        se1        se2 #> 1    1  6 -0.0530000 0.19136211 7.062000 7.009000 0.22216747 0.16055675 #> 2    1  7 -0.3060000 0.19588725 7.062000 6.756000 0.22216747 0.16960703 #> 3    1  8 -0.1890000 0.19028895 7.062000 6.873000 0.22216747 0.15841042 #> 4    1  9 -0.3760000 0.19204973 7.062000 6.686000 0.22216747 0.16193198 #> 5    1 10 -0.2080000 0.19209781 7.062000 6.854000 0.22216747 0.16202815 #> 6    6  7 -0.2530000 0.16508189 7.009000 6.756000 0.16055675 0.16960703 #> 7    6  8 -0.1360000 0.15948359 7.009000 6.873000 0.16055675 0.15841042 #> 8    6  9 -0.3230000 0.16124437 7.009000 6.686000 0.16055675 0.16193198 #> 9    6 10 -0.1550000 0.16129245 7.009000 6.854000 0.16055675 0.16202815 #> 10   7  8  0.1170000 0.16400873 6.756000 6.873000 0.16960703 0.15841042 #> 11   7  9 -0.0700000 0.16576951 6.756000 6.686000 0.16960703 0.16193198 #> 12   7 10  0.0980000 0.16581759 6.756000 6.854000 0.16960703 0.16202815 #> 13   8  9 -0.1870000 0.16017120 6.873000 6.686000 0.15841042 0.16193198 #> 14   8 10 -0.0190000 0.16021929 6.873000 6.854000 0.15841042 0.16202815 #> 15   9 10  0.1680000 0.16198007 6.686000 6.854000 0.16193198 0.16202815 #> 16   1  6 -0.7630000 0.19474230 6.362000 5.599000 0.22671752 0.16276707 #> 17   1  7 -1.5660000 0.19949402 6.362000 4.796000 0.22671752 0.17227052 #> 18   1  8 -0.5390000 0.19377309 6.362000 5.823000 0.22671752 0.16082866 #> 19   1  9 -2.4960000 0.19552830 6.362000 3.866000 0.22671752 0.16433909 #> 20   1 10 -2.2280000 0.19554723 6.362000 4.134000 0.22671752 0.16437693 #> 21   6  7 -0.8030000 0.16751880 5.599000 4.796000 0.16276707 0.17227052 #> 22   6  8  0.2240000 0.16179787 5.599000 5.823000 0.16276707 0.16082866 #> 23   6  9 -1.7330000 0.16355308 5.599000 3.866000 0.16276707 0.16433909 #> 24   6 10 -1.4650000 0.16357200 5.599000 4.134000 0.16276707 0.16437693 #> 25   7  8  1.0270000 0.16654959 4.796000 5.823000 0.17227052 0.16082866 #> 26   7  9 -0.9300000 0.16830480 4.796000 3.866000 0.17227052 0.16433909 #> 27   7 10 -0.6620000 0.16832373 4.796000 4.134000 0.17227052 0.16437693 #> 28   8  9 -1.9570000 0.16258387 5.823000 3.866000 0.16082866 0.16433909 #> 29   8 10 -1.6890000 0.16260280 5.823000 4.134000 0.16082866 0.16437693 #> 30   9 10  0.2680000 0.16435801 3.866000 4.134000 0.16433909 0.16437693 #> 31   1  6 -1.1830000 0.19862288 6.262000 5.079000 0.23247437 0.16477139 #> 32   1  7 -1.8460000 0.20339745 6.262000 4.416000 0.23247437 0.17432054 #> 33   1  8 -0.9190000 0.19754157 6.262000 5.343000 0.23247437 0.16260877 #> 34   1  9 -2.6460000 0.19949002 6.262000 3.616000 0.23247437 0.16650567 #> 35   1 10 -2.1780000 0.19942463 6.262000 4.084000 0.23247437 0.16637489 #> 36   6  7 -0.6630000 0.16954596 5.079000 4.416000 0.16477139 0.17432054 #> 37   6  8  0.2640000 0.16369008 5.079000 5.343000 0.16477139 0.16260877 #> 38   6  9 -1.4630000 0.16563853 5.079000 3.616000 0.16477139 0.16650567 #> 39   6 10 -0.9950000 0.16557314 5.079000 4.084000 0.16477139 0.16637489 #> 40   7  8  0.9270000 0.16846465 4.416000 5.343000 0.17432054 0.16260877 #> 41   7  9 -0.8000000 0.17041310 4.416000 3.616000 0.17432054 0.16650567 #> 42   7 10 -0.3320000 0.17034771 4.416000 4.084000 0.17432054 0.16637489 #> 43   8  9 -1.7270000 0.16455722 5.343000 3.616000 0.16260877 0.16650567 #> 44   8 10 -1.2590000 0.16449183 5.343000 4.084000 0.16260877 0.16637489 #> 45   9 10  0.4680000 0.16644028 3.616000 4.084000 0.16650567 0.16637489 #> 46   1  6 -0.8130000 0.20452069 6.052000 5.239000 0.24012258 0.16891879 #> 47   1  7 -1.5760000 0.20905302 6.052000 4.476000 0.24012258 0.17798345 #> 48   1  8 -0.8490000 0.20316418 6.052000 5.203000 0.24012258 0.16620577 #> 49   1  9 -2.4760000 0.20520110 6.052000 3.576000 0.24012258 0.17027961 #> 50   1 10 -2.1380000 0.20492614 6.052000 3.914000 0.24012258 0.16972969 #> 51   6  7 -0.7630000 0.17345112 5.239000 4.476000 0.16891879 0.17798345 #> 52   6  8 -0.0360000 0.16756228 5.239000 5.203000 0.16891879 0.16620577 #> 53   6  9 -1.6630000 0.16959920 5.239000 3.576000 0.16891879 0.17027961 #> 54   6 10 -1.3250000 0.16932424 5.239000 3.914000 0.16891879 0.16972969 #> 55   7  8  0.7270000 0.17209461 4.476000 5.203000 0.17798345 0.16620577 #> 56   7  9 -0.9000000 0.17413153 4.476000 3.576000 0.17798345 0.17027961 #> 57   7 10 -0.5620000 0.17385657 4.476000 3.914000 0.17798345 0.16972969 #> 58   8  9 -1.6270000 0.16824269 5.203000 3.576000 0.16620577 0.17027961 #> 59   8 10 -1.2890000 0.16796773 5.203000 3.914000 0.16620577 0.16972969 #> 60   9 10  0.3380000 0.17000465 3.576000 3.914000 0.17027961 0.16972969 #> 61   1  6 -0.6830000 0.20990399 5.902000 5.219000 0.24781410 0.17199388 #> 62   1  7 -1.7960000 0.21495520 5.902000 4.106000 0.24781410 0.18209630 #> 63   1  8 -1.0790000 0.20855693 5.902000 4.823000 0.24781410 0.16929977 #> 64   1  9 -2.4960000 0.21062464 5.902000 3.406000 0.24781410 0.17343517 #> 65   1 10 -2.1080000 0.21035013 5.902000 3.794000 0.24781410 0.17288616 #> 66   6  7 -1.1130000 0.17704509 5.219000 4.106000 0.17199388 0.18209630 #> 67   6  8 -0.3960000 0.17064683 5.219000 4.823000 0.17199388 0.16929977 #> 68   6  9 -1.8130000 0.17271453 5.219000 3.406000 0.17199388 0.17343517 #> 69   6 10 -1.4250000 0.17244002 5.219000 3.794000 0.17199388 0.17288616 #> 70   7  8  0.7170000 0.17569803 4.106000 4.823000 0.18209630 0.16929977 #> 71   7  9 -0.7000000 0.17776574 4.106000 3.406000 0.18209630 0.17343517 #> 72   7 10 -0.3120000 0.17749123 4.106000 3.794000 0.18209630 0.17288616 #> 73   8  9 -1.4170000 0.17136747 4.823000 3.406000 0.16929977 0.17343517 #> 74   8 10 -1.0290000 0.17109296 4.823000 3.794000 0.16929977 0.17288616 #> 75   9 10  0.3880000 0.17316066 3.406000 3.794000 0.17343517 0.17288616 #> 76   1 15 -0.1000000 0.16282835 6.600000 6.500000 0.16571813 0.15993856 #> 77   1 16  0.1000000 0.16106398 6.600000 6.700000 0.16571813 0.15640983 #> 78   1 17  0.1000000 0.17454336 6.600000 6.700000 0.16571813 0.18336859 #> 79   1 18  0.0000000 0.16841525 6.600000 6.600000 0.16571813 0.17111236 #> 80   1 22 -0.1000000 0.16771188 6.600000 6.500000 0.16571813 0.16970563 #> 81  15 16  0.2000000 0.15817419 6.500000 6.700000 0.15993856 0.15640983 #> 82  15 17  0.2000000 0.17165357 6.500000 6.700000 0.15993856 0.18336859 #> 83  15 18  0.1000000 0.16552546 6.500000 6.600000 0.15993856 0.17111236 #> 84  15 22  0.0000000 0.16482209 6.500000 6.500000 0.15993856 0.16970563 #> 85  16 17  0.0000000 0.16988921 6.700000 6.700000 0.15640983 0.18336859 #> 86  16 18 -0.1000000 0.16376109 6.700000 6.600000 0.15640983 0.17111236 #> 87  16 22 -0.2000000 0.16305773 6.700000 6.500000 0.15640983 0.16970563 #> 88  17 18 -0.1000000 0.17724047 6.700000 6.600000 0.18336859 0.17111236 #> 89  17 22 -0.2000000 0.17653711 6.700000 6.500000 0.18336859 0.16970563 #> 90  18 22 -0.1000000 0.17040899 6.600000 6.500000 0.17111236 0.16970563 #> 91   1 15 -0.9400000 0.16817165 4.390000 3.450000 0.17390525 0.16243804 #> 92   1 16 -0.9600000 0.16903918 4.390000 3.430000 0.17390525 0.16417310 #> 93   1 17  0.1600000 0.17308912 4.390000 4.550000 0.17390525 0.17227298 #> 94   1 18 -1.0600000 0.17193958 4.390000 3.330000 0.17390525 0.16997392 #> 95   1 22 -1.0700000 0.17524543 4.390000 3.320000 0.17390525 0.17658562 #> 96  15 16 -0.0200000 0.16330557 3.450000 3.430000 0.16243804 0.16417310 #> 97  15 17  1.1000000 0.16735551 3.450000 4.550000 0.16243804 0.17227298 #> 98  15 18 -0.1200000 0.16620598 3.450000 3.330000 0.16243804 0.16997392 #> 99  15 22 -0.1300000 0.16951183 3.450000 3.320000 0.16243804 0.17658562 #> 100 16 17  1.1200000 0.16822304 3.430000 4.550000 0.16417310 0.17227298 #> 101 16 18 -0.1000000 0.16707351 3.430000 3.330000 0.16417310 0.16997392 #> 102 16 22 -0.1100000 0.17037936 3.430000 3.320000 0.16417310 0.17658562 #> 103 17 18 -1.2200000 0.17112345 4.550000 3.330000 0.17227298 0.16997392 #> 104 17 22 -1.2300000 0.17442930 4.550000 3.320000 0.17227298 0.17658562 #> 105 18 22 -0.0100000 0.17327977 3.330000 3.320000 0.16997392 0.17658562 #> 106  1 15 -1.4100000 0.17080592 4.410000 3.000000 0.17768641 0.16392544 #> 107  1 16 -1.2300000 0.17207050 4.410000 3.180000 0.17768641 0.16645459 #> 108  1 17 -0.2400000 0.17589726 4.410000 4.170000 0.17768641 0.17410810 #> 109  1 18 -1.4600000 0.17464501 4.410000 2.950000 0.17768641 0.17160362 #> 110  1 22 -1.2500000 0.17854190 4.410000 3.160000 0.17768641 0.17939738 #> 111 15 16  0.1800000 0.16519002 3.000000 3.180000 0.16392544 0.16645459 #> 112 15 17  1.1700000 0.16901677 3.000000 4.170000 0.16392544 0.17410810 #> 113 15 18 -0.0500000 0.16776453 3.000000 2.950000 0.16392544 0.17160362 #> 114 15 22  0.1600000 0.17166141 3.000000 3.160000 0.16392544 0.17939738 #> 115 16 17  0.9900000 0.17028135 3.180000 4.170000 0.16645459 0.17410810 #> 116 16 18 -0.2300000 0.16902910 3.180000 2.950000 0.16645459 0.17160362 #> 117 16 22 -0.0200000 0.17292599 3.180000 3.160000 0.16645459 0.17939738 #> 118 17 18 -1.2200000 0.17285586 4.170000 2.950000 0.17410810 0.17160362 #> 119 17 22 -1.0100000 0.17675274 4.170000 3.160000 0.17410810 0.17939738 #> 120 18 22  0.2100000 0.17550050 2.950000 3.160000 0.17160362 0.17939738 #> 121  1 15 -1.2900000 0.17593980 4.050000 2.760000 0.18398436 0.16789523 #> 122  1 16 -1.1700000 0.17686548 4.050000 2.880000 0.18398436 0.16974660 #> 123  1 17  0.0900000 0.18106920 4.050000 4.140000 0.18398436 0.17815403 #> 124  1 18 -1.2100000 0.17969950 4.050000 2.840000 0.18398436 0.17541465 #> 125  1 22 -1.0800000 0.18374124 4.050000 2.970000 0.18398436 0.18349812 #> 126 15 16  0.1200000 0.16882091 2.760000 2.880000 0.16789523 0.16974660 #> 127 15 17  1.3800000 0.17302463 2.760000 4.140000 0.16789523 0.17815403 #> 128 15 18  0.0800000 0.17165494 2.760000 2.840000 0.16789523 0.17541465 #> 129 15 22  0.2100000 0.17569668 2.760000 2.970000 0.16789523 0.18349812 #> 130 16 17  1.2600000 0.17395031 2.880000 4.140000 0.16974660 0.17815403 #> 131 16 18 -0.0400000 0.17258062 2.880000 2.840000 0.16974660 0.17541465 #> 132 16 22  0.0900000 0.17662236 2.880000 2.970000 0.16974660 0.18349812 #> 133 17 18 -1.3000000 0.17678434 4.140000 2.840000 0.17815403 0.17541465 #> 134 17 22 -1.1700000 0.18082608 4.140000 2.970000 0.17815403 0.18349812 #> 135 18 22  0.1300000 0.17945638 2.840000 2.970000 0.17541465 0.18349812 #> 136  1 15 -1.2800000 0.18006989 3.970000 2.690000 0.18952849 0.17061128 #> 137  1 16 -1.2400000 0.18137242 3.970000 2.730000 0.18952849 0.17321634 #> 138  1 17  0.0200000 0.18542131 3.970000 3.990000 0.18952849 0.18131412 #> 139  1 18 -1.1800000 0.18425675 3.970000 2.790000 0.18952849 0.17898501 #> 140  1 22 -1.0700000 0.18789392 3.970000 2.900000 0.18952849 0.18625935 #> 141 15 16  0.0400000 0.17191381 2.690000 2.730000 0.17061128 0.17321634 #> 142 15 17  1.3000000 0.17596270 2.690000 3.990000 0.17061128 0.18131412 #> 143 15 18  0.1000000 0.17479815 2.690000 2.790000 0.17061128 0.17898501 #> 144 15 22  0.2100000 0.17843532 2.690000 2.900000 0.17061128 0.18625935 #> 145 16 17  1.2600000 0.17726523 2.730000 3.990000 0.17321634 0.18131412 #> 146 16 18  0.0600000 0.17610067 2.730000 2.790000 0.17321634 0.17898501 #> 147 16 22  0.1700000 0.17973785 2.730000 2.900000 0.17321634 0.18625935 #> 148 17 18 -1.2000000 0.18014956 3.990000 2.790000 0.18131412 0.17898501 #> 149 17 22 -1.0900000 0.18378674 3.990000 2.900000 0.18131412 0.18625935 #> 150 18 22  0.1100000 0.18262218 2.790000 2.900000 0.17898501 0.18625935 #> 151  1  2 -0.0233250 0.12723236 5.405620 5.382295 0.12743652 0.12702820 #> 152  1  3 -0.1395300 0.12837232 5.405620 5.266090 0.12743652 0.12930813 #> 153  1  4  0.0000000 0.12750130 5.405620 5.405620 0.12743652 0.12756608 #> 154  1 15  0.1394600 0.12809344 5.405620 5.545080 0.12743652 0.12875036 #> 155  2  3 -0.1162050 0.12816816 5.382295 5.266090 0.12702820 0.12930813 #> 156  2  4  0.0233250 0.12729714 5.382295 5.405620 0.12702820 0.12756608 #> 157  2 15  0.1627850 0.12788928 5.382295 5.545080 0.12702820 0.12875036 #> 158  3  4  0.1395300 0.12843710 5.266090 5.405620 0.12930813 0.12756608 #> 159  3 15  0.2789900 0.12902924 5.266090 5.545080 0.12930813 0.12875036 #> 160  4 15  0.1394600 0.12815822 5.405620 5.545080 0.12756608 0.12875036 #> 161  1  2 -0.6744615 0.13498571 5.020210 4.345749 0.13967062 0.13030080 #> 162  1  3 -1.1977000 0.13598993 5.020210 3.822510 0.13967062 0.13230924 #> 163  1  4 -1.0581015 0.13519756 5.020210 3.962108 0.13967062 0.13072450 #> 164  1 15 -0.8953845 0.13580065 5.020210 4.124826 0.13967062 0.13193069 #> 165  2  3 -0.5232385 0.13130502 4.345749 3.822510 0.13030080 0.13230924 #> 166  2  4 -0.3836400 0.13051265 4.345749 3.962108 0.13030080 0.13072450 #> 167  2 15 -0.2209230 0.13111574 4.345749 4.124826 0.13030080 0.13193069 #> 168  3  4  0.1395985 0.13151687 3.822510 3.962108 0.13230924 0.13072450 #> 169  3 15  0.3023155 0.13211996 3.822510 4.124826 0.13230924 0.13193069 #> 170  4 15  0.1627170 0.13132759 3.962108 4.124826 0.13072450 0.13193069 #> 171  1  2 -0.3953355 0.14630468 4.720889 4.325553 0.15125135 0.14135801 #> 172  1  3 -1.0000335 0.14725310 4.720889 3.720855 0.15125135 0.14325486 #> 173  1  4 -0.7558560 0.14650779 4.720889 3.965032 0.15125135 0.14176423 #> 174  1 15 -0.4535405 0.14719380 4.720889 4.267348 0.15125135 0.14313626 #> 175  2  3 -0.6046980 0.14230643 4.325553 3.720855 0.14135801 0.14325486 #> 176  2  4 -0.3605205 0.14156112 4.325553 3.965032 0.14135801 0.14176423 #> 177  2 15 -0.0582050 0.14224713 4.325553 4.267348 0.14135801 0.14313626 #> 178  3  4  0.2441775 0.14250954 3.720855 3.965032 0.14325486 0.14176423 #> 179  3 15  0.5464930 0.14319556 3.720855 4.267348 0.14325486 0.14313626 #> 180  4 15  0.3023155 0.14245024 3.965032 4.267348 0.14176423 0.14313626 #> 181  1  3 -0.2780000 0.14080128 6.016000 5.738000 0.14637110 0.13523145 #> 182  1 23 -0.0480000 0.14463706 6.016000 5.968000 0.14637110 0.14290302 #> 183  1 24  0.0420000 0.14130904 6.016000 6.058000 0.14637110 0.13624697 #> 184  1 25  0.1080000 0.14924851 6.016000 6.124000 0.14637110 0.15212591 #> 185  3 23  0.2300000 0.13906723 5.738000 5.968000 0.13523145 0.14290302 #> 186  3 24  0.3200000 0.13573921 5.738000 6.058000 0.13523145 0.13624697 #> 187  3 25  0.3860000 0.14367868 5.738000 6.124000 0.13523145 0.15212591 #> 188 23 24  0.0900000 0.13957499 5.968000 6.058000 0.14290302 0.13624697 #> 189 23 25  0.1560000 0.14751446 5.968000 6.124000 0.14290302 0.15212591 #> 190 24 25  0.0660000 0.14418644 6.058000 6.124000 0.13624697 0.15212591 #> 191  1  3 -0.9136600 0.14074292 4.660234 3.746574 0.14174890 0.13973694 #> 192  1 23  0.0408800 0.14094007 4.660234 4.701114 0.14174890 0.14013124 #> 193  1 24 -0.3136340 0.14118000 4.660234 4.346600 0.14174890 0.14061110 #> 194  1 25 -0.3272700 0.14144197 4.660234 4.332964 0.14174890 0.14113504 #> 195  3 23  0.9545400 0.13993409 3.746574 4.701114 0.13973694 0.14013124 #> 196  3 24  0.6000260 0.14017402 3.746574 4.346600 0.13973694 0.14061110 #> 197  3 25  0.5863900 0.14043599 3.746574 4.332964 0.13973694 0.14113504 #> 198 23 24 -0.3545140 0.14037117 4.701114 4.346600 0.14013124 0.14061110 #> 199 23 25 -0.3681500 0.14063314 4.701114 4.332964 0.14013124 0.14113504 #> 200 24 25 -0.0136360 0.14087307 4.346600 4.332964 0.14061110 0.14113504 #> 201  1  3 -0.9818420 0.14275970 4.265908 3.284066 0.14423560 0.14128381 #> 202  1 23 -0.1499980 0.14286712 4.265908 4.115910 0.14423560 0.14149865 #> 203  1 24 -0.2727260 0.14331252 4.265908 3.993182 0.14423560 0.14238944 #> 204  1 25 -0.5727240 0.14328608 4.265908 3.693184 0.14423560 0.14233657 #> 205  3 23  0.8318440 0.14139123 3.284066 4.115910 0.14128381 0.14149865 #> 206  3 24  0.7091160 0.14183662 3.284066 3.993182 0.14128381 0.14238944 #> 207  3 25  0.4091180 0.14181019 3.284066 3.693184 0.14128381 0.14233657 #> 208 23 24 -0.1227280 0.14194404 4.115910 3.993182 0.14149865 0.14238944 #> 209 23 25 -0.4227260 0.14191761 4.115910 3.693184 0.14149865 0.14233657 #> 210 24 25 -0.2999980 0.14236301 3.993182 3.693184 0.14238944 0.14233657 #> 211  1  3 -1.0499940 0.14458812 3.980672 2.930678 0.14662378 0.14255246 #> 212  1 23 -0.3136340 0.14481899 3.980672 3.667038 0.14662378 0.14301421 #> 213  1 24 -0.2181800 0.14526326 3.980672 3.762492 0.14662378 0.14390273 #> 214  1 25 -0.7500240 0.14522939 3.980672 3.230648 0.14662378 0.14383500 #> 215  3 23  0.7363600 0.14278334 2.930678 3.667038 0.14255246 0.14301421 #> 216  3 24  0.8318140 0.14322760 2.930678 3.762492 0.14255246 0.14390273 #> 217  3 25  0.2999700 0.14319373 2.930678 3.230648 0.14255246 0.14383500 #> 218 23 24  0.0954540 0.14345847 3.667038 3.762492 0.14301421 0.14390273 #> 219 23 25 -0.4363900 0.14342460 3.667038 3.230648 0.14301421 0.14383500 #> 220 24 25 -0.5318440 0.14386887 3.762492 3.230648 0.14390273 0.14383500 #> 221  1  3 -1.1318420 0.14967491 3.643174 2.511332 0.15307332 0.14627650 #> 222  1 23 -0.1636360 0.14990828 3.643174 3.479538 0.15307332 0.14674325 #> 223  1 24 -0.3409080 0.15017593 3.643174 3.302266 0.15307332 0.14727855 #> 224  1 25 -0.7636320 0.15030499 3.643174 2.879542 0.15307332 0.14753666 #> 225  3 23  0.9682060 0.14650988 2.511332 3.479538 0.14627650 0.14674325 #> 226  3 24  0.7909340 0.14677752 2.511332 3.302266 0.14627650 0.14727855 #> 227  3 25  0.3682100 0.14690658 2.511332 2.879542 0.14627650 0.14753666 #> 228 23 24 -0.1772720 0.14701090 3.479538 3.302266 0.14674325 0.14727855 #> 229 23 25 -0.5999960 0.14713996 3.479538 2.879542 0.14674325 0.14753666 #> 230 24 25 -0.4227240 0.14740760 3.302266 2.879542 0.14727855 0.14753666 #> 231  1  3 -0.7363600 0.15362766 3.292040 2.555680 0.15809206 0.14916326 #> 232  1 23  0.3136060 0.15404152 3.292040 3.605646 0.15809206 0.14999098 #> 233  1 24 -0.0681820 0.15443382 3.292040 3.223858 0.15809206 0.15077558 #> 234  1 25 -0.4636340 0.15436797 3.292040 2.828406 0.15809206 0.15064388 #> 235  3 23  1.0499660 0.14957712 2.555680 3.605646 0.14916326 0.14999098 #> 236  3 24  0.6681780 0.14996942 2.555680 3.223858 0.14916326 0.15077558 #> 237  3 25  0.2727260 0.14990357 2.555680 2.828406 0.14916326 0.15064388 #> 238 23 24 -0.3817880 0.15038328 3.605646 3.223858 0.14999098 0.15077558 #> 239 23 25 -0.7772400 0.15031743 3.605646 2.828406 0.14999098 0.15064388 #> 240 24 25 -0.3954520 0.15070973 3.223858 2.828406 0.15077558 0.15064388 #> 241  1  3 -0.7227220 0.15740857 3.268146 2.545424 0.16279536 0.15202178 #> 242  1 23  0.0818480 0.15768694 3.268146 3.349994 0.16279536 0.15257853 #> 243  1 24 -0.0272720 0.15808295 3.268146 3.240874 0.16279536 0.15337054 #> 244  1 25 -0.4909060 0.15802378 3.268146 2.777240 0.16279536 0.15325220 #> 245  3 23  0.8045700 0.15230015 2.545424 3.349994 0.15202178 0.15257853 #> 246  3 24  0.6954500 0.15269616 2.545424 3.240874 0.15202178 0.15337054 #> 247  3 25  0.2318160 0.15263699 2.545424 2.777240 0.15202178 0.15325220 #> 248 23 24 -0.1091200 0.15297453 3.349994 3.240874 0.15257853 0.15337054 #> 249 23 25 -0.5727540 0.15291536 3.349994 2.777240 0.15257853 0.15325220 #> 250 24 25 -0.4636340 0.15331137 3.240874 2.777240 0.15337054 0.15325220 #> 251  1 23  0.0460000 0.13635780 6.118000 6.164000 0.13298113 0.13973447 #> 252  1 24  0.1860000 0.13166450 6.118000 6.304000 0.13298113 0.13034787 #> 253  1 25 -0.1860000 0.13441535 6.118000 5.932000 0.13298113 0.13584957 #> 254  1 26 -0.1580000 0.13241765 6.118000 5.960000 0.13298113 0.13185418 #> 255 23 24  0.1400000 0.13504117 6.164000 6.304000 0.13973447 0.13034787 #> 256 23 25 -0.2320000 0.13779202 6.164000 5.932000 0.13973447 0.13584957 #> 257 23 26 -0.2040000 0.13579433 6.164000 5.960000 0.13973447 0.13185418 #> 258 24 25 -0.3720000 0.13309872 6.304000 5.932000 0.13034787 0.13584957 #> 259 24 26 -0.3440000 0.13110102 6.304000 5.960000 0.13034787 0.13185418 #> 260 25 26  0.0280000 0.13385187 5.932000 5.960000 0.13584957 0.13185418 #> 261  1 23 -0.2520000 0.13356838 5.278000 5.026000 0.13368325 0.13345351 #> 262  1 24 -0.2480000 0.13373965 5.278000 5.030000 0.13368325 0.13379605 #> 263  1 25 -0.7440000 0.13374725 5.278000 4.534000 0.13368325 0.13381126 #> 264  1 26 -0.6000000 0.13359101 5.278000 4.678000 0.13368325 0.13349877 #> 265 23 24  0.0040000 0.13362478 5.026000 5.030000 0.13345351 0.13379605 #> 266 23 25 -0.4920000 0.13363238 5.026000 4.534000 0.13345351 0.13381126 #> 267 23 26 -0.3480000 0.13347614 5.026000 4.678000 0.13345351 0.13349877 #> 268 24 25 -0.4960000 0.13380366 5.030000 4.534000 0.13379605 0.13381126 #> 269 24 26 -0.3520000 0.13364741 5.030000 4.678000 0.13379605 0.13349877 #> 270 25 26  0.1440000 0.13365502 4.534000 4.678000 0.13381126 0.13349877 #> 271  1 23 -0.1800000 0.13569724 4.846000 4.666000 0.13645321 0.13494127 #> 272  1 24 -0.3480000 0.13590599 4.846000 4.498000 0.13645321 0.13535877 #> 273  1 25 -0.7700000 0.13594255 4.846000 4.076000 0.13645321 0.13543190 #> 274  1 26 -0.6160000 0.13574792 4.846000 4.230000 0.13645321 0.13504263 #> 275 23 24 -0.1680000 0.13515002 4.666000 4.498000 0.13494127 0.13535877 #> 276 23 25 -0.5900000 0.13518659 4.666000 4.076000 0.13494127 0.13543190 #> 277 23 26 -0.4360000 0.13499195 4.666000 4.230000 0.13494127 0.13504263 #> 278 24 25 -0.4220000 0.13539534 4.498000 4.076000 0.13535877 0.13543190 #> 279 24 26 -0.2680000 0.13520070 4.498000 4.230000 0.13535877 0.13504263 #> 280 25 26  0.1540000 0.13523726 4.076000 4.230000 0.13543190 0.13504263 #> 281  1 23 -0.3000000 0.13751398 4.746000 4.446000 0.13873236 0.13629561 #> 282  1 24 -0.4460000 0.13785391 4.746000 4.300000 0.13873236 0.13697546 #> 283  1 25 -0.8260000 0.13766931 4.746000 3.920000 0.13873236 0.13660626 #> 284  1 26 -0.8480000 0.13759315 4.746000 3.898000 0.13873236 0.13645394 #> 285 23 24 -0.1460000 0.13663553 4.446000 4.300000 0.13629561 0.13697546 #> 286 23 25 -0.5260000 0.13645094 4.446000 3.920000 0.13629561 0.13660626 #> 287 23 26 -0.5480000 0.13637477 4.446000 3.898000 0.13629561 0.13645394 #> 288 24 25 -0.3800000 0.13679086 4.300000 3.920000 0.13697546 0.13660626 #> 289 24 26 -0.4020000 0.13671470 4.300000 3.898000 0.13697546 0.13645394 #> 290 25 26 -0.0220000 0.13653010 3.920000 3.898000 0.13660626 0.13645394 #> 291  1 23 -0.4620000 0.14255895 4.576000 4.114000 0.14503567 0.14008223 #> 292  1 24 -0.4040000 0.14275582 4.576000 4.172000 0.14503567 0.14047598 #> 293  1 25 -0.7860000 0.14268059 4.576000 3.790000 0.14503567 0.14032551 #> 294  1 26 -0.8760000 0.14249088 4.576000 3.700000 0.14503567 0.13994609 #> 295 23 24  0.0580000 0.14027910 4.114000 4.172000 0.14008223 0.14047598 #> 296 23 25 -0.3240000 0.14020387 4.114000 3.790000 0.14008223 0.14032551 #> 297 23 26 -0.4140000 0.14001416 4.114000 3.700000 0.14008223 0.13994609 #> 298 24 25 -0.3820000 0.14040074 4.172000 3.790000 0.14047598 0.14032551 #> 299 24 26 -0.4720000 0.14021103 4.172000 3.700000 0.14047598 0.13994609 #> 300 25 26 -0.0900000 0.14013580 3.790000 3.700000 0.14032551 0.13994609 #> 301  1 23 -0.5520000 0.14660262 4.604000 4.052000 0.14996109 0.14324415 #> 302  1 24 -0.4500000 0.14674173 4.604000 4.154000 0.14996109 0.14352237 #> 303  1 25 -0.7420000 0.14687378 4.604000 3.862000 0.14996109 0.14378647 #> 304  1 26 -0.8960000 0.14650890 4.604000 3.708000 0.14996109 0.14305671 #> 305 23 24  0.1020000 0.14338326 4.052000 4.154000 0.14324415 0.14352237 #> 306 23 25 -0.1900000 0.14351531 4.052000 3.862000 0.14324415 0.14378647 #> 307 23 26 -0.3440000 0.14315043 4.052000 3.708000 0.14324415 0.14305671 #> 308 24 25 -0.2920000 0.14365442 4.154000 3.862000 0.14352237 0.14378647 #> 309 24 26 -0.4460000 0.14328954 4.154000 3.708000 0.14352237 0.14305671 #> 310 25 26 -0.1540000 0.14342159 3.862000 3.708000 0.14378647 0.14305671 #> 311  1 23 -0.6140000 0.15024935 4.634000 4.020000 0.15451115 0.14598755 #> 312  1 24 -0.5600000 0.15032219 4.634000 4.074000 0.15451115 0.14613323 #> 313  1 25 -0.7800000 0.15037947 4.634000 3.854000 0.15451115 0.14624779 #> 314  1 26 -0.8300000 0.15018821 4.634000 3.804000 0.15451115 0.14586527 #> 315 23 24  0.0540000 0.14606039 4.020000 4.074000 0.14598755 0.14613323 #> 316 23 25 -0.1660000 0.14611767 4.020000 3.854000 0.14598755 0.14624779 #> 317 23 26 -0.2160000 0.14592641 4.020000 3.804000 0.14598755 0.14586527 #> 318 24 25 -0.2200000 0.14619051 4.074000 3.854000 0.14613323 0.14624779 #> 319 24 26 -0.2700000 0.14599925 4.074000 3.804000 0.14613323 0.14586527 #> 320 25 26 -0.0500000 0.14605653 3.854000 3.804000 0.14624779 0.14586527 #> 321  1  2 -0.0523950 0.11369034 5.296405 5.244010 0.11365985 0.11372082 #> 322  1  3  0.0074850 0.11480580 5.296405 5.303890 0.11365985 0.11595175 #> 323  1  4  0.1197650 0.11399197 5.296405 5.416170 0.11365985 0.11432410 #> 324  1 15 -0.0299400 0.11476825 5.296405 5.266465 0.11365985 0.11587666 #> 325  2  3  0.0598800 0.11483629 5.244010 5.303890 0.11372082 0.11595175 #> 326  2  4  0.1721600 0.11402246 5.244010 5.416170 0.11372082 0.11432410 #> 327  2 15  0.0224550 0.11479874 5.244010 5.266465 0.11372082 0.11587666 #> 328  3  4  0.1122800 0.11513793 5.303890 5.416170 0.11595175 0.11432410 #> 329  3 15 -0.0374250 0.11591421 5.303890 5.266465 0.11595175 0.11587666 #> 330  4 15 -0.1497050 0.11510038 5.416170 5.266465 0.11432410 0.11587666 #> 331  1  2 -0.5988025 0.13746929 4.997006 4.398204 0.12490734 0.15003125 #> 332  1  3 -0.9505990 0.12213665 4.997006 4.046407 0.12490734 0.11936596 #> 333  1  4 -0.8607785 0.12132247 4.997006 4.136228 0.12490734 0.11773760 #> 334  1 15 -1.1002995 0.10241893 4.997006 3.896707 0.12490734 0.07993053 #> 335  2  3 -0.3517965 0.13469860 4.398204 4.046407 0.15003125 0.11936596 #> 336  2  4 -0.2619760 0.13388442 4.398204 4.136228 0.15003125 0.11773760 #> 337  2 15 -0.5014970 0.11498089 4.398204 3.896707 0.15003125 0.07993053 #> 338  3  4  0.0898205 0.11855178 4.046407 4.136228 0.11936596 0.11773760 #> 339  3 15 -0.1497005 0.09964824 4.046407 3.896707 0.11936596 0.07993053 #> 340  4 15 -0.2395210 0.09883406 4.136228 3.896707 0.11773760 0.07993053 #> 341  1  2 -0.3667660 0.14748225 4.862275 4.495509 0.14493324 0.15003125 #> 342  1  3 -0.6062870 0.13753193 4.862275 4.255988 0.14493324 0.13013062 #> 343  1  4 -0.6137725 0.13658798 4.862275 4.248502 0.14493324 0.12824272 #> 344  1 15 -0.8682630 0.11747098 4.862275 3.994012 0.14493324 0.09000872 #> 345  2  3 -0.2395210 0.14008094 4.495509 4.255988 0.15003125 0.13013062 #> 346  2  4 -0.2470065 0.13913698 4.495509 4.248502 0.15003125 0.12824272 #> 347  2 15 -0.5014970 0.12001998 4.495509 3.994012 0.15003125 0.09000872 #> 348  3  4 -0.0074855 0.12918667 4.255988 4.248502 0.13013062 0.12824272 #> 349  3 15 -0.2619760 0.11006967 4.255988 3.994012 0.13013062 0.09000872 #> 350  4 15 -0.2544905 0.10912572 4.248502 3.994012 0.12824272 0.09000872 #> 351  1 15 -0.0500000 0.12002485 5.400000 5.350000 0.11993228 0.12011743 #> 352  1 27  0.1000000 0.11990698 5.400000 5.500000 0.11993228 0.11988167 #> 353  1 28 -0.0500000 0.12044472 5.400000 5.350000 0.11993228 0.12095716 #> 354  1 29  0.0000000 0.12050259 5.400000 5.400000 0.11993228 0.12107291 #> 355 15 27  0.1500000 0.11999955 5.350000 5.500000 0.12011743 0.11988167 #> 356 15 28  0.0000000 0.12053729 5.350000 5.350000 0.12011743 0.12095716 #> 357 15 29  0.0500000 0.12059517 5.350000 5.400000 0.12011743 0.12107291 #> 358 27 28 -0.1500000 0.12041942 5.500000 5.350000 0.11988167 0.12095716 #> 359 27 29 -0.1000000 0.12047729 5.500000 5.400000 0.11988167 0.12107291 #> 360 28 29  0.0500000 0.12101503 5.350000 5.400000 0.12095716 0.12107291 #> 361  1 15 -0.5000000 0.12421366 4.450000 3.950000 0.12534348 0.12308383 #> 362  1 27 -0.5000000 0.12418605 4.450000 3.950000 0.12534348 0.12302862 #> 363  1 28 -0.5500000 0.12495637 4.450000 3.900000 0.12534348 0.12456927 #> 364  1 29 -0.3500000 0.12471152 4.450000 4.100000 0.12534348 0.12407956 #> 365 15 27  0.0000000 0.12305623 3.950000 3.950000 0.12308383 0.12302862 #> 366 15 28 -0.0500000 0.12382655 3.950000 3.900000 0.12308383 0.12456927 #> 367 15 29  0.1500000 0.12358170 3.950000 4.100000 0.12308383 0.12407956 #> 368 27 28 -0.0500000 0.12379894 3.950000 3.900000 0.12302862 0.12456927 #> 369 27 29  0.1500000 0.12355409 3.950000 4.100000 0.12302862 0.12407956 #> 370 28 29  0.2000000 0.12432441 3.900000 4.100000 0.12456927 0.12407956 #> 371  1 15 -0.4000000 0.13118728 4.200000 3.800000 0.13397271 0.12840184 #> 372  1 27 -0.2500000 0.13094764 4.200000 3.950000 0.13397271 0.12792257 #> 373  1 28 -0.5000000 0.13163671 4.200000 3.700000 0.13397271 0.12930072 #> 374  1 29 -0.3500000 0.13171602 4.200000 3.850000 0.13397271 0.12945933 #> 375 15 27  0.1500000 0.12816221 3.800000 3.950000 0.12840184 0.12792257 #> 376 15 28 -0.1000000 0.12885128 3.800000 3.700000 0.12840184 0.12930072 #> 377 15 29  0.0500000 0.12893059 3.800000 3.850000 0.12840184 0.12945933 #> 378 27 28 -0.2500000 0.12861164 3.950000 3.700000 0.12792257 0.12930072 #> 379 27 29 -0.1000000 0.12869095 3.950000 3.850000 0.12792257 0.12945933 #> 380 28 29  0.1500000 0.12938002 3.700000 3.850000 0.12930072 0.12945933 #> 381  1 15 -0.4500000 0.13895979 4.150000 3.700000 0.14364307 0.13427651 #> 382  1 27 -0.2000000 0.13871312 4.150000 3.950000 0.14364307 0.13378317 #> 383  1 28 -0.4500000 0.13940422 4.150000 3.700000 0.14364307 0.13516536 #> 384  1 29 -0.3500000 0.13954039 4.150000 3.800000 0.14364307 0.13543772 #> 385 15 27  0.2500000 0.13402984 3.700000 3.950000 0.13427651 0.13378317 #> 386 15 28  0.0000000 0.13472094 3.700000 3.700000 0.13427651 0.13516536 #> 387 15 29  0.1000000 0.13485711 3.700000 3.800000 0.13427651 0.13543772 #> 388 27 28 -0.2500000 0.13447427 3.950000 3.700000 0.13378317 0.13516536 #> 389 27 29 -0.1500000 0.13461044 3.950000 3.800000 0.13378317 0.13543772 #> 390 28 29  0.1000000 0.13530154 3.700000 3.800000 0.13516536 0.13543772 #> 391  1 23 -0.2580000 0.13697594 6.014000 5.756000 0.11866399 0.15528789 #> 392  1 24 -0.3380000 0.13831437 6.014000 5.676000 0.11866399 0.15796474 #> 393  1 25  0.2740000 0.15409189 6.014000 6.288000 0.11866399 0.18951979 #> 394 23 24 -0.0800000 0.15662632 5.756000 5.676000 0.15528789 0.15796474 #> 395 23 25  0.5320000 0.17240384 5.756000 6.288000 0.15528789 0.18951979 #> 396 24 25  0.6120000 0.17374227 5.676000 6.288000 0.15796474 0.18951979 #> 397  1 23 -0.7099740 0.16418722 4.071478 3.361504 0.13816027 0.19021417 #> 398  1 24 -0.8248060 0.16282018 4.071478 3.246672 0.13816027 0.18748009 #> 399  1 25 -0.6759580 0.16332221 4.071478 3.395520 0.13816027 0.18848415 #> 400 23 24 -0.1148320 0.18884713 3.361504 3.246672 0.19021417 0.18748009 #> 401 23 25  0.0340160 0.18934916 3.361504 3.395520 0.19021417 0.18848415 #> 402 24 25  0.1488480 0.18798212 3.246672 3.395520 0.18748009 0.18848415 #> 403  1  3  0.2000000 0.09390836 4.950000 5.150000 0.10856203 0.07925469 #> 404  1 12  0.2000000 0.09196563 4.950000 5.150000 0.10856203 0.07536922 #> 405  1 13  0.0000000 0.09355150 4.950000 4.950000 0.10856203 0.07854096 #> 406  3 12  0.0000000 0.07731196 5.150000 5.150000 0.07925469 0.07536922 #> 407  3 13 -0.2000000 0.07889783 5.150000 4.950000 0.07925469 0.07854096 #> 408 12 13 -0.2000000 0.07695509 5.150000 4.950000 0.07536922 0.07854096 #> 409  1  3 -0.4500000 0.09777980 4.150000 3.700000 0.11449208 0.08106751 #> 410  1 12 -0.5500000 0.09709406 4.150000 3.600000 0.11449208 0.07969604 #> 411  1 13 -0.7500000 0.09700967 4.150000 3.400000 0.11449208 0.07952726 #> 412  3 12 -0.1000000 0.08038178 3.700000 3.600000 0.08106751 0.07969604 #> 413  3 13 -0.3000000 0.08029738 3.700000 3.400000 0.08106751 0.07952726 #> 414 12 13 -0.2000000 0.07961165 3.600000 3.400000 0.07969604 0.07952726 #> 415  1  3 -0.4000000 0.11094868 3.800000 3.400000 0.13292276 0.08897460 #> 416  1 12 -0.5000000 0.11009387 3.800000 3.300000 0.13292276 0.08726499 #> 417  1 13 -0.7000000 0.11012502 3.800000 3.100000 0.13292276 0.08732728 #> 418  3 12 -0.1000000 0.08811979 3.400000 3.300000 0.08897460 0.08726499 #> 419  3 13 -0.3000000 0.08815094 3.400000 3.100000 0.08897460 0.08732728 #> 420 12 13 -0.2000000 0.08729613 3.300000 3.100000 0.08726499 0.08732728 #> 421  1  3  0.2000000 0.07825340 4.900000 5.100000 0.07770287 0.07880393 #> 422  1 11  0.0500000 0.07825340 4.900000 4.950000 0.07770287 0.07880393 #> 423  1 12  0.0500000 0.07776545 4.900000 4.950000 0.07770287 0.07782803 #> 424  3 11 -0.1500000 0.07880393 5.100000 4.950000 0.07880393 0.07880393 #> 425  3 12 -0.1500000 0.07831598 5.100000 4.950000 0.07880393 0.07782803 #> 426 11 12  0.0000000 0.07831598 4.950000 4.950000 0.07880393 0.07782803 #> 427  1  3 -0.5000000 0.08176848 4.350000 3.850000 0.08237490 0.08116206 #> 428  1 11 -0.6000000 0.08180870 4.350000 3.750000 0.08237490 0.08124250 #> 429  1 12 -0.4500000 0.08175051 4.350000 3.900000 0.08237490 0.08112612 #> 430  3 11 -0.1000000 0.08120228 3.850000 3.750000 0.08116206 0.08124250 #> 431  3 12  0.0500000 0.08114409 3.850000 3.900000 0.08116206 0.08112612 #> 432 11 12  0.1500000 0.08118431 3.750000 3.900000 0.08124250 0.08112612 #> 433  1  3 -0.2500000 0.09256603 3.650000 3.400000 0.09589396 0.08923811 #> 434  1 11 -0.4000000 0.09256265 3.650000 3.250000 0.09589396 0.08923133 #> 435  1 12 -0.3000000 0.09255146 3.650000 3.350000 0.09589396 0.08920896 #> 436  3 11 -0.1500000 0.08923472 3.400000 3.250000 0.08923811 0.08923133 #> 437  3 12 -0.0500000 0.08922353 3.400000 3.350000 0.08923811 0.08920896 #> 438 11 12  0.1000000 0.08922015 3.250000 3.350000 0.08923133 0.08920896 #> 439  1 15 -0.1140000 0.11024929 7.215000 7.101000 0.10649083 0.11400775 #> 440  1 16  0.1010000 0.10246817 7.215000 7.316000 0.10649083 0.09844550 #> 441  1 18  0.1430000 0.10288415 7.215000 7.358000 0.10649083 0.09927747 #> 442 15 16  0.2150000 0.10622663 7.101000 7.316000 0.11400775 0.09844550 #> 443 15 18  0.2570000 0.10664261 7.101000 7.358000 0.11400775 0.09927747 #> 444 16 18  0.0420000 0.09886149 7.316000 7.358000 0.09844550 0.09927747 #> 445  1 15 -1.3940000 0.11158213 5.265000 3.871000 0.11319620 0.10996805 #> 446  1 16 -1.2490000 0.11119308 5.265000 4.016000 0.11319620 0.10918995 #> 447  1 18 -0.6370000 0.10992883 5.265000 4.628000 0.11319620 0.10666145 #> 448 15 16  0.1450000 0.10957900 3.871000 4.016000 0.10996805 0.10918995 #> 449 15 18  0.7570000 0.10831475 3.871000 4.628000 0.10996805 0.10666145 #> 450 16 18  0.6120000 0.10792570 4.016000 4.628000 0.10918995 0.10666145 #> 451  1 15 -1.3940000 0.11798808 4.945000 3.551000 0.12136624 0.11460991 #> 452  1 16 -1.3990000 0.11755586 4.945000 3.546000 0.12136624 0.11374548 #> 453  1 18 -0.8270000 0.11634858 4.945000 4.118000 0.12136624 0.11133092 #> 454 15 16 -0.0050000 0.11417770 3.551000 3.546000 0.11460991 0.11374548 #> 455 15 18  0.5670000 0.11297042 3.551000 4.118000 0.11460991 0.11133092 #> 456 16 18  0.5720000 0.11253820 3.546000 4.118000 0.11374548 0.11133092 #> 457  1 15 -1.3240000 0.12630932 4.655000 3.331000 0.13216957 0.12044908 #> 458  1 16 -1.0590000 0.12607879 4.655000 3.596000 0.13216957 0.11998801 #> 459  1 18 -0.7370000 0.12479121 4.655000 3.918000 0.13216957 0.11741286 #> 460 15 16  0.2650000 0.12021854 3.331000 3.596000 0.12044908 0.11998801 #> 461 15 18  0.5870000 0.11893097 3.331000 3.918000 0.12044908 0.11741286 #> 462 16 18  0.3220000 0.11870043 3.596000 3.918000 0.11998801 0.11741286 #> 463  1  3 -0.1000000 0.07782541 5.500000 5.400000 0.07393263 0.08171819 #> 464  1 11 -0.1000000 0.07603332 5.500000 5.400000 0.07393263 0.07813401 #> 465  1 14 -0.1000000 0.07735586 5.500000 5.400000 0.07393263 0.08077908 #> 466  3 11  0.0000000 0.07992610 5.400000 5.400000 0.08171819 0.07813401 #> 467  3 14  0.0000000 0.08124863 5.400000 5.400000 0.08171819 0.08077908 #> 468 11 14  0.0000000 0.07945654 5.400000 5.400000 0.07813401 0.08077908 #> 469  1  3 -0.6500000 0.09421929 4.350000 3.700000 0.09856959 0.08986899 #> 470  1 11 -0.7500000 0.09439801 4.350000 3.600000 0.09856959 0.09022642 #> 471  1 14 -0.8000000 0.09461391 4.350000 3.550000 0.09856959 0.09065824 #> 472  3 11 -0.1000000 0.09004771 3.700000 3.600000 0.08986899 0.09022642 #> 473  3 14 -0.1500000 0.09026362 3.700000 3.550000 0.08986899 0.09065824 #> 474 11 14 -0.0500000 0.09044233 3.600000 3.550000 0.09022642 0.09065824 #> 475  1  3 -0.1000000 0.08572928 5.150000 5.050000 0.09622504 0.07523352 #> 476  1 12 -0.1000000 0.08662970 5.150000 5.050000 0.09622504 0.07703435 #> 477  1 13 -0.1500000 0.08534425 5.150000 5.000000 0.09622504 0.07446346 #> 478  3 12  0.0000000 0.07613394 5.050000 5.050000 0.07523352 0.07703435 #> 479  3 13 -0.0500000 0.07484849 5.050000 5.000000 0.07523352 0.07446346 #> 480 12 13 -0.0500000 0.07574891 5.050000 5.000000 0.07703435 0.07446346 #> 481  1  3 -0.6000000 0.09411812 4.450000 3.850000 0.11095877 0.07727746 #> 482  1 12 -0.7000000 0.09397274 4.450000 3.750000 0.11095877 0.07698671 #> 483  1 13 -0.7500000 0.09372504 4.450000 3.700000 0.11095877 0.07649130 #> 484  3 12 -0.1000000 0.07713209 3.850000 3.750000 0.07727746 0.07698671 #> 485  3 13 -0.1500000 0.07688438 3.850000 3.700000 0.07727746 0.07649130 #> 486 12 13 -0.0500000 0.07673901 3.750000 3.700000 0.07698671 0.07649130 #> 487  1  3 -0.4500000 0.10684547 3.950000 3.500000 0.12879815 0.08489279 #> 488  1 12 -0.5000000 0.10661317 3.950000 3.450000 0.12879815 0.08442820 #> 489  1 13 -0.5500000 0.10646593 3.950000 3.400000 0.12879815 0.08413371 #> 490  3 12 -0.0500000 0.08466049 3.500000 3.450000 0.08489279 0.08442820 #> 491  3 13 -0.1000000 0.08451325 3.500000 3.400000 0.08489279 0.08413371 #> 492 12 13 -0.0500000 0.08428095 3.450000 3.400000 0.08442820 0.08413371 #> 493  1 15 -0.1490000 0.10675878 6.548000 6.399000 0.08613561 0.12738195 #> 494  1 16  0.0770000 0.08808455 6.548000 6.625000 0.08613561 0.09003349 #> 495 15 16  0.2260000 0.10870772 6.399000 6.625000 0.12738195 0.09003349 #> 496  1 15 -1.3690000 0.11327226 5.398000 4.029000 0.09317367 0.13337086 #> 497  1 16 -0.9630000 0.09287718 5.398000 4.435000 0.09317367 0.09258069 #> 498 15 16  0.4060000 0.11297578 4.029000 4.435000 0.13337086 0.09258069 #> 499  1 15 -1.2490000 0.11915230 4.968000 3.719000 0.09969241 0.13861218 #> 500  1 16 -0.8830000 0.09807585 4.968000 4.085000 0.09969241 0.09645929 #> 501 15 16  0.3660000 0.11753573 3.719000 4.085000 0.13861218 0.09645929 #> 502  1 15 -0.7830000 0.12748552 4.751000 3.968000 0.10850034 0.14647069 #> 503  1 16 -0.7070000 0.10512964 4.751000 4.044000 0.10850034 0.10175895 #> 504 15 16  0.0760000 0.12411482 3.968000 4.044000 0.14647069 0.10175895 #> 505  1  3  0.0900000 0.12437464 6.660000 6.750000 0.14375175 0.10499753 #> 506  1  7  0.0800000 0.12516996 6.660000 6.740000 0.14375175 0.10658817 #> 507  3  7 -0.0100000 0.10579285 6.750000 6.740000 0.10499753 0.10658817 #> 508  1  3 -1.2987705 0.13095036 5.905123 4.606352 0.15295812 0.10894260 #> 509  1  7 -1.6598215 0.13209492 5.905123 4.245301 0.15295812 0.11123171 #> 510  3  7 -0.3610510 0.11008716 4.606352 4.245301 0.10894260 0.11123171 #> 511  1  3 -1.3268670 0.13506309 5.597386 4.270519 0.15878729 0.11133890 #> 512  1  7 -1.5756380 0.13632510 5.597386 4.021748 0.15878729 0.11386291 #> 513  3  7 -0.2487710 0.11260091 4.270519 4.021748 0.11133890 0.11386291 #> 514  1  3 -1.0743180 0.14188306 5.374769 4.300451 0.16812945 0.11563667 #> 515  1  7 -1.3371910 0.14307904 5.374769 4.037578 0.16812945 0.11802862 #> 516  3  7 -0.2628730 0.11683265 4.300451 4.037578 0.11563667 0.11802862 #> 517  1  3 -0.8497570 0.14758421 5.124054 4.274297 0.17621052 0.11895791 #> 518  1  7 -1.2248030 0.14888977 5.124054 3.899251 0.17621052 0.12156902 #> 519  3  7 -0.3750460 0.12026346 4.274297 3.899251 0.11895791 0.12156902 #> 520  1  3  0.0900000 0.13945842 6.640000 6.730000 0.15968999 0.11922685 #> 521  1  7  0.2300000 0.13244802 6.640000 6.870000 0.15968999 0.10520605 #> 522  3  7  0.1400000 0.11221645 6.730000 6.870000 0.11922685 0.10520605 #> 523  1  3 -1.1352320 0.14236403 5.519577 4.384345 0.17109473 0.11363334 #> 524  1  7 -1.0538110 0.14269630 5.519577 4.465766 0.17109473 0.11429788 #> 525  3  7  0.0814210 0.11396561 4.384345 4.465766 0.11363334 0.11429788 #> 526  1  3 -0.9601670 0.14671279 5.097473 4.137306 0.17758313 0.11584245 #> 527  1  7 -0.8641570 0.14715385 5.097473 4.233316 0.17758313 0.11672457 #> 528  3  7  0.0960100 0.11628351 4.137306 4.233316 0.11584245 0.11672457 #> 529  1  3 -0.9893070 0.15356265 5.011880 4.022573 0.18711207 0.12001322 #> 530  1  7 -0.9225120 0.15399184 5.011880 4.089368 0.18711207 0.12087161 #> 531  3  7  0.0667950 0.12044241 4.022573 4.089368 0.12001322 0.12087161 #> 532  1  3 -1.0623260 0.15962039 4.999232 3.936906 0.19569508 0.12354571 #> 533  1  7 -0.9079610 0.16001683 4.999232 4.091271 0.19569508 0.12433858 #> 534  3  7  0.1543650 0.12394214 3.936906 4.091271 0.12354571 0.12433858 #> 535  1  3 -0.0200000 0.16408093 6.850000 6.830000 0.19248710 0.13567477 #> 536  1 20  0.2000000 0.15909382 6.850000 7.050000 0.19248710 0.12570054 #> 537  3 20  0.2200000 0.13068765 6.830000 7.050000 0.13567477 0.12570054 #> 538  1  3 -0.7600000 0.16780705 5.050000 4.290000 0.19825783 0.13735626 #> 539  1 20 -0.4000000 0.16703645 5.050000 4.650000 0.19825783 0.13581507 #> 540  3 20  0.3600000 0.13658566 4.290000 4.650000 0.13735626 0.13581507 #> 541  1  3 -0.8100000 0.17283334 4.900000 4.090000 0.20546535 0.14020133 #> 542  1 20 -0.5400000 0.17232798 4.900000 4.360000 0.20546535 0.13919061 #> 543  3 20  0.2700000 0.13969597 4.090000 4.360000 0.14020133 0.13919061 #> 544  1  3 -0.8100000 0.17747931 4.740000 3.930000 0.21210711 0.14285150 #> 545  1 20 -0.5500000 0.17687103 4.740000 4.190000 0.21210711 0.14163496 #> 546  3 20  0.2600000 0.14224323 3.930000 4.190000 0.14285150 0.14163496 #> 547  1  3 -0.1900000 0.16198786 6.870000 6.680000 0.19089880 0.13307692 #> 548  1 20 -0.1700000 0.15889353 6.870000 6.700000 0.19089880 0.12688825 #> 549  3 20  0.0200000 0.12998259 6.680000 6.700000 0.13307692 0.12688825 #> 550  1  3 -0.7400000 0.16316042 4.930000 4.190000 0.19254502 0.13377582 #> 551  1 20 -1.2100000 0.16546241 4.930000 3.720000 0.19254502 0.13837981 #> 552  3 20 -0.4700000 0.13607781 4.190000 3.720000 0.13377582 0.13837981 #> 553  1  3 -1.0600000 0.16797515 4.760000 3.700000 0.19892926 0.13702105 #> 554  1 20 -1.0400000 0.17015955 4.760000 3.720000 0.19892926 0.14138984 #> 555  3 20  0.0200000 0.13920544 3.700000 3.720000 0.13702105 0.14138984 #> 556  1  3 -1.0500000 0.17291585 4.590000 3.540000 0.20627513 0.13955657 #> 557  1 20 -0.9700000 0.17518877 4.590000 3.620000 0.20627513 0.14410240 #> 558  3 20  0.0800000 0.14182949 3.540000 3.620000 0.13955657 0.14410240 #> 559  1 21 -0.0590000 0.20030464 6.003000 5.944000 0.20107522 0.19953406 #> 560  1 22  0.4330000 0.20053629 6.003000 6.436000 0.20107522 0.19999737 #> 561 21 22  0.4920000 0.19976572 5.944000 6.436000 0.19953406 0.19999737 #> 562  1 21 -2.1590000 0.20422009 5.643000 3.484000 0.20685093 0.20158925 #> 563  1 22 -1.4970000 0.20520553 5.643000 4.146000 0.20685093 0.20356012 #> 564 21 22  0.6620000 0.20257469 3.484000 4.146000 0.20158925 0.20356012 #> 565  1 21 -2.2590000 0.20690937 5.273000 3.014000 0.20991297 0.20390576 #> 566  1 22 -1.6270000 0.20766191 5.273000 3.646000 0.20991297 0.20541085 #> 567 21 22  0.6320000 0.20465831 3.014000 3.646000 0.20390576 0.20541085 #> 568  1 21 -2.1090000 0.21350139 5.233000 3.124000 0.21850685 0.20849592 #> 569  1 22 -1.3270000 0.21443913 5.233000 3.906000 0.21850685 0.21037141 #> 570 21 22  0.7820000 0.20943366 3.124000 3.906000 0.20849592 0.21037141 #> 571  1 21 -2.2990000 0.21922987 5.123000 2.824000 0.22585766 0.21260208 #> 572  1 22 -1.5470000 0.22013150 5.123000 3.576000 0.22585766 0.21440533 #> 573 21 22  0.7520000 0.21350370 2.824000 3.576000 0.21260208 0.21440533 #> 574  1  9 -0.3790000 0.16069082 6.870000 6.491000 0.20939918 0.11198246 #> 575  1 15 -0.3060000 0.16231402 6.870000 6.564000 0.20939918 0.11522885 #> 576  9 15  0.0730000 0.11360565 6.491000 6.564000 0.11198246 0.11522885 #> 577  1  9 -1.4890000 0.17609174 5.530000 4.041000 0.23627637 0.11590711 #> 578  1 15 -1.5560000 0.17652499 5.530000 3.974000 0.23627637 0.11677361 #> 579  9 15 -0.0670000 0.11634036 4.041000 3.974000 0.11590711 0.11677361 #> 580  1  9 -1.3790000 0.18208872 5.400000 4.021000 0.24560040 0.11857705 #> 581  1 15 -1.3660000 0.18237427 5.400000 4.034000 0.24560040 0.11914814 #> 582  9 15  0.0130000 0.11886260 4.021000 4.034000 0.11857705 0.11914814 #> 583  1  9 -1.2590000 0.19136418 5.160000 3.901000 0.25982124 0.12290712 #> 584  1 15 -1.1260000 0.19174497 5.160000 4.034000 0.25982124 0.12366869 #> 585  9 15  0.1330000 0.12328791 3.901000 4.034000 0.12290712 0.12366869 #> 586  1  9 -1.5390000 0.19869980 5.340000 3.801000 0.27087539 0.12652421 #> 587  1 15 -1.2560000 0.19901329 5.340000 4.084000 0.27087539 0.12715119 #> 588  9 15  0.2830000 0.12683770 3.801000 4.084000 0.12652421 0.12715119 #> 589  1  3  0.1000000 0.07304483 5.300000 5.400000 0.07329841 0.07279126 #> 590  1 11  0.1000000 0.07596883 5.300000 5.400000 0.07329841 0.07863926 #> 591  3 11  0.0000000 0.07571526 5.400000 5.400000 0.07279126 0.07863926 #> 592  1  3 -0.5600000 0.08210047 4.420000 3.860000 0.08359282 0.08060813 #> 593  1 11 -0.5400000 0.08170377 4.420000 3.880000 0.08359282 0.07981473 #> 594  3 11  0.0200000 0.08021143 3.860000 3.880000 0.08060813 0.07981473 #> 595  1  3 -0.6750000 0.08624366 4.255000 3.580000 0.08894068 0.08354665 #> 596  1 11 -0.6700000 0.08589334 4.255000 3.585000 0.08894068 0.08284601 #> 597  3 11  0.0050000 0.08319633 3.580000 3.585000 0.08354665 0.08284601 #> 598  1  3 -0.5950000 0.09039655 4.140000 3.545000 0.09407760 0.08671550 #> 599  1 11 -0.5550000 0.08999412 4.140000 3.585000 0.09407760 0.08591064 #> 600  3 11  0.0400000 0.08631307 3.545000 3.585000 0.08671550 0.08591064 #> 601  3 15  0.5200000 0.19002769 4.280000 4.800000 0.19002043 0.19003495 #> 602  3 22  0.5700000 0.19001310 4.280000 4.850000 0.19002043 0.19000576 #> 603 15 22  0.0500000 0.19002035 4.800000 4.850000 0.19003495 0.19000576 #> 604  3 15  0.5100000 0.20001557 2.970000 3.480000 0.19002043 0.21001071 #> 605  3 22  0.3900000 0.19501783 2.970000 3.360000 0.19002043 0.20001523 #> 606 15 22 -0.1200000 0.20501297 3.480000 3.360000 0.21001071 0.20001523 #> 607  3 15  0.5600000 0.21997086 2.780000 3.340000 0.19996735 0.23997436 #> 608  3 22  0.4000000 0.21000075 2.780000 3.180000 0.19996735 0.22003416 #> 609 15 22 -0.1600000 0.23000426 3.340000 3.180000 0.23997436 0.22003416 #> 610  1  5 -0.0550000 0.11468731 5.175000 5.120000 0.11801842 0.11135620 #> 611  1  5 -0.4450000 0.15725473 3.430000 2.985000 0.16255069 0.15195876 #> 612  1  5  0.0150000 0.14981834 5.475000 5.490000 0.13867505 0.16096163 #> 613  1  5 -0.7000000 0.18232254 3.880000 3.180000 0.18527144 0.17937364 #> 614  1  3 -0.0440000 0.08360569 4.742000 4.698000 0.08388064 0.08333074 #> 615  1  3 -0.3060000 0.12465952 3.020000 2.714000 0.12785580 0.12146325 #> 616  1 19  0.1800000 0.29498908 6.130000 6.310000 0.31002201 0.27995615 #> 617  1 19 -1.0000000 0.29498908 5.830000 4.830000 0.31002201 0.27995615 #> 618  1 19 -0.7000000 0.29498908 5.720000 5.020000 0.31002201 0.27995615 #> 619  1 19 -1.1800000 0.29498908 5.940000 4.760000 0.31002201 0.27995615 #> 620  1 19 -1.2600000 0.29498908 5.980000 4.720000 0.31002201 0.27995615 #> 621  1 19 -1.0400000 0.29498908 5.980000 4.940000 0.31002201 0.27995615 #> 622  1  3 -0.0500000 0.11327460 5.350000 5.300000 0.11667262 0.10987659 #> 623  1  3 -0.0500000 0.12585508 5.350000 5.300000 0.12868684 0.12302332 #> 624  1  7  0.1800000 0.13950515 6.466000 6.646000 0.16356491 0.11544539 #> 625  1  7 -0.8200000 0.14504395 5.236000 4.416000 0.17148452 0.11860337 #> 626  1  7 -1.0400000 0.14947612 5.186000 4.146000 0.17771766 0.12123458 #> 627  1  7 -1.0400000 0.15711534 4.686000 3.646000 0.18879059 0.12544008 #> 628  1  7 -1.0600000 0.16244692 4.716000 3.656000 0.19583685 0.12905699 #> 629  1  3 -0.1300000 0.14691939 4.790000 4.660000 0.14954087 0.14429790 #> 630  1  3 -0.3400000 0.15749590 3.420000 3.080000 0.16328616 0.15170564 #> 631  1  3 -0.4500000 0.16950866 3.080000 2.630000 0.17919315 0.15982418 #> 632  1  3 -0.1900000 0.18570955 2.790000 2.600000 0.19864814 0.17277095 #> 633  1  3 -0.5600000 0.19609402 2.700000 2.140000 0.20921215 0.18297588 #> 634  1  3 -0.2500000 0.12508127 5.300000 5.050000 0.10007405 0.15008849 #> 635  1  3 -0.6500000 0.10012020 4.400000 3.750000 0.10007405 0.10016636 #>     fupcount   time studyID #> 1          1  0.000      18 #> 2          1  0.000      18 #> 3          1  0.000      18 #> 4          1  0.000      18 #> 5          1  0.000      18 #> 6          1  0.000      18 #> 7          1  0.000      18 #> 8          1  0.000      18 #> 9          1  0.000      18 #> 10         1  0.000      18 #> 11         1  0.000      18 #> 12         1  0.000      18 #> 13         1  0.000      18 #> 14         1  0.000      18 #> 15         1  0.000      18 #> 16         2  1.000      18 #> 17         2  1.000      18 #> 18         2  1.000      18 #> 19         2  1.000      18 #> 20         2  1.000      18 #> 21         2  1.000      18 #> 22         2  1.000      18 #> 23         2  1.000      18 #> 24         2  1.000      18 #> 25         2  1.000      18 #> 26         2  1.000      18 #> 27         2  1.000      18 #> 28         2  1.000      18 #> 29         2  1.000      18 #> 30         2  1.000      18 #> 31         3  2.000      18 #> 32         3  2.000      18 #> 33         3  2.000      18 #> 34         3  2.000      18 #> 35         3  2.000      18 #> 36         3  2.000      18 #> 37         3  2.000      18 #> 38         3  2.000      18 #> 39         3  2.000      18 #> 40         3  2.000      18 #> 41         3  2.000      18 #> 42         3  2.000      18 #> 43         3  2.000      18 #> 44         3  2.000      18 #> 45         3  2.000      18 #> 46         4  4.000      18 #> 47         4  4.000      18 #> 48         4  4.000      18 #> 49         4  4.000      18 #> 50         4  4.000      18 #> 51         4  4.000      18 #> 52         4  4.000      18 #> 53         4  4.000      18 #> 54         4  4.000      18 #> 55         4  4.000      18 #> 56         4  4.000      18 #> 57         4  4.000      18 #> 58         4  4.000      18 #> 59         4  4.000      18 #> 60         4  4.000      18 #> 61         5  6.000      18 #> 62         5  6.000      18 #> 63         5  6.000      18 #> 64         5  6.000      18 #> 65         5  6.000      18 #> 66         5  6.000      18 #> 67         5  6.000      18 #> 68         5  6.000      18 #> 69         5  6.000      18 #> 70         5  6.000      18 #> 71         5  6.000      18 #> 72         5  6.000      18 #> 73         5  6.000      18 #> 74         5  6.000      18 #> 75         5  6.000      18 #> 76         1  0.000      28 #> 77         1  0.000      28 #> 78         1  0.000      28 #> 79         1  0.000      28 #> 80         1  0.000      28 #> 81         1  0.000      28 #> 82         1  0.000      28 #> 83         1  0.000      28 #> 84         1  0.000      28 #> 85         1  0.000      28 #> 86         1  0.000      28 #> 87         1  0.000      28 #> 88         1  0.000      28 #> 89         1  0.000      28 #> 90         1  0.000      28 #> 91         2  1.000      28 #> 92         2  1.000      28 #> 93         2  1.000      28 #> 94         2  1.000      28 #> 95         2  1.000      28 #> 96         2  1.000      28 #> 97         2  1.000      28 #> 98         2  1.000      28 #> 99         2  1.000      28 #> 100        2  1.000      28 #> 101        2  1.000      28 #> 102        2  1.000      28 #> 103        2  1.000      28 #> 104        2  1.000      28 #> 105        2  1.000      28 #> 106        3  2.000      28 #> 107        3  2.000      28 #> 108        3  2.000      28 #> 109        3  2.000      28 #> 110        3  2.000      28 #> 111        3  2.000      28 #> 112        3  2.000      28 #> 113        3  2.000      28 #> 114        3  2.000      28 #> 115        3  2.000      28 #> 116        3  2.000      28 #> 117        3  2.000      28 #> 118        3  2.000      28 #> 119        3  2.000      28 #> 120        3  2.000      28 #> 121        4  4.000      28 #> 122        4  4.000      28 #> 123        4  4.000      28 #> 124        4  4.000      28 #> 125        4  4.000      28 #> 126        4  4.000      28 #> 127        4  4.000      28 #> 128        4  4.000      28 #> 129        4  4.000      28 #> 130        4  4.000      28 #> 131        4  4.000      28 #> 132        4  4.000      28 #> 133        4  4.000      28 #> 134        4  4.000      28 #> 135        4  4.000      28 #> 136        5  6.000      28 #> 137        5  6.000      28 #> 138        5  6.000      28 #> 139        5  6.000      28 #> 140        5  6.000      28 #> 141        5  6.000      28 #> 142        5  6.000      28 #> 143        5  6.000      28 #> 144        5  6.000      28 #> 145        5  6.000      28 #> 146        5  6.000      28 #> 147        5  6.000      28 #> 148        5  6.000      28 #> 149        5  6.000      28 #> 150        5  6.000      28 #> 151        1  0.000       3 #> 152        1  0.000       3 #> 153        1  0.000       3 #> 154        1  0.000       3 #> 155        1  0.000       3 #> 156        1  0.000       3 #> 157        1  0.000       3 #> 158        1  0.000       3 #> 159        1  0.000       3 #> 160        1  0.000       3 #> 161        2  2.000       3 #> 162        2  2.000       3 #> 163        2  2.000       3 #> 164        2  2.000       3 #> 165        2  2.000       3 #> 166        2  2.000       3 #> 167        2  2.000       3 #> 168        2  2.000       3 #> 169        2  2.000       3 #> 170        2  2.000       3 #> 171        3 12.000       3 #> 172        3 12.000       3 #> 173        3 12.000       3 #> 174        3 12.000       3 #> 175        3 12.000       3 #> 176        3 12.000       3 #> 177        3 12.000       3 #> 178        3 12.000       3 #> 179        3 12.000       3 #> 180        3 12.000       3 #> 181        1  0.000      13 #> 182        1  0.000      13 #> 183        1  0.000      13 #> 184        1  0.000      13 #> 185        1  0.000      13 #> 186        1  0.000      13 #> 187        1  0.000      13 #> 188        1  0.000      13 #> 189        1  0.000      13 #> 190        1  0.000      13 #> 191        2  1.000      13 #> 192        2  1.000      13 #> 193        2  1.000      13 #> 194        2  1.000      13 #> 195        2  1.000      13 #> 196        2  1.000      13 #> 197        2  1.000      13 #> 198        2  1.000      13 #> 199        2  1.000      13 #> 200        2  1.000      13 #> 201        3  2.000      13 #> 202        3  2.000      13 #> 203        3  2.000      13 #> 204        3  2.000      13 #> 205        3  2.000      13 #> 206        3  2.000      13 #> 207        3  2.000      13 #> 208        3  2.000      13 #> 209        3  2.000      13 #> 210        3  2.000      13 #> 211        4  3.000      13 #> 212        4  3.000      13 #> 213        4  3.000      13 #> 214        4  3.000      13 #> 215        4  3.000      13 #> 216        4  3.000      13 #> 217        4  3.000      13 #> 218        4  3.000      13 #> 219        4  3.000      13 #> 220        4  3.000      13 #> 221        5  6.000      13 #> 222        5  6.000      13 #> 223        5  6.000      13 #> 224        5  6.000      13 #> 225        5  6.000      13 #> 226        5  6.000      13 #> 227        5  6.000      13 #> 228        5  6.000      13 #> 229        5  6.000      13 #> 230        5  6.000      13 #> 231        6  9.000      13 #> 232        6  9.000      13 #> 233        6  9.000      13 #> 234        6  9.000      13 #> 235        6  9.000      13 #> 236        6  9.000      13 #> 237        6  9.000      13 #> 238        6  9.000      13 #> 239        6  9.000      13 #> 240        6  9.000      13 #> 241        7 12.000      13 #> 242        7 12.000      13 #> 243        7 12.000      13 #> 244        7 12.000      13 #> 245        7 12.000      13 #> 246        7 12.000      13 #> 247        7 12.000      13 #> 248        7 12.000      13 #> 249        7 12.000      13 #> 250        7 12.000      13 #> 251        1  0.000      17 #> 252        1  0.000      17 #> 253        1  0.000      17 #> 254        1  0.000      17 #> 255        1  0.000      17 #> 256        1  0.000      17 #> 257        1  0.000      17 #> 258        1  0.000      17 #> 259        1  0.000      17 #> 260        1  0.000      17 #> 261        2  1.000      17 #> 262        2  1.000      17 #> 263        2  1.000      17 #> 264        2  1.000      17 #> 265        2  1.000      17 #> 266        2  1.000      17 #> 267        2  1.000      17 #> 268        2  1.000      17 #> 269        2  1.000      17 #> 270        2  1.000      17 #> 271        3  2.000      17 #> 272        3  2.000      17 #> 273        3  2.000      17 #> 274        3  2.000      17 #> 275        3  2.000      17 #> 276        3  2.000      17 #> 277        3  2.000      17 #> 278        3  2.000      17 #> 279        3  2.000      17 #> 280        3  2.000      17 #> 281        4  3.000      17 #> 282        4  3.000      17 #> 283        4  3.000      17 #> 284        4  3.000      17 #> 285        4  3.000      17 #> 286        4  3.000      17 #> 287        4  3.000      17 #> 288        4  3.000      17 #> 289        4  3.000      17 #> 290        4  3.000      17 #> 291        5  6.000      17 #> 292        5  6.000      17 #> 293        5  6.000      17 #> 294        5  6.000      17 #> 295        5  6.000      17 #> 296        5  6.000      17 #> 297        5  6.000      17 #> 298        5  6.000      17 #> 299        5  6.000      17 #> 300        5  6.000      17 #> 301        6  9.000      17 #> 302        6  9.000      17 #> 303        6  9.000      17 #> 304        6  9.000      17 #> 305        6  9.000      17 #> 306        6  9.000      17 #> 307        6  9.000      17 #> 308        6  9.000      17 #> 309        6  9.000      17 #> 310        6  9.000      17 #> 311        7 12.000      17 #> 312        7 12.000      17 #> 313        7 12.000      17 #> 314        7 12.000      17 #> 315        7 12.000      17 #> 316        7 12.000      17 #> 317        7 12.000      17 #> 318        7 12.000      17 #> 319        7 12.000      17 #> 320        7 12.000      17 #> 321        1  0.000      19 #> 322        1  0.000      19 #> 323        1  0.000      19 #> 324        1  0.000      19 #> 325        1  0.000      19 #> 326        1  0.000      19 #> 327        1  0.000      19 #> 328        1  0.000      19 #> 329        1  0.000      19 #> 330        1  0.000      19 #> 331        2  2.000      19 #> 332        2  2.000      19 #> 333        2  2.000      19 #> 334        2  2.000      19 #> 335        2  2.000      19 #> 336        2  2.000      19 #> 337        2  2.000      19 #> 338        2  2.000      19 #> 339        2  2.000      19 #> 340        2  2.000      19 #> 341        3 12.000      19 #> 342        3 12.000      19 #> 343        3 12.000      19 #> 344        3 12.000      19 #> 345        3 12.000      19 #> 346        3 12.000      19 #> 347        3 12.000      19 #> 348        3 12.000      19 #> 349        3 12.000      19 #> 350        3 12.000      19 #> 351        1  0.000      20 #> 352        1  0.000      20 #> 353        1  0.000      20 #> 354        1  0.000      20 #> 355        1  0.000      20 #> 356        1  0.000      20 #> 357        1  0.000      20 #> 358        1  0.000      20 #> 359        1  0.000      20 #> 360        1  0.000      20 #> 361        2  2.000      20 #> 362        2  2.000      20 #> 363        2  2.000      20 #> 364        2  2.000      20 #> 365        2  2.000      20 #> 366        2  2.000      20 #> 367        2  2.000      20 #> 368        2  2.000      20 #> 369        2  2.000      20 #> 370        2  2.000      20 #> 371        3  6.000      20 #> 372        3  6.000      20 #> 373        3  6.000      20 #> 374        3  6.000      20 #> 375        3  6.000      20 #> 376        3  6.000      20 #> 377        3  6.000      20 #> 378        3  6.000      20 #> 379        3  6.000      20 #> 380        3  6.000      20 #> 381        4 12.000      20 #> 382        4 12.000      20 #> 383        4 12.000      20 #> 384        4 12.000      20 #> 385        4 12.000      20 #> 386        4 12.000      20 #> 387        4 12.000      20 #> 388        4 12.000      20 #> 389        4 12.000      20 #> 390        4 12.000      20 #> 391        1  0.000      15 #> 392        1  0.000      15 #> 393        1  0.000      15 #> 394        1  0.000      15 #> 395        1  0.000      15 #> 396        1  0.000      15 #> 397        2 12.000      15 #> 398        2 12.000      15 #> 399        2 12.000      15 #> 400        2 12.000      15 #> 401        2 12.000      15 #> 402        2 12.000      15 #> 403        1  0.000      16 #> 404        1  0.000      16 #> 405        1  0.000      16 #> 406        1  0.000      16 #> 407        1  0.000      16 #> 408        1  0.000      16 #> 409        2  2.000      16 #> 410        2  2.000      16 #> 411        2  2.000      16 #> 412        2  2.000      16 #> 413        2  2.000      16 #> 414        2  2.000      16 #> 415        3 13.000      16 #> 416        3 13.000      16 #> 417        3 13.000      16 #> 418        3 13.000      16 #> 419        3 13.000      16 #> 420        3 13.000      16 #> 421        1  0.000      21 #> 422        1  0.000      21 #> 423        1  0.000      21 #> 424        1  0.000      21 #> 425        1  0.000      21 #> 426        1  0.000      21 #> 427        2  2.000      21 #> 428        2  2.000      21 #> 429        2  2.000      21 #> 430        2  2.000      21 #> 431        2  2.000      21 #> 432        2  2.000      21 #> 433        3 13.000      21 #> 434        3 13.000      21 #> 435        3 13.000      21 #> 436        3 13.000      21 #> 437        3 13.000      21 #> 438        3 13.000      21 #> 439        1  0.000      29 #> 440        1  0.000      29 #> 441        1  0.000      29 #> 442        1  0.000      29 #> 443        1  0.000      29 #> 444        1  0.000      29 #> 445        2  2.000      29 #> 446        2  2.000      29 #> 447        2  2.000      29 #> 448        2  2.000      29 #> 449        2  2.000      29 #> 450        2  2.000      29 #> 451        3  6.000      29 #> 452        3  6.000      29 #> 453        3  6.000      29 #> 454        3  6.000      29 #> 455        3  6.000      29 #> 456        3  6.000      29 #> 457        4 13.000      29 #> 458        4 13.000      29 #> 459        4 13.000      29 #> 460        4 13.000      29 #> 461        4 13.000      29 #> 462        4 13.000      29 #> 463        1  0.000      31 #> 464        1  0.000      31 #> 465        1  0.000      31 #> 466        1  0.000      31 #> 467        1  0.000      31 #> 468        1  0.000      31 #> 469        2 13.000      31 #> 470        2 13.000      31 #> 471        2 13.000      31 #> 472        2 13.000      31 #> 473        2 13.000      31 #> 474        2 13.000      31 #> 475        1  0.000      33 #> 476        1  0.000      33 #> 477        1  0.000      33 #> 478        1  0.000      33 #> 479        1  0.000      33 #> 480        1  0.000      33 #> 481        2  2.000      33 #> 482        2  2.000      33 #> 483        2  2.000      33 #> 484        2  2.000      33 #> 485        2  2.000      33 #> 486        2  2.000      33 #> 487        3 13.000      33 #> 488        3 13.000      33 #> 489        3 13.000      33 #> 490        3 13.000      33 #> 491        3 13.000      33 #> 492        3 13.000      33 #> 493        1  0.000       2 #> 494        1  0.000       2 #> 495        1  0.000       2 #> 496        2  2.000       2 #> 497        2  2.000       2 #> 498        2  2.000       2 #> 499        3  6.000       2 #> 500        3  6.000       2 #> 501        3  6.000       2 #> 502        4 13.000       2 #> 503        4 13.000       2 #> 504        4 13.000       2 #> 505        1  0.000       4 #> 506        1  0.000       4 #> 507        1  0.000       4 #> 508        2  2.000       4 #> 509        2  2.000       4 #> 510        2  2.000       4 #> 511        3  4.000       4 #> 512        3  4.000       4 #> 513        3  4.000       4 #> 514        4  8.000       4 #> 515        4  8.000       4 #> 516        4  8.000       4 #> 517        5 12.000       4 #> 518        5 12.000       4 #> 519        5 12.000       4 #> 520        1  0.000       5 #> 521        1  0.000       5 #> 522        1  0.000       5 #> 523        2  2.000       5 #> 524        2  2.000       5 #> 525        2  2.000       5 #> 526        3  4.000       5 #> 527        3  4.000       5 #> 528        3  4.000       5 #> 529        4  8.000       5 #> 530        4  8.000       5 #> 531        4  8.000       5 #> 532        5 12.000       5 #> 533        5 12.000       5 #> 534        5 12.000       5 #> 535        1  0.000       6 #> 536        1  0.000       6 #> 537        1  0.000       6 #> 538        2  2.000       6 #> 539        2  2.000       6 #> 540        2  2.000       6 #> 541        3  4.000       6 #> 542        3  4.000       6 #> 543        3  4.000       6 #> 544        4  6.000       6 #> 545        4  6.000       6 #> 546        4  6.000       6 #> 547        1  0.000       7 #> 548        1  0.000       7 #> 549        1  0.000       7 #> 550        2  2.000       7 #> 551        2  2.000       7 #> 552        2  2.000       7 #> 553        3  4.000       7 #> 554        3  4.000       7 #> 555        3  4.000       7 #> 556        4  6.000       7 #> 557        4  6.000       7 #> 558        4  6.000       7 #> 559        1  0.000      14 #> 560        1  0.000      14 #> 561        1  0.000      14 #> 562        2  1.000      14 #> 563        2  1.000      14 #> 564        2  1.000      14 #> 565        3  2.000      14 #> 566        3  2.000      14 #> 567        3  2.000      14 #> 568        4  4.000      14 #> 569        4  4.000      14 #> 570        4  4.000      14 #> 571        5  6.000      14 #> 572        5  6.000      14 #> 573        5  6.000      14 #> 574        1  0.000      22 #> 575        1  0.000      22 #> 576        1  0.000      22 #> 577        2  2.000      22 #> 578        2  2.000      22 #> 579        2  2.000      22 #> 580        3  4.000      22 #> 581        3  4.000      22 #> 582        3  4.000      22 #> 583        4  8.000      22 #> 584        4  8.000      22 #> 585        4  8.000      22 #> 586        5 12.000      22 #> 587        5 12.000      22 #> 588        5 12.000      22 #> 589        1  0.000      30 #> 590        1  0.000      30 #> 591        1  0.000      30 #> 592        2  4.000      30 #> 593        2  4.000      30 #> 594        2  4.000      30 #> 595        3  8.000      30 #> 596        3  8.000      30 #> 597        3  8.000      30 #> 598        4 13.000      30 #> 599        4 13.000      30 #> 600        4 13.000      30 #> 601        1  0.000      32 #> 602        1  0.000      32 #> 603        1  0.000      32 #> 604        2  6.000      32 #> 605        2  6.000      32 #> 606        2  6.000      32 #> 607        3 12.000      32 #> 608        3 12.000      32 #> 609        3 12.000      32 #> 610        1  0.000      10 #> 611        2 13.000      10 #> 612        1  0.000      11 #> 613        2 13.000      11 #> 614        1  0.000      12 #> 615        2 24.000      12 #> 616        1  0.000      24 #> 617        2  2.142      24 #> 618        3  4.286      24 #> 619        4  6.429      24 #> 620        5  8.571      24 #> 621        6 12.857      24 #> 622        1  0.000      25 #> 623        2  6.000      25 #> 624        1  0.000      26 #> 625        2  2.000      26 #> 626        3  4.000      26 #> 627        4  8.000      26 #> 628        5 12.000      26 #> 629        1  0.000      27 #> 630        2  4.000      27 #> 631        3  8.000      27 #> 632        4 16.000      27 #> 633        5 24.000      27 #> 634        1  0.000      35 #> 635        2  6.000      35  # Convert to long contrast data mb.make.contrast(network, format=\"long\") #> Warning: Data type not specified and data frame contains y - data are assumed to be normal #> Warning: studyID has been changed to allow separate ID for each contrast rather than study #> # A tibble: 1,270 × 7 #> # Groups:   studyID, fupcount [635] #>    studyID treatment  time     y    se   arm fupcount #>      <dbl>     <dbl> <dbl> <dbl> <dbl> <dbl>    <int> #>  1       1         1     0  7.06 0.222     1        1 #>  2       1         6     0  7.01 0.161     2        1 #>  3       2         1     0  7.06 0.222     1        1 #>  4       2         7     0  6.76 0.170     2        1 #>  5       3         1     0  7.06 0.222     1        1 #>  6       3         8     0  6.87 0.158     2        1 #>  7       4         1     0  7.06 0.222     1        1 #>  8       4         9     0  6.69 0.162     2        1 #>  9       5         1     0  7.06 0.222     1        1 #> 10       5        10     0  6.85 0.162     2        1 #> # … with 1,260 more rows"},{"path":"/reference/mb.network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an mb.network object — plot.mb.network","title":"Create an mb.network object — plot.mb.network","text":"Creates object class(\"mb.network\"). Various MBNMA functions can subsequently applied object.","code":""},{"path":"/reference/mb.network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an mb.network object — plot.mb.network","text":"","code":"# S3 method for mb.network plot(   x,   edge.scale = 1,   label.distance = 0,   level = \"treatment\",   remove.loops = FALSE,   v.color = \"connect\",   v.scale = NULL,   layout = igraph::in_circle(),   legend = TRUE,   legend.x = \"bottomleft\",   legend.y = NULL,   ... )  mb.network(data.ab, reference = 1, cfb = NULL, description = \"Network\")"},{"path":"/reference/mb.network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an mb.network object — plot.mb.network","text":"x object class mb.network. edge.scale number scale thickness connecting lines (edges). Line thickness proportional number studies given comparison. Set 0 make thickness equal comparisons. label.distance number scaling distance labels nodes improve readability. labels directly top nodes default 0 used. Option applicable layout_in_circle set TRUE. level string indicating whether nodes/facets represent treatment class plot. Can used examine expected impact modelling class/agent effects. remove.loops boolean value indicating whether include loops indicate comparisons within node. v.color Can take either \"connect\" (default) indicate nodes coloured connected network reference treatment (indicates network connectivity) \"class\" colour nodes class (requires variable class included dataset). v.scale number scale size nodes. variable N (indicate numbers participants observation) included dataset size nodes proportional number participants within treatment/class network earliest time point reported study. layout igraph layout specification. function specifying igraph layout determines arrangement vertices (nodes). default igraph::as_circle() arranged vertices circle. Two useful layouts network plots : igraph::as_star(), igraph::with_fr(). Others can found layout_ legend boolean value indicating whether plot legend class names v.color=\"class\" legend.x Can either string numerical x-coordinate indicating legend plotted (see legend). legend.y numerical y-coordinate indicating legend plotted - required legend.x also numeric co-ordinate. ... Options plotting igraph. data.ab data frame arm-level data \"long\" format containing columns: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating aggregate response given observation (e.g. mean) se Numeric data indicating standard error given observation treatment Treatment identifiers (can numeric, factor character) class optional column indicating particular class identifier. Observations treatment identifier must also class identifier. n optional column indicating number participants used calculate response given observation (required modelling using Standardised Mean Differences) reference number character (depending format treatment within data.ab) indicating reference treatment network (.e. estimated relative treatment effects estimated model compared ). cfb logical vector whose length equal unique number studies data.ab, element TRUE study data reported change--baseline FALSE otherwise. left NULL (default) identified data assuming study data time=0 reports change--baseline. description Optional. Short description network.","code":""},{"path":"/reference/mb.network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an mb.network object — plot.mb.network","text":"object class(\"mb.network\") list containing: description short description network data.ab data frame containing arm-level network data (treatment identifiers recoded sequential numeric code) studyID character vector IDs included studies. cfb logical vector indicating studies report change baseline data treatments character vector indicating treatment identifiers correspond new treatment codes. classes character vector indicating class identifiers (included original data) correspond new class codes.","code":""},{"path":"/reference/mb.network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an mb.network object — plot.mb.network","text":"S3 method plot() mb.network object generates network plot shows different treatments connected within network via study comparisons. can used identify direct indirect evidence informing different treatment comparisons. Depends igraph. Missing values (NA) included dataset. Studies must baseline measurement single follow-time (unless change baseline data used). Data must present arms within study follow-time.","code":""},{"path":"/reference/mb.network.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Create an mb.network object — plot.mb.network","text":"plot(mb.network): Generate network plot","code":""},{"path":"/reference/mb.network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an mb.network object — plot.mb.network","text":"","code":"# \\donttest{  # Create an mb.network object from the data network <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Arrange network plot in a star with the reference treatment in the centre plot(network, layout=igraph::as_star())   # Generate a network plot at the class level that removes loops indicating comparisons #within a node goutnet <- mb.network(goutSUA_CFB) #> Reference treatment is `Plac` #> Studies reporting change from baseline automatically identified from the data plot(goutnet, level=\"class\", remove.loops=TRUE)   # Generate a network plot at the treatment level that colours nodes by class plot(goutnet, v.color=\"class\", remove.loops=TRUE) #> Warning: The following treatments/agents are not connected to the network reference: #> Allo_245 #> Allo_256 #> Allo_265 #> Allo_278 #> Allo_400 #> Benz_139 #> Benz_143 #> Benz_50 #> Benz_82.97   # Plot network in which node size is proportional to number of participants alognet <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data plot(alognet, v.scale=2)   # }  # Using the osteoarthritis dataset print(osteopain) #>               studyID   time        y         se treatment arm        treatname #> 1       Baerwald 2010  0.000 6.548000 0.08613561      Pl_0   1        Placebo_0 #> 2       Baerwald 2010  2.000 5.398000 0.09317367      Pl_0   1        Placebo_0 #> 3       Baerwald 2010  6.000 4.968000 0.09969241      Pl_0   1        Placebo_0 #> 4       Baerwald 2010 13.000 4.751000 0.10850034      Pl_0   1        Placebo_0 #> 5       Baerwald 2010  0.000 6.399000 0.12738195   Na_1000   2    Naproxen_1000 #> 6       Baerwald 2010  2.000 4.029000 0.13337086   Na_1000   2    Naproxen_1000 #> 7       Baerwald 2010  6.000 3.719000 0.13861218   Na_1000   2    Naproxen_1000 #> 8       Baerwald 2010 13.000 3.968000 0.14647069   Na_1000   2    Naproxen_1000 #> 9       Baerwald 2010  0.000 6.625000 0.09003349   Na_1500   3 Naproxcinod_1500 #> 10      Baerwald 2010  2.000 4.435000 0.09258069   Na_1500   3 Naproxcinod_1500 #> 11      Baerwald 2010  6.000 4.085000 0.09645929   Na_1500   3 Naproxcinod_1500 #> 12      Baerwald 2010 13.000 4.044000 0.10175895   Na_1500   3 Naproxcinod_1500 #> 13        Bensen 1999  0.000 5.405620 0.12743652      Pl_0   1        Placebo_0 #> 14        Bensen 1999  2.000 5.020210 0.13967062      Pl_0   1        Placebo_0 #> 15        Bensen 1999 12.000 4.720889 0.15125135      Pl_0   1        Placebo_0 #> 16        Bensen 1999  0.000 5.545080 0.12875036   Na_1000   2    Naproxen_1000 #> 17        Bensen 1999  2.000 4.124826 0.13193069   Na_1000   2    Naproxen_1000 #> 18        Bensen 1999 12.000 4.267348 0.14313626   Na_1000   2    Naproxen_1000 #> 19        Bensen 1999  0.000 5.405620 0.12756608    Ce_400   3     Celebrex_400 #> 20        Bensen 1999  2.000 3.962108 0.13072450    Ce_400   3     Celebrex_400 #> 21        Bensen 1999 12.000 3.965032 0.14176423    Ce_400   3     Celebrex_400 #> 22        Bensen 1999  0.000 5.266090 0.12930813    Ce_200   4     Celebrex_200 #> 23        Bensen 1999  2.000 3.822510 0.13230924    Ce_200   4     Celebrex_200 #> 24        Bensen 1999 12.000 3.720855 0.14325486    Ce_200   4     Celebrex_200 #> 25        Bensen 1999  0.000 5.382295 0.12702820    Ce_100   5     Celebrex_100 #> 26        Bensen 1999  2.000 4.345749 0.13030080    Ce_100   5     Celebrex_100 #> 27        Bensen 1999 12.000 4.325553 0.14135801    Ce_100   5     Celebrex_100 #> 28      Bingham 2007a  0.000 6.660000 0.14375175      Pl_0   1        Placebo_0 #> 29      Bingham 2007a  2.000 5.905123 0.15295812      Pl_0   1        Placebo_0 #> 30      Bingham 2007a  4.000 5.597386 0.15878729      Pl_0   1        Placebo_0 #> 31      Bingham 2007a  8.000 5.374769 0.16812945      Pl_0   1        Placebo_0 #> 32      Bingham 2007a 12.000 5.124054 0.17621052      Pl_0   1        Placebo_0 #> 33      Bingham 2007a  0.000 6.750000 0.10499753    Ce_200   2     Celebrex_200 #> 34      Bingham 2007a  2.000 4.606352 0.10894260    Ce_200   2     Celebrex_200 #> 35      Bingham 2007a  4.000 4.270519 0.11133890    Ce_200   2     Celebrex_200 #> 36      Bingham 2007a  8.000 4.300451 0.11563667    Ce_200   2     Celebrex_200 #> 37      Bingham 2007a 12.000 4.274297 0.11895791    Ce_200   2     Celebrex_200 #> 38      Bingham 2007a  0.000 6.740000 0.10658817     Et_30   3    Etoricoxib_30 #> 39      Bingham 2007a  2.000 4.245301 0.11123171     Et_30   3    Etoricoxib_30 #> 40      Bingham 2007a  4.000 4.021748 0.11386291     Et_30   3    Etoricoxib_30 #> 41      Bingham 2007a  8.000 4.037578 0.11802862     Et_30   3    Etoricoxib_30 #> 42      Bingham 2007a 12.000 3.899251 0.12156902     Et_30   3    Etoricoxib_30 #> 43      Bingham 2007b  0.000 6.640000 0.15968999      Pl_0   1        Placebo_0 #> 44      Bingham 2007b  2.000 5.519577 0.17109473      Pl_0   1        Placebo_0 #> 45      Bingham 2007b  4.000 5.097473 0.17758313      Pl_0   1        Placebo_0 #> 46      Bingham 2007b  8.000 5.011880 0.18711207      Pl_0   1        Placebo_0 #> 47      Bingham 2007b 12.000 4.999232 0.19569508      Pl_0   1        Placebo_0 #> 48      Bingham 2007b  0.000 6.730000 0.11922685    Ce_200   2     Celebrex_200 #> 49      Bingham 2007b  2.000 4.384345 0.11363334    Ce_200   2     Celebrex_200 #> 50      Bingham 2007b  4.000 4.137306 0.11584245    Ce_200   2     Celebrex_200 #> 51      Bingham 2007b  8.000 4.022573 0.12001322    Ce_200   2     Celebrex_200 #> 52      Bingham 2007b 12.000 3.936906 0.12354571    Ce_200   2     Celebrex_200 #> 53      Bingham 2007b  0.000 6.870000 0.10520605     Et_30   3    Etoricoxib_30 #> 54      Bingham 2007b  2.000 4.465766 0.11429788     Et_30   3    Etoricoxib_30 #> 55      Bingham 2007b  4.000 4.233316 0.11672457     Et_30   3    Etoricoxib_30 #> 56      Bingham 2007b  8.000 4.089368 0.12087161     Et_30   3    Etoricoxib_30 #> 57      Bingham 2007b 12.000 4.091271 0.12433858     Et_30   3    Etoricoxib_30 #> 58     Birbara 2006_1  0.000 6.850000 0.19248710      Pl_0   1        Placebo_0 #> 59     Birbara 2006_1  2.000 5.050000 0.19825783      Pl_0   1        Placebo_0 #> 60     Birbara 2006_1  4.000 4.900000 0.20546535      Pl_0   1        Placebo_0 #> 61     Birbara 2006_1  6.000 4.740000 0.21210711      Pl_0   1        Placebo_0 #> 62     Birbara 2006_1  0.000 6.830000 0.13567477    Ce_200   2     Celebrex_200 #> 63     Birbara 2006_1  2.000 4.290000 0.13735626    Ce_200   2     Celebrex_200 #> 64     Birbara 2006_1  4.000 4.090000 0.14020133    Ce_200   2     Celebrex_200 #> 65     Birbara 2006_1  6.000 3.930000 0.14285150    Ce_200   2     Celebrex_200 #> 66     Birbara 2006_1  0.000 7.050000 0.12570054     Ro_12   3     Rofecoxib_12 #> 67     Birbara 2006_1  2.000 4.650000 0.13581507     Ro_12   3     Rofecoxib_12 #> 68     Birbara 2006_1  4.000 4.360000 0.13919061     Ro_12   3     Rofecoxib_12 #> 69     Birbara 2006_1  6.000 4.190000 0.14163496     Ro_12   3     Rofecoxib_12 #> 70     Birbara 2006_2  0.000 6.870000 0.19089880      Pl_0   1        Placebo_0 #> 71     Birbara 2006_2  2.000 4.930000 0.19254502      Pl_0   1        Placebo_0 #> 72     Birbara 2006_2  4.000 4.760000 0.19892926      Pl_0   1        Placebo_0 #> 73     Birbara 2006_2  6.000 4.590000 0.20627513      Pl_0   1        Placebo_0 #> 74     Birbara 2006_2  0.000 6.680000 0.13307692    Ce_200   2     Celebrex_200 #> 75     Birbara 2006_2  2.000 4.190000 0.13377582    Ce_200   2     Celebrex_200 #> 76     Birbara 2006_2  4.000 3.700000 0.13702105    Ce_200   2     Celebrex_200 #> 77     Birbara 2006_2  6.000 3.540000 0.13955657    Ce_200   2     Celebrex_200 #> 78     Birbara 2006_2  0.000 6.700000 0.12688825     Ro_12   3     Rofecoxib_12 #> 79     Birbara 2006_2  2.000 3.720000 0.13837981     Ro_12   3     Rofecoxib_12 #> 80     Birbara 2006_2  4.000 3.720000 0.14138984     Ro_12   3     Rofecoxib_12 #> 81     Birbara 2006_2  6.000 3.620000 0.14410240     Ro_12   3     Rofecoxib_12 #> 88      Chappell 2009  0.000 5.175000 0.11801842      Pl_0   1        Placebo_0 #> 89      Chappell 2009 13.000 3.430000 0.16255069      Pl_0   1        Placebo_0 #> 90      Chappell 2009  0.000 5.120000 0.11135620     Du_90   2    Duloxetine_90 #> 91      Chappell 2009 13.000 2.985000 0.15195876     Du_90   2    Duloxetine_90 #> 92      Chappell 2011  0.000 5.475000 0.13867505      Pl_0   1        Placebo_0 #> 93      Chappell 2011 13.000 3.880000 0.18527144      Pl_0   1        Placebo_0 #> 94      Chappell 2011  0.000 5.490000 0.16096163     Du_90   2    Duloxetine_90 #> 95      Chappell 2011 13.000 3.180000 0.17937364     Du_90   2    Duloxetine_90 #> 96         Clegg 2006  0.000 4.742000 0.08388064      Pl_0   1        Placebo_0 #> 97         Clegg 2006 24.000 3.020000 0.12785580      Pl_0   1        Placebo_0 #> 98         Clegg 2006  0.000 4.698000 0.08333074    Ce_200   2     Celebrex_200 #> 99         Clegg 2006 24.000 2.714000 0.12146325    Ce_200   2     Celebrex_200 #> 100      DeLemos 2011  0.000 6.016000 0.14637110      Pl_0   1        Placebo_0 #> 101      DeLemos 2011  1.000 4.660234 0.14174890      Pl_0   1        Placebo_0 #> 102      DeLemos 2011  2.000 4.265908 0.14423560      Pl_0   1        Placebo_0 #> 103      DeLemos 2011  3.000 3.980672 0.14662378      Pl_0   1        Placebo_0 #> 104      DeLemos 2011  6.000 3.643174 0.15307332      Pl_0   1        Placebo_0 #> 105      DeLemos 2011  9.000 3.292040 0.15809206      Pl_0   1        Placebo_0 #> 106      DeLemos 2011 12.000 3.268146 0.16279536      Pl_0   1        Placebo_0 #> 107      DeLemos 2011  0.000 5.738000 0.13523145    Ce_200   2     Celebrex_200 #> 108      DeLemos 2011  1.000 3.746574 0.13973694    Ce_200   2     Celebrex_200 #> 109      DeLemos 2011  2.000 3.284066 0.14128381    Ce_200   2     Celebrex_200 #> 110      DeLemos 2011  3.000 2.930678 0.14255246    Ce_200   2     Celebrex_200 #> 111      DeLemos 2011  6.000 2.511332 0.14627650    Ce_200   2     Celebrex_200 #> 112      DeLemos 2011  9.000 2.555680 0.14916326    Ce_200   2     Celebrex_200 #> 113      DeLemos 2011 12.000 2.545424 0.15202178    Ce_200   2     Celebrex_200 #> 114      DeLemos 2011  0.000 6.124000 0.15212591    Tr_300   3     Tramadol_300 #> 115      DeLemos 2011  1.000 4.332964 0.14113504    Tr_300   3     Tramadol_300 #> 116      DeLemos 2011  2.000 3.693184 0.14233657    Tr_300   3     Tramadol_300 #> 117      DeLemos 2011  3.000 3.230648 0.14383500    Tr_300   3     Tramadol_300 #> 118      DeLemos 2011  6.000 2.879542 0.14753666    Tr_300   3     Tramadol_300 #> 119      DeLemos 2011  9.000 2.828406 0.15064388    Tr_300   3     Tramadol_300 #> 120      DeLemos 2011 12.000 2.777240 0.15325220    Tr_300   3     Tramadol_300 #> 121      DeLemos 2011  0.000 6.058000 0.13624697    Tr_200   4     Tramadol_200 #> 122      DeLemos 2011  1.000 4.346600 0.14061110    Tr_200   4     Tramadol_200 #> 123      DeLemos 2011  2.000 3.993182 0.14238944    Tr_200   4     Tramadol_200 #> 124      DeLemos 2011  3.000 3.762492 0.14390273    Tr_200   4     Tramadol_200 #> 125      DeLemos 2011  6.000 3.302266 0.14727855    Tr_200   4     Tramadol_200 #> 126      DeLemos 2011  9.000 3.223858 0.15077558    Tr_200   4     Tramadol_200 #> 127      DeLemos 2011 12.000 3.240874 0.15337054    Tr_200   4     Tramadol_200 #> 128      DeLemos 2011  0.000 5.968000 0.14290302    Tr_100   5     Tramadol_100 #> 129      DeLemos 2011  1.000 4.701114 0.14013124    Tr_100   5     Tramadol_100 #> 130      DeLemos 2011  2.000 4.115910 0.14149865    Tr_100   5     Tramadol_100 #> 131      DeLemos 2011  3.000 3.667038 0.14301421    Tr_100   5     Tramadol_100 #> 132      DeLemos 2011  6.000 3.479538 0.14674325    Tr_100   5     Tramadol_100 #> 133      DeLemos 2011  9.000 3.605646 0.14999098    Tr_100   5     Tramadol_100 #> 134      DeLemos 2011 12.000 3.349994 0.15257853    Tr_100   5     Tramadol_100 #> 135       Enrich 1999  0.000 6.003000 0.20107522      Pl_0   1        Placebo_0 #> 136       Enrich 1999  1.000 5.643000 0.20685093      Pl_0   1        Placebo_0 #> 137       Enrich 1999  2.000 5.273000 0.20991297      Pl_0   1        Placebo_0 #> 138       Enrich 1999  4.000 5.233000 0.21850685      Pl_0   1        Placebo_0 #> 139       Enrich 1999  6.000 5.123000 0.22585766      Pl_0   1        Placebo_0 #> 140       Enrich 1999  0.000 6.436000 0.19999737     Ro_25   2     Rofecoxib_25 #> 141       Enrich 1999  1.000 4.146000 0.20356012     Ro_25   2     Rofecoxib_25 #> 142       Enrich 1999  2.000 3.646000 0.20541085     Ro_25   2     Rofecoxib_25 #> 143       Enrich 1999  4.000 3.906000 0.21037141     Ro_25   2     Rofecoxib_25 #> 144       Enrich 1999  6.000 3.576000 0.21440533     Ro_25   2     Rofecoxib_25 #> 145       Enrich 1999  0.000 5.944000 0.19953406    Ro_125   3    Rofecoxib_125 #> 146       Enrich 1999  1.000 3.484000 0.20158925    Ro_125   3    Rofecoxib_125 #> 147       Enrich 1999  2.000 3.014000 0.20390576    Ro_125   3    Rofecoxib_125 #> 148       Enrich 1999  4.000 3.124000 0.20849592    Ro_125   3    Rofecoxib_125 #> 149       Enrich 1999  6.000 2.824000 0.21260208    Ro_125   3    Rofecoxib_125 #> 150      Fishman 2007  0.000 6.014000 0.11866399      Pl_0   1        Placebo_0 #> 151      Fishman 2007 12.000 4.071478 0.13816027      Pl_0   1        Placebo_0 #> 152      Fishman 2007  0.000 6.288000 0.18951979    Tr_300   2     Tramadol_300 #> 153      Fishman 2007 12.000 3.395520 0.18848415    Tr_300   2     Tramadol_300 #> 154      Fishman 2007  0.000 5.676000 0.15796474    Tr_200   3     Tramadol_200 #> 155      Fishman 2007 12.000 3.246672 0.18748009    Tr_200   3     Tramadol_200 #> 156      Fishman 2007  0.000 5.756000 0.15528789    Tr_100   4     Tramadol_100 #> 157      Fishman 2007 12.000 3.361504 0.19021417    Tr_100   4     Tramadol_100 #> 158  Fleischmann 2005  0.000 4.950000 0.10856203      Pl_0   1        Placebo_0 #> 159  Fleischmann 2005  2.000 4.150000 0.11449208      Pl_0   1        Placebo_0 #> 160  Fleischmann 2005 13.000 3.800000 0.13292276      Pl_0   1        Placebo_0 #> 161  Fleischmann 2005  0.000 5.150000 0.07925469    Ce_200   2     Celebrex_200 #> 162  Fleischmann 2005  2.000 3.700000 0.08106751    Ce_200   2     Celebrex_200 #> 163  Fleischmann 2005 13.000 3.400000 0.08897460    Ce_200   2     Celebrex_200 #> 164  Fleischmann 2005  0.000 4.950000 0.07854096    Lu_400   3  Lumiracoxib_400 #> 165  Fleischmann 2005  2.000 3.400000 0.07952726    Lu_400   3  Lumiracoxib_400 #> 166  Fleischmann 2005 13.000 3.100000 0.08732728    Lu_400   3  Lumiracoxib_400 #> 167  Fleischmann 2005  0.000 5.150000 0.07536922    Lu_200   4  Lumiracoxib_200 #> 168  Fleischmann 2005  2.000 3.600000 0.07969604    Lu_200   4  Lumiracoxib_200 #> 169  Fleischmann 2005 13.000 3.300000 0.08726499    Lu_200   4  Lumiracoxib_200 #> 170         Gana 2006  0.000 6.118000 0.13298113      Pl_0   1        Placebo_0 #> 171         Gana 2006  1.000 5.278000 0.13368325      Pl_0   1        Placebo_0 #> 172         Gana 2006  2.000 4.846000 0.13645321      Pl_0   1        Placebo_0 #> 173         Gana 2006  3.000 4.746000 0.13873236      Pl_0   1        Placebo_0 #> 174         Gana 2006  6.000 4.576000 0.14503567      Pl_0   1        Placebo_0 #> 175         Gana 2006  9.000 4.604000 0.14996109      Pl_0   1        Placebo_0 #> 176         Gana 2006 12.000 4.634000 0.15451115      Pl_0   1        Placebo_0 #> 177         Gana 2006  0.000 5.932000 0.13584957    Tr_300   2     Tramadol_300 #> 178         Gana 2006  1.000 4.534000 0.13381126    Tr_300   2     Tramadol_300 #> 179         Gana 2006  2.000 4.076000 0.13543190    Tr_300   2     Tramadol_300 #> 180         Gana 2006  3.000 3.920000 0.13660626    Tr_300   2     Tramadol_300 #> 181         Gana 2006  6.000 3.790000 0.14032551    Tr_300   2     Tramadol_300 #> 182         Gana 2006  9.000 3.862000 0.14378647    Tr_300   2     Tramadol_300 #> 183         Gana 2006 12.000 3.854000 0.14624779    Tr_300   2     Tramadol_300 #> 184         Gana 2006  0.000 6.304000 0.13034787    Tr_200   3     Tramadol_200 #> 185         Gana 2006  1.000 5.030000 0.13379605    Tr_200   3     Tramadol_200 #> 186         Gana 2006  2.000 4.498000 0.13535877    Tr_200   3     Tramadol_200 #> 187         Gana 2006  3.000 4.300000 0.13697546    Tr_200   3     Tramadol_200 #> 188         Gana 2006  6.000 4.172000 0.14047598    Tr_200   3     Tramadol_200 #> 189         Gana 2006  9.000 4.154000 0.14352237    Tr_200   3     Tramadol_200 #> 190         Gana 2006 12.000 4.074000 0.14613323    Tr_200   3     Tramadol_200 #> 191         Gana 2006  0.000 6.164000 0.13973447    Tr_100   4     Tramadol_100 #> 192         Gana 2006  1.000 5.026000 0.13345351    Tr_100   4     Tramadol_100 #> 193         Gana 2006  2.000 4.666000 0.13494127    Tr_100   4     Tramadol_100 #> 194         Gana 2006  3.000 4.446000 0.13629561    Tr_100   4     Tramadol_100 #> 195         Gana 2006  6.000 4.114000 0.14008223    Tr_100   4     Tramadol_100 #> 196         Gana 2006  9.000 4.052000 0.14324415    Tr_100   4     Tramadol_100 #> 197         Gana 2006 12.000 4.020000 0.14598755    Tr_100   4     Tramadol_100 #> 198         Gana 2006  0.000 5.960000 0.13185418    Tr_400   5     Tramadol_400 #> 199         Gana 2006  1.000 4.678000 0.13349877    Tr_400   5     Tramadol_400 #> 200         Gana 2006  2.000 4.230000 0.13504263    Tr_400   5     Tramadol_400 #> 201         Gana 2006  3.000 3.898000 0.13645394    Tr_400   5     Tramadol_400 #> 202         Gana 2006  6.000 3.700000 0.13994609    Tr_400   5     Tramadol_400 #> 203         Gana 2006  9.000 3.708000 0.14305671    Tr_400   5     Tramadol_400 #> 204         Gana 2006 12.000 3.804000 0.14586527    Tr_400   5     Tramadol_400 #> 205 Gottesdiener 2002  0.000 7.062000 0.22216747      Pl_0   1        Placebo_0 #> 206 Gottesdiener 2002  1.000 6.362000 0.22671752      Pl_0   1        Placebo_0 #> 207 Gottesdiener 2002  2.000 6.262000 0.23247437      Pl_0   1        Placebo_0 #> 208 Gottesdiener 2002  4.000 6.052000 0.24012258      Pl_0   1        Placebo_0 #> 209 Gottesdiener 2002  6.000 5.902000 0.24781410      Pl_0   1        Placebo_0 #> 210 Gottesdiener 2002  0.000 6.756000 0.16960703     Et_30   2    Etoricoxib_30 #> 211 Gottesdiener 2002  1.000 4.796000 0.17227052     Et_30   2    Etoricoxib_30 #> 212 Gottesdiener 2002  2.000 4.416000 0.17432054     Et_30   2    Etoricoxib_30 #> 213 Gottesdiener 2002  4.000 4.476000 0.17798345     Et_30   2    Etoricoxib_30 #> 214 Gottesdiener 2002  6.000 4.106000 0.18209630     Et_30   2    Etoricoxib_30 #> 215 Gottesdiener 2002  0.000 6.854000 0.16202815     Et_90   3    Etoricoxib_90 #> 216 Gottesdiener 2002  1.000 4.134000 0.16437693     Et_90   3    Etoricoxib_90 #> 217 Gottesdiener 2002  2.000 4.084000 0.16637489     Et_90   3    Etoricoxib_90 #> 218 Gottesdiener 2002  4.000 3.914000 0.16972969     Et_90   3    Etoricoxib_90 #> 219 Gottesdiener 2002  6.000 3.794000 0.17288616     Et_90   3    Etoricoxib_90 #> 220 Gottesdiener 2002  0.000 6.686000 0.16193198     Et_60   4    Etoricoxib_60 #> 221 Gottesdiener 2002  1.000 3.866000 0.16433909     Et_60   4    Etoricoxib_60 #> 222 Gottesdiener 2002  2.000 3.616000 0.16650567     Et_60   4    Etoricoxib_60 #> 223 Gottesdiener 2002  4.000 3.576000 0.17027961     Et_60   4    Etoricoxib_60 #> 224 Gottesdiener 2002  6.000 3.406000 0.17343517     Et_60   4    Etoricoxib_60 #> 225 Gottesdiener 2002  0.000 6.873000 0.15841042      Et_5   5     Etoricoxib_5 #> 226 Gottesdiener 2002  1.000 5.823000 0.16082866      Et_5   5     Etoricoxib_5 #> 227 Gottesdiener 2002  2.000 5.343000 0.16260877      Et_5   5     Etoricoxib_5 #> 228 Gottesdiener 2002  4.000 5.203000 0.16620577      Et_5   5     Etoricoxib_5 #> 229 Gottesdiener 2002  6.000 4.823000 0.16929977      Et_5   5     Etoricoxib_5 #> 230 Gottesdiener 2002  0.000 7.009000 0.16055675     Et_10   6    Etoricoxib_10 #> 231 Gottesdiener 2002  1.000 5.599000 0.16276707     Et_10   6    Etoricoxib_10 #> 232 Gottesdiener 2002  2.000 5.079000 0.16477139     Et_10   6    Etoricoxib_10 #> 233 Gottesdiener 2002  4.000 5.239000 0.16891879     Et_10   6    Etoricoxib_10 #> 234 Gottesdiener 2002  6.000 5.219000 0.17199388     Et_10   6    Etoricoxib_10 #> 235       Kivitz 2001  0.000 5.296405 0.11365985      Pl_0   1        Placebo_0 #> 236       Kivitz 2001  2.000 4.997006 0.12490734      Pl_0   1        Placebo_0 #> 237       Kivitz 2001 12.000 4.862275 0.14493324      Pl_0   1        Placebo_0 #> 238       Kivitz 2001  0.000 5.266465 0.11587666   Na_1000   2    Naproxen_1000 #> 239       Kivitz 2001  2.000 3.896707 0.07993053   Na_1000   2    Naproxen_1000 #> 240       Kivitz 2001 12.000 3.994012 0.09000872   Na_1000   2    Naproxen_1000 #> 241       Kivitz 2001  0.000 5.416170 0.11432410    Ce_400   3     Celebrex_400 #> 242       Kivitz 2001  2.000 4.136228 0.11773760    Ce_400   3     Celebrex_400 #> 243       Kivitz 2001 12.000 4.248502 0.12824272    Ce_400   3     Celebrex_400 #> 244       Kivitz 2001  0.000 5.303890 0.11595175    Ce_200   4     Celebrex_200 #> 245       Kivitz 2001  2.000 4.046407 0.11936596    Ce_200   4     Celebrex_200 #> 246       Kivitz 2001 12.000 4.255988 0.13013062    Ce_200   4     Celebrex_200 #> 247       Kivitz 2001  0.000 5.244010 0.11372082    Ce_100   5     Celebrex_100 #> 248       Kivitz 2001  2.000 4.398204 0.15003125    Ce_100   5     Celebrex_100 #> 249       Kivitz 2001 12.000 4.495509 0.15003125    Ce_100   5     Celebrex_100 #> 250       Kivitz 2002  0.000 5.400000 0.11993228      Pl_0   1        Placebo_0 #> 251       Kivitz 2002  2.000 4.450000 0.12534348      Pl_0   1        Placebo_0 #> 252       Kivitz 2002  6.000 4.200000 0.13397271      Pl_0   1        Placebo_0 #> 253       Kivitz 2002 12.000 4.150000 0.14364307      Pl_0   1        Placebo_0 #> 254       Kivitz 2002  0.000 5.350000 0.12011743   Na_1000   2    Naproxen_1000 #> 255       Kivitz 2002  2.000 3.950000 0.12308383   Na_1000   2    Naproxen_1000 #> 256       Kivitz 2002  6.000 3.800000 0.12840184   Na_1000   2    Naproxen_1000 #> 257       Kivitz 2002 12.000 3.700000 0.13427651   Na_1000   2    Naproxen_1000 #> 258       Kivitz 2002  0.000 5.400000 0.12107291      Va_5   3     Valdecoxib_5 #> 259       Kivitz 2002  2.000 4.100000 0.12407956      Va_5   3     Valdecoxib_5 #> 260       Kivitz 2002  6.000 3.850000 0.12945933      Va_5   3     Valdecoxib_5 #> 261       Kivitz 2002 12.000 3.800000 0.13543772      Va_5   3     Valdecoxib_5 #> 262       Kivitz 2002  0.000 5.350000 0.12095716     Va_20   4    Valdecoxib_20 #> 263       Kivitz 2002  2.000 3.900000 0.12456927     Va_20   4    Valdecoxib_20 #> 264       Kivitz 2002  6.000 3.700000 0.12930072     Va_20   4    Valdecoxib_20 #> 265       Kivitz 2002 12.000 3.700000 0.13516536     Va_20   4    Valdecoxib_20 #> 266       Kivitz 2002  0.000 5.500000 0.11988167     Va_10   5    Valdecoxib_10 #> 267       Kivitz 2002  2.000 3.950000 0.12302862     Va_10   5    Valdecoxib_10 #> 268       Kivitz 2002  6.000 3.950000 0.12792257     Va_10   5    Valdecoxib_10 #> 269       Kivitz 2002 12.000 3.950000 0.13378317     Va_10   5    Valdecoxib_10 #> 270      Lehmann 2005  0.000 4.900000 0.07770287      Pl_0   1        Placebo_0 #> 271      Lehmann 2005  2.000 4.350000 0.08237490      Pl_0   1        Placebo_0 #> 272      Lehmann 2005 13.000 3.650000 0.09589396      Pl_0   1        Placebo_0 #> 273      Lehmann 2005  0.000 5.100000 0.07880393    Ce_200   2     Celebrex_200 #> 274      Lehmann 2005  2.000 3.850000 0.08116206    Ce_200   2     Celebrex_200 #> 275      Lehmann 2005 13.000 3.400000 0.08923811    Ce_200   2     Celebrex_200 #> 276      Lehmann 2005  0.000 4.950000 0.07782803    Lu_200   3  Lumiracoxib_200 #> 277      Lehmann 2005  2.000 3.900000 0.08112612    Lu_200   3  Lumiracoxib_200 #> 278      Lehmann 2005 13.000 3.350000 0.08920896    Lu_200   3  Lumiracoxib_200 #> 279      Lehmann 2005  0.000 4.950000 0.07880393    Lu_100   4  Lumiracoxib_100 #> 280      Lehmann 2005  2.000 3.750000 0.08124250    Lu_100   4  Lumiracoxib_100 #> 281      Lehmann 2005 13.000 3.250000 0.08923133    Lu_100   4  Lumiracoxib_100 #> 282        Leung 2002  0.000 6.870000 0.20939918      Pl_0   1        Placebo_0 #> 283        Leung 2002  2.000 5.530000 0.23627637      Pl_0   1        Placebo_0 #> 284        Leung 2002  4.000 5.400000 0.24560040      Pl_0   1        Placebo_0 #> 285        Leung 2002  8.000 5.160000 0.25982124      Pl_0   1        Placebo_0 #> 286        Leung 2002 12.000 5.340000 0.27087539      Pl_0   1        Placebo_0 #> 287        Leung 2002  0.000 6.564000 0.11522885   Na_1000   2    Naproxen_1000 #> 288        Leung 2002  2.000 3.974000 0.11677361   Na_1000   2    Naproxen_1000 #> 289        Leung 2002  4.000 4.034000 0.11914814   Na_1000   2    Naproxen_1000 #> 290        Leung 2002  8.000 4.034000 0.12366869   Na_1000   2    Naproxen_1000 #> 291        Leung 2002 12.000 4.084000 0.12715119   Na_1000   2    Naproxen_1000 #> 292        Leung 2002  0.000 6.491000 0.11198246     Et_60   3    Etoricoxib_60 #> 293        Leung 2002  2.000 4.041000 0.11590711     Et_60   3    Etoricoxib_60 #> 294        Leung 2002  4.000 4.021000 0.11857705     Et_60   3    Etoricoxib_60 #> 295        Leung 2002  8.000 3.901000 0.12290712     Et_60   3    Etoricoxib_60 #> 296        Leung 2002 12.000 3.801000 0.12652421     Et_60   3    Etoricoxib_60 #> 297    Markenson 2005  0.000 6.130000 0.31002201      Pl_0   1        Placebo_0 #> 298    Markenson 2005  2.142 5.830000 0.31002201      Pl_0   1        Placebo_0 #> 299    Markenson 2005  4.286 5.720000 0.31002201      Pl_0   1        Placebo_0 #> 300    Markenson 2005  6.429 5.940000 0.31002201      Pl_0   1        Placebo_0 #> 301    Markenson 2005  8.571 5.980000 0.31002201      Pl_0   1        Placebo_0 #> 302    Markenson 2005 12.857 5.980000 0.31002201      Pl_0   1        Placebo_0 #> 303    Markenson 2005  0.000 6.310000 0.27995615     Ox_44   2     Oxycodone_44 #> 304    Markenson 2005  2.142 4.830000 0.27995615     Ox_44   2     Oxycodone_44 #> 305    Markenson 2005  4.286 5.020000 0.27995615     Ox_44   2     Oxycodone_44 #> 306    Markenson 2005  6.429 4.760000 0.27995615     Ox_44   2     Oxycodone_44 #> 307    Markenson 2005  8.571 4.720000 0.27995615     Ox_44   2     Oxycodone_44 #> 308    Markenson 2005 12.857 4.940000 0.27995615     Ox_44   2     Oxycodone_44 #> 309      McKenna 2001  0.000 5.350000 0.11667262      Pl_0   1        Placebo_0 #> 310      McKenna 2001  6.000 5.350000 0.12868684      Pl_0   1        Placebo_0 #> 311      McKenna 2001  0.000 5.300000 0.10987659    Ce_200   2     Celebrex_200 #> 312      McKenna 2001  6.000 5.300000 0.12302332    Ce_200   2     Celebrex_200 #> 313      Puopolo 2007  0.000 6.466000 0.16356491      Pl_0   1        Placebo_0 #> 314      Puopolo 2007  2.000 5.236000 0.17148452      Pl_0   1        Placebo_0 #> 315      Puopolo 2007  4.000 5.186000 0.17771766      Pl_0   1        Placebo_0 #> 316      Puopolo 2007  8.000 4.686000 0.18879059      Pl_0   1        Placebo_0 #> 317      Puopolo 2007 12.000 4.716000 0.19583685      Pl_0   1        Placebo_0 #> 318      Puopolo 2007  0.000 6.646000 0.11544539     Et_30   2    Etoricoxib_30 #> 319      Puopolo 2007  2.000 4.416000 0.11860337     Et_30   2    Etoricoxib_30 #> 320      Puopolo 2007  4.000 4.146000 0.12123458     Et_30   2    Etoricoxib_30 #> 321      Puopolo 2007  8.000 3.646000 0.12544008     Et_30   2    Etoricoxib_30 #> 322      Puopolo 2007 12.000 3.656000 0.12905699     Et_30   2    Etoricoxib_30 #> 323     Sawitzke 2010  0.000 4.790000 0.14954087      Pl_0   1        Placebo_0 #> 324     Sawitzke 2010  4.000 3.420000 0.16328616      Pl_0   1        Placebo_0 #> 325     Sawitzke 2010  8.000 3.080000 0.17919315      Pl_0   1        Placebo_0 #> 326     Sawitzke 2010 16.000 2.790000 0.19864814      Pl_0   1        Placebo_0 #> 327     Sawitzke 2010 24.000 2.700000 0.20921215      Pl_0   1        Placebo_0 #> 328     Sawitzke 2010  0.000 4.660000 0.14429790    Ce_200   2     Celebrex_200 #> 329     Sawitzke 2010  4.000 3.080000 0.15170564    Ce_200   2     Celebrex_200 #> 330     Sawitzke 2010  8.000 2.630000 0.15982418    Ce_200   2     Celebrex_200 #> 331     Sawitzke 2010 16.000 2.600000 0.17277095    Ce_200   2     Celebrex_200 #> 332     Sawitzke 2010 24.000 2.140000 0.18297588    Ce_200   2     Celebrex_200 #> 333  Schnitzer 2005_2  0.000 6.600000 0.16571813      Pl_0   1        Placebo_0 #> 334  Schnitzer 2005_2  1.000 4.390000 0.17390525      Pl_0   1        Placebo_0 #> 335  Schnitzer 2005_2  2.000 4.410000 0.17768641      Pl_0   1        Placebo_0 #> 336  Schnitzer 2005_2  4.000 4.050000 0.18398436      Pl_0   1        Placebo_0 #> 337  Schnitzer 2005_2  6.000 3.970000 0.18952849      Pl_0   1        Placebo_0 #> 338  Schnitzer 2005_2  0.000 6.500000 0.15993856   Na_1000   2    Naproxen_1000 #> 339  Schnitzer 2005_2  1.000 3.450000 0.16243804   Na_1000   2    Naproxen_1000 #> 340  Schnitzer 2005_2  2.000 3.000000 0.16392544   Na_1000   2    Naproxen_1000 #> 341  Schnitzer 2005_2  4.000 2.760000 0.16789523   Na_1000   2    Naproxen_1000 #> 342  Schnitzer 2005_2  6.000 2.690000 0.17061128   Na_1000   2    Naproxen_1000 #> 343  Schnitzer 2005_2  0.000 6.700000 0.15640983   Na_1500   3 Naproxcinod_1500 #> 344  Schnitzer 2005_2  1.000 3.430000 0.16417310   Na_1500   3 Naproxcinod_1500 #> 345  Schnitzer 2005_2  2.000 3.180000 0.16645459   Na_1500   3 Naproxcinod_1500 #> 346  Schnitzer 2005_2  4.000 2.880000 0.16974660   Na_1500   3 Naproxcinod_1500 #> 347  Schnitzer 2005_2  6.000 2.730000 0.17321634   Na_1500   3 Naproxcinod_1500 #> 348  Schnitzer 2005_2  0.000 6.500000 0.16970563     Ro_25   4     Rofecoxib_25 #> 349  Schnitzer 2005_2  1.000 3.320000 0.17658562     Ro_25   4     Rofecoxib_25 #> 350  Schnitzer 2005_2  2.000 3.160000 0.17939738     Ro_25   4     Rofecoxib_25 #> 351  Schnitzer 2005_2  4.000 2.970000 0.18349812     Ro_25   4     Rofecoxib_25 #> 352  Schnitzer 2005_2  6.000 2.900000 0.18625935     Ro_25   4     Rofecoxib_25 #> 353  Schnitzer 2005_2  0.000 6.600000 0.17111236    Na_750   5  Naproxcinod_750 #> 354  Schnitzer 2005_2  1.000 3.330000 0.16997392    Na_750   5  Naproxcinod_750 #> 355  Schnitzer 2005_2  2.000 2.950000 0.17160362    Na_750   5  Naproxcinod_750 #> 356  Schnitzer 2005_2  4.000 2.840000 0.17541465    Na_750   5  Naproxcinod_750 #> 357  Schnitzer 2005_2  6.000 2.790000 0.17898501    Na_750   5  Naproxcinod_750 #> 358  Schnitzer 2005_2  0.000 6.700000 0.18336859    Na_250   6  Naproxcinod_250 #> 359  Schnitzer 2005_2  1.000 4.550000 0.17227298    Na_250   6  Naproxcinod_250 #> 360  Schnitzer 2005_2  2.000 4.170000 0.17410810    Na_250   6  Naproxcinod_250 #> 361  Schnitzer 2005_2  4.000 4.140000 0.17815403    Na_250   6  Naproxcinod_250 #> 362  Schnitzer 2005_2  6.000 3.990000 0.18131412    Na_250   6  Naproxcinod_250 #> 363    Schnitzer 2010  0.000 7.215000 0.10649083      Pl_0   1        Placebo_0 #> 364    Schnitzer 2010  2.000 5.265000 0.11319620      Pl_0   1        Placebo_0 #> 365    Schnitzer 2010  6.000 4.945000 0.12136624      Pl_0   1        Placebo_0 #> 366    Schnitzer 2010 13.000 4.655000 0.13216957      Pl_0   1        Placebo_0 #> 367    Schnitzer 2010  0.000 7.101000 0.11400775   Na_1000   2    Naproxen_1000 #> 368    Schnitzer 2010  2.000 3.871000 0.10996805   Na_1000   2    Naproxen_1000 #> 369    Schnitzer 2010  6.000 3.551000 0.11460991   Na_1000   2    Naproxen_1000 #> 370    Schnitzer 2010 13.000 3.331000 0.12044908   Na_1000   2    Naproxen_1000 #> 371    Schnitzer 2010  0.000 7.316000 0.09844550   Na_1500   3 Naproxcinod_1500 #> 372    Schnitzer 2010  2.000 4.016000 0.10918995   Na_1500   3 Naproxcinod_1500 #> 373    Schnitzer 2010  6.000 3.546000 0.11374548   Na_1500   3 Naproxcinod_1500 #> 374    Schnitzer 2010 13.000 3.596000 0.11998801   Na_1500   3 Naproxcinod_1500 #> 375    Schnitzer 2010  0.000 7.358000 0.09927747    Na_750   4  Naproxcinod_750 #> 376    Schnitzer 2010  2.000 4.628000 0.10666145    Na_750   4  Naproxcinod_750 #> 377    Schnitzer 2010  6.000 4.118000 0.11133092    Na_750   4  Naproxcinod_750 #> 378    Schnitzer 2010 13.000 3.918000 0.11741286    Na_750   4  Naproxcinod_750 #> 379 Schnitzer 2011LUM  0.000 5.300000 0.07329841      Pl_0   1        Placebo_0 #> 380 Schnitzer 2011LUM  4.000 4.420000 0.08359282      Pl_0   1        Placebo_0 #> 381 Schnitzer 2011LUM  8.000 4.255000 0.08894068      Pl_0   1        Placebo_0 #> 382 Schnitzer 2011LUM 13.000 4.140000 0.09407760      Pl_0   1        Placebo_0 #> 383 Schnitzer 2011LUM  0.000 5.400000 0.07279126    Ce_200   2     Celebrex_200 #> 384 Schnitzer 2011LUM  4.000 3.860000 0.08060813    Ce_200   2     Celebrex_200 #> 385 Schnitzer 2011LUM  8.000 3.580000 0.08354665    Ce_200   2     Celebrex_200 #> 386 Schnitzer 2011LUM 13.000 3.545000 0.08671550    Ce_200   2     Celebrex_200 #> 387 Schnitzer 2011LUM  0.000 5.400000 0.07863926    Lu_100   3  Lumiracoxib_100 #> 388 Schnitzer 2011LUM  4.000 3.880000 0.07981473    Lu_100   3  Lumiracoxib_100 #> 389 Schnitzer 2011LUM  8.000 3.585000 0.08284601    Lu_100   3  Lumiracoxib_100 #> 390 Schnitzer 2011LUM 13.000 3.585000 0.08591064    Lu_100   3  Lumiracoxib_100 #> 391      Sheldon 2005  0.000 5.500000 0.07393263      Pl_0   1        Placebo_0 #> 392      Sheldon 2005 13.000 4.350000 0.09856959      Pl_0   1        Placebo_0 #> 393      Sheldon 2005  0.000 5.400000 0.08171819    Ce_200   2     Celebrex_200 #> 394      Sheldon 2005 13.000 3.700000 0.08986899    Ce_200   2     Celebrex_200 #> 395      Sheldon 2005  0.000 5.400000 0.07813401    Lu_100   3  Lumiracoxib_100 #> 396      Sheldon 2005 13.000 3.600000 0.09022642    Lu_100   3  Lumiracoxib_100 #> 397      Sheldon 2005  0.000 5.400000 0.08077908     Lu_NA   4   Lumiracoxib_NA #> 398      Sheldon 2005 13.000 3.550000 0.09065824     Lu_NA   4   Lumiracoxib_NA #> 399       Sowers 2005  0.000 4.800000 0.19003495   Na_1000   1    Naproxen_1000 #> 400       Sowers 2005  6.000 3.480000 0.21001071   Na_1000   1    Naproxen_1000 #> 401       Sowers 2005 12.000 3.340000 0.23997436   Na_1000   1    Naproxen_1000 #> 402       Sowers 2005  0.000 4.280000 0.19002043    Ce_200   2     Celebrex_200 #> 403       Sowers 2005  6.000 2.970000 0.19002043    Ce_200   2     Celebrex_200 #> 404       Sowers 2005 12.000 2.780000 0.19996735    Ce_200   2     Celebrex_200 #> 405       Sowers 2005  0.000 4.850000 0.19000576     Ro_25   3     Rofecoxib_25 #> 406       Sowers 2005  6.000 3.360000 0.20001523     Ro_25   3     Rofecoxib_25 #> 407       Sowers 2005 12.000 3.180000 0.22003416     Ro_25   3     Rofecoxib_25 #> 408   Tannenbaum 2004  0.000 5.150000 0.09622504      Pl_0   1        Placebo_0 #> 409   Tannenbaum 2004  2.000 4.450000 0.11095877      Pl_0   1        Placebo_0 #> 410   Tannenbaum 2004 13.000 3.950000 0.12879815      Pl_0   1        Placebo_0 #> 411   Tannenbaum 2004  0.000 5.050000 0.07523352    Ce_200   2     Celebrex_200 #> 412   Tannenbaum 2004  2.000 3.850000 0.07727746    Ce_200   2     Celebrex_200 #> 413   Tannenbaum 2004 13.000 3.500000 0.08489279    Ce_200   2     Celebrex_200 #> 414   Tannenbaum 2004  0.000 5.000000 0.07446346    Lu_400   3  Lumiracoxib_400 #> 415   Tannenbaum 2004  2.000 3.700000 0.07649130    Lu_400   3  Lumiracoxib_400 #> 416   Tannenbaum 2004 13.000 3.400000 0.08413371    Lu_400   3  Lumiracoxib_400 #> 417   Tannenbaum 2004  0.000 5.050000 0.07703435    Lu_200   4  Lumiracoxib_200 #> 418   Tannenbaum 2004  2.000 3.750000 0.07698671    Lu_200   4  Lumiracoxib_200 #> 419   Tannenbaum 2004 13.000 3.450000 0.08442820    Lu_200   4  Lumiracoxib_200 #> 420     Williams 2001  0.000 5.300000 0.10007405      Pl_0   1        Placebo_0 #> 421     Williams 2001  6.000 4.400000 0.10007405      Pl_0   1        Placebo_0 #> 422     Williams 2001  0.000 5.050000 0.15008849    Ce_200   2     Celebrex_200 #> 423     Williams 2001  6.000 3.750000 0.10016636    Ce_200   2     Celebrex_200  # Define network network <- mb.network(osteopain, description=\"Osteoarthritis Dataset\") #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Define network with different network reference treatment network <- mb.network(osteopain, reference=\"Ce_200\") #> Studies reporting change from baseline automatically identified from the data   # Using the alogliptin dataset network <- mb.network(alog_pcfb, description=\"Alogliptin Dataset\") #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Examine networks print(network) #> description : #> [1] \"Alogliptin Dataset\" #>  #> data.ab : #>   studyID time treatment narm arm     y    se  n clinicaltrialGov_ID      agent #> 1      11    6         1    6   1  0.02 0.097 41         NCT00755846 alogliptin #> 2      11    6         2    6   2 -0.12 0.095 42         NCT00755846 alogliptin #> 3      11    6         3    6   3 -0.35 0.096 42         NCT00755846 alogliptin #> 4      11    6         4    6   4 -0.36 0.093 45         NCT00755846 alogliptin #> 5      11    6         5    6   5 -0.32 0.097 43         NCT00755846 alogliptin #> 6      11    6         6    6   6 -0.31 0.094 44         NCT00755846 alogliptin #>     dose fupcount fups #> 1   0.00        1    2 #> 2   6.25        1    2 #> 3  12.50        1    2 #> 4  25.00        1    2 #> 5  50.00        1    2 #> 6 100.00        1    2 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 227 rows ] #>  #> studyID : #>  [1] \"11\" \"1\"  \"3\"  \"2\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"14\" \"12\" \"13\" #>  #> cfb : #>  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #>  #> treatments : #> [1] \"placebo\"   \"alog_6.25\" \"alog_12.5\" \"alog_25\"   \"alog_50\"   \"alog_100\"  #>  plot(network)"},{"path":"/reference/mb.nodesplit.comparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify comparisons in time-course MBNMA datasets that fulfil criteria for node-splitting — mb.nodesplit.comparisons","title":"Identify comparisons in time-course MBNMA datasets that fulfil criteria for node-splitting — mb.nodesplit.comparisons","text":"Identify comparisons informed direct indirect evidence independent sources MBNMA datasets repeated measurements study. comparisons therefore fulfil criteria testing inconsistency via node-splitting, following method van Valkenhoef van Valkenhoef et al. (2016) .","code":""},{"path":"/reference/mb.nodesplit.comparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify comparisons in time-course MBNMA datasets that fulfil criteria for node-splitting — mb.nodesplit.comparisons","text":"","code":"mb.nodesplit.comparisons(network)"},{"path":"/reference/mb.nodesplit.comparisons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify comparisons in time-course MBNMA datasets that fulfil criteria for node-splitting — mb.nodesplit.comparisons","text":"network object class \"mb.network\".","code":""},{"path":"/reference/mb.nodesplit.comparisons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify comparisons in time-course MBNMA datasets that fulfil criteria for node-splitting — mb.nodesplit.comparisons","text":"data frame comparisons informed direct indirect evidence independent sources. row data frame different treatment comparison. Numerical codes t1 t2 correspond treatment codes.","code":""},{"path":"/reference/mb.nodesplit.comparisons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify comparisons in time-course MBNMA datasets that fulfil criteria for node-splitting — mb.nodesplit.comparisons","text":"Similar gemtc::mtc.nodesplit() uses fixed reference treatment therefore suggests fewer loops test inconsistency. Heterogeneity can also parameterised inconsistency testing inconsistency additional loops whilst changing reference treatment also identifying heterogeneity. Depends igraph.","code":""},{"path":"/reference/mb.nodesplit.comparisons.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identify comparisons in time-course MBNMA datasets that fulfil criteria for node-splitting — mb.nodesplit.comparisons","text":"van Valkenhoef G, Dias S, Ades AE, Welton NJ (2016). “Automated generation node-splitting models assessment inconsistency network meta-analysis.” Res Synth Methods, 7(1), 80-93. ISSN 1759-2887 (Electronic) 1759-2879 (Linking), doi:10.1002/jrsm.1167 , https://pubmed.ncbi.nlm.nih.gov/26461181/.","code":""},{"path":"/reference/mb.nodesplit.comparisons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify comparisons in time-course MBNMA datasets that fulfil criteria for node-splitting — mb.nodesplit.comparisons","text":"","code":"# Create mb.network object network <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Identify comparisons informed by direct and indirect evidence mb.nodesplit.comparisons(network) #>   t1 t2     path #> 5  3 22 3->1->22 #> 4  3 15 3->1->15"},{"path":"/reference/mb.nodesplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform node-splitting on a MBNMA time-course network — plot.nodesplit","title":"Perform node-splitting on a MBNMA time-course network — plot.nodesplit","text":"Within MBNMA time-course network, split contributions direct indirect evidence test consistency . Closed loops treatments possible test consistency direct indirect evidence available independent sources van Valkenhoef van Valkenhoef et al. (2016) .","code":""},{"path":"/reference/mb.nodesplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform node-splitting on a MBNMA time-course network — plot.nodesplit","text":"","code":"# S3 method for nodesplit plot(x, plot.type = NULL, params = NULL, ...)  mb.nodesplit(   network,   comparisons = mb.nodesplit.comparisons(network),   nodesplit.parameters = \"all\",   fun = tpoly(degree = 1),   times = NULL,   lim = \"cred\",   ... )"},{"path":"/reference/mb.nodesplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform node-splitting on a MBNMA time-course network — plot.nodesplit","text":"x object class(\"nodesplit\") plot.type character string can take value \"forest\" plot forest plots, \"density\" plot density plots, left NULL (default) plot types plot. params character vector corresponding time-course parameter(s) plot results. left NULL (default), nodes-split results time-course parameters plotted. ... Arguments sent mb.run() network object class \"mb.network\". comparisons data frame specifying comparisons split (one row per comparison). frame two columns indicating treatment comparison: t1 t2. nodesplit.parameters character vector named time-course parameters node-split (e.g. c(\"beta.1\", \"beta.2\")). Can use \"\" split time-course parameters. fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser() times sequence positive numbers indicating time points predict mean responses (conduct node-split used mb.nodesplit()) lim Specifies calculation either 95% credible intervals (lim=\"cred\") 95% prediction intervals (lim=\"pred\").","code":""},{"path":"/reference/mb.nodesplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform node-splitting on a MBNMA time-course network — plot.nodesplit","text":"Plots desired graph(s) returns object (list objects plot.type=NULL) class(c(\"gg\", \"ggplot\")), can edited using ggplot commands. object class(\"mb.nodesplit\") list containing elements d.X.Y (treatment 1 = X, treatment 2 = Y). element (corresponding comparison) contains additional numbered elements corresponding parameter time-course function node splitting performed. elements contain: overlap matrix MCMC results difference direct indirect evidence p.values Bayesian p-value test consistency direct indirect evidence quantiles forest.plot density.plot direct MCMC results direct evidence indirect MCMC results indirect evidence","code":""},{"path":"/reference/mb.nodesplit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform node-splitting on a MBNMA time-course network — plot.nodesplit","text":"S3 method plot() mb.nodesplit object generates either forest plots posterior medians 95\\% credible intervals, density plots posterior densities direct indirect evidence. Note specifying times argument user can perform node-split treatment effects specific time-point. give treatment effect direct, indirect, MBNMA estimates time point.","code":""},{"path":"/reference/mb.nodesplit.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Perform node-splitting on a MBNMA time-course network — plot.nodesplit","text":"plot(nodesplit): Plot outputs nodesplit models","code":""},{"path":"/reference/mb.nodesplit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform node-splitting on a MBNMA time-course network — plot.nodesplit","text":"van Valkenhoef G, Dias S, Ades AE, Welton NJ (2016). “Automated generation node-splitting models assessment inconsistency network meta-analysis.” Res Synth Methods, 7(1), 80-93. ISSN 1759-2887 (Electronic) 1759-2879 (Linking), doi:10.1002/jrsm.1167 , https://pubmed.ncbi.nlm.nih.gov/26461181/.","code":""},{"path":"/reference/mb.nodesplit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform node-splitting on a MBNMA time-course network — plot.nodesplit","text":"","code":"# \\donttest{ # Create mb.network object painnet <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Identify comparisons informed by direct and indirect evidence splits <- mb.nodesplit.comparisons(painnet)  # Fit a log-linear time-course MBNMA (takes a while to run) result <- mb.nodesplit(painnet, comparisons=splits, nodesplit.parameters=\"all\",   fun=tloglin(pool.rate=\"rel\", method.rate=\"common\"),   rho=\"dunif(0,1)\", covar=\"varadj\"   ) #> [1] \"running checks\" #> [1] \"Running NMA model\" #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 89 #>    Total graph size: 7303 #>  #> Initializing model #>  #> [1] \"Comparison 1/2\" #> [1] \"Calculating nodesplit for: Ce_200 vs Ro_25\" #> [1] \"Treatment code: 3 vs 22\" #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 467 #>    Total graph size: 7651 #>  #> Initializing model #>  #> [1] \"Direct complete\" #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 414 #>    Unobserved stochastic nodes: 89 #>    Total graph size: 7251 #>  #> Initializing model #>  #> [1] \"Indirect complete\" #> [1] \"Comparison 2/2\" #> [1] \"Calculating nodesplit for: Ce_200 vs Na_1000\" #> [1] \"Treatment code: 3 vs 15\" #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 467 #>    Total graph size: 7651 #>  #> Initializing model #>  #> [1] \"Direct complete\" #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 408 #>    Unobserved stochastic nodes: 89 #>    Total graph size: 7152 #>  #> Initializing model #>  #> [1] \"Indirect complete\"  # Fit an emax time-course MBNMA with a node-split on emax parameters only result <- mb.nodesplit(painnet, comparisons=splits, nodesplit.parameters=\"emax\",   fun=temax(pool.emax=\"rel\", method.emax=\"common\",     pool.et50=\"rel\", method.et50=\"common\")) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> [1] \"running checks\" #> [1] \"Running NMA model\" #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 146 #>    Total graph size: 8294 #>  #> Initializing model #>  #> [1] \"Comparison 1/2\" #> [1] \"Calculating nodesplit for: Ce_200 vs Ro_25\" #> [1] \"Treatment code: 3 vs 22\" #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 524 #>    Total graph size: 8646 #>  #> Initializing model #>  #> [1] \"Direct complete\" #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 414 #>    Unobserved stochastic nodes: 146 #>    Total graph size: 8234 #>  #> Initializing model #>  #> [1] \"Indirect complete\" #> [1] \"Comparison 2/2\" #> [1] \"Calculating nodesplit for: Ce_200 vs Na_1000\" #> [1] \"Treatment code: 3 vs 15\" #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 524 #>    Total graph size: 8646 #>  #> Initializing model #>  #> [1] \"Direct complete\" #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 408 #>    Unobserved stochastic nodes: 146 #>    Total graph size: 8118 #>  #> Initializing model #>  #> [1] \"Indirect complete\"  # Inspect results print(result) #> ======================================== #> Node-splitting analysis of inconsistency #> ======================================== #>  #> emax #>  #> |Comparison        | p-value| Median|   2.5%|  97.5%| #> |:-----------------|-------:|------:|------:|------:| #> |Ro_25 vs Ce_200   |   0.076|       |       |       | #> |-> direct         |        |  0.362| -1.404|  5.679| #> |-> indirect       |        | -0.408| -0.729| -0.154| #> |                  |        |       |       |       | #> |Na_1000 vs Ce_200 |   0.009|       |       |       | #> |-> direct         |        | -0.085| -0.258|  0.079| #> |-> indirect       |        | -0.340| -0.468| -0.213| #> |                  |        |       |       |       | summary(result) #>          Comparison Time.Param Evidence Median   2.5%  97.5% p.value #> 1   Ro_25 vs Ce_200       emax   Direct  0.362 -1.404  5.679   0.076 #> 2   Ro_25 vs Ce_200       emax Indirect -0.408 -0.729 -0.154   0.076 #> 3 Na_1000 vs Ce_200       emax   Direct -0.085 -0.258  0.079   0.009 #> 4 Na_1000 vs Ce_200       emax Indirect -0.340 -0.468 -0.213   0.009  # Plot results plot(result)   # }"},{"path":"/reference/mb.run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run MBNMA time-course models — mb.run","title":"Run MBNMA time-course models — mb.run","text":"Fits Bayesian time-course model model-based network meta-analysis (MBNMA) can account repeated measures time within studies applying desired time-course function. Follows methods Pedder et al. (2019) .","code":""},{"path":"/reference/mb.run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run MBNMA time-course models — mb.run","text":"","code":"mb.run(   network,   fun = tpoly(degree = 1),   positive.scale = FALSE,   intercept = NULL,   link = \"identity\",   parameters.to.save = NULL,   rho = 0,   covar = \"varadj\",   omega = NULL,   corparam = FALSE,   class.effect = list(),   UME = FALSE,   pd = \"pv\",   parallel = FALSE,   priors = NULL,   n.iter = 20000,   n.chains = 3,   n.burnin = floor(n.iter/2),   n.thin = max(1, floor((n.iter - n.burnin)/1000)),   model.file = NULL,   jagsdata = NULL,   ... )"},{"path":"/reference/mb.run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run MBNMA time-course models — mb.run","text":"network object class \"mb.network\". fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser() positive.scale boolean object indicates whether continuous mean responses (y) positive therefore whether baseline response given prior constrains positive (e.g. scales <0). intercept boolean object indicates whether intercept (written alpha model) included. left NULL (default), intercept included studies reporting absolute means, excluded studies reporting change baseline (indicated network$cfb). link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function). parameters..save character vector containing names parameters monitor JAGS rho correlation coefficient modelling within-study correlation time points. default string representing prior distribution JAGS, indicating estimated data (e.g. rho=\"dunif(0,1)\"). rho also assigned numeric value (e.g. rho=0.7), fixes rho model value (e.g. use deterministic sensitivity analysis). set rho=0 (default) implies modelling correlation time points. covar character specifying covariance structure use modelling within-study correlation time-points. can done specifying one following: \"varadj\" - univariate likelihood variance adjustment assume constant correlation subsequent time points (Jansen et al. 2015) . default. \"CS\" - multivariate normal likelihood compound symmetry structure \"AR1\" - multivariate normal likelihood autoregressive AR1 structure omega DEPRACATED VERSION 0.2.3 ONWARDS (~uniform(-1,1) now used correlation parameters rather Wishart prior). scale matrix inverse-Wishart prior covariance matrix used model correlation time-course parameters (see Details time-course functions). omega must symmetric positive definite matrix dimensions equal number time-course parameters modelled using relative effects (pool=\"rel\"). left NULL (default) diagonal matrix elements equal 1 used. corparam boolean object indicates whether correlation modeled relative effect time-course parameters. Default FALSE automatically set FALSE class effects modeled. Setting TRUE models correlation time-course parameters. can help identify parameters estimated poorly treatments allowing sharing information parameters different treatments network, may also cause shrinkage. class.effect list named strings determines time-course parameters model class effect effect (\"common\" \"random\"). example: list(emax=\"common\", et50=\"random\"). UME Can take either TRUE FALSE (unrelated mean effects model time-course parameters respectively) can vector parameter name strings model UME. example: c(\"beta.1\", \"beta.2\"). pd Can take either: pv pV reported (automatically outputted R2jags). plugin calculates pD plug-method (Spiegelhalter et al. 2002) . faster, may output negative non-sensical values, due skewed deviances can arise non-linear models. pd.kl (default) calculates pD Kullback–Leibler divergence (Plummer 2008) . require running model additional iterations always produce sensical result. popt calculates pD using optimism adjustment allows calculation penalized expected deviance (Plummer 2008) parallel boolean value indicates whether JAGS run parallel (TRUE) (FALSE). TRUE number cores use automatically calculated. Functions involve updating model (e.g. devplot(), fitplot()) used models implemented parallel. priors named list parameter values (without indices) replacement prior distribution values given strings using distributions specified JAGS syntax (see Plummer (2017) ). n.iter number total iterations per chain (including burn ; default: 20000) n.chains number Markov chains (default: 3) n.burnin length burn , .e. number iterations discard beginning. Default n.iter/2``, , discarding first half simulations. n.burnin` 0, jags() run 100 iterations adaption. n.thin thinning rate. Must positive integer. Set n.thin > 1`` save memory computation time n.iteris large. Default ismax(1, floor(n.chains * (n.iter-n.burnin) / 1000))`` thin least 2000 simulations. model.file file path JAGS model (.jags file) can used overwrite JAGS model automatically written based specified options MBNMAtime. Useful adding model flexibility. jagsdata named list data objects used JAGS model. required users defining JAGS model using model.file. Format match standard models fitted MBNMAtime (see mbnma$model.arg$jagsdata) ... Arguments sent R2jags.","code":""},{"path":"/reference/mb.run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run MBNMA time-course models — mb.run","text":"object S3 class c(\"mbnma\", \"rjags\")`` containing parameter results model. Can summarized print()can check traceplots usingR2jags::traceplot()various functions packagemcmcplots`.#' errors JAGS model code object list consisting two elements - error message JAGS can help debugging model.arg, list arguments provided mb.run() includes jagscode, JAGS code model can help users identify source error.","code":""},{"path":"/reference/mb.run.html","id":"time-course-parameters","dir":"Reference","previous_headings":"","what":"Time-course parameters","title":"Run MBNMA time-course models — mb.run","text":"Nodes automatically monitored (present model) name time-course function named time-course parameters (e.g. emax). However, named beta.1, beta.2, beta.3 beta.4 parameters may alternative interpretation. Details interpretation model specification different parameters can shown using summary() method \"mbnma\" object generated mb.run(). Parameters modelled using relative effects pooling relative (e.g. pool.1=\"rel\") given parameter named parameter (e.g. emax) numbered d parameter (e.g. d.1) corresponds pooled relative effect given treatment compared network reference treatment time-course parameter. sd. followed named (e.g. emax, beta.1) -study SD (heterogeneity) relative effects, reported pooling time-course parameter relative (e.g. pool.1=\"rel\") method synthesis random (e.g. method.1=\"random). class effects modelled, parameters classes represented upper case name time-course parameter correspond . example class.effect=list(emax=\"random\"), relative class effects represented EMAX. SD class effect (e.g. sd.EMAX, sd.BETA.1) SD treatments within class time-course parameter correspond . Parameters modelled using absolute effects pooling absolute (e.g. pool.1=\"abs\") given parameter named parameter (e.g. emax) numbered beta parameter (e.g. beta.1) corresponds estimated absolute effect time-course parameter. absolute time-course parameter corresponding method common (e.g. method.1=\"common\") parameter corresponds single common parameter estimated across studies treatments. corresponding method random (e.g. method.1=\"random\") parameter mean effect around study-level absolute effects vary SD corresponding sd. followed named parameter (e.g. sd.emax, sd.beta.1) . model parameters rho correlation coefficient correlation time-points. interpretation differ depending covariance structure specified covar totresdev residual deviance model deviance deviance model","code":""},{"path":"/reference/mb.run.html","id":"time-course-function","dir":"Reference","previous_headings":"","what":"Time-course function","title":"Run MBNMA time-course models — mb.run","text":"Several general time-course functions 4 time-course parameters provided, user-defined time-course relationship can instead used. Details can found respective help files function. Available time-course functions : Log-linear: tloglin() Polynomial: tpoly() Integrated Two-Component Prediction (ITP): titp() Emax: temax() Fractional polynomial: tfpoly() Splines (various spline types can used): tspline() User-defined: tuser()","code":""},{"path":"/reference/mb.run.html","id":"correlation-between-observations","dir":"Reference","previous_headings":"","what":"Correlation between observations","title":"Run MBNMA time-course models — mb.run","text":"modelling correlation observations using rho, values rho must imply positive semidefinite covariance matrix.","code":""},{"path":"/reference/mb.run.html","id":"advanced-options","dir":"Reference","previous_headings":"","what":"Advanced options","title":"Run MBNMA time-course models — mb.run","text":"model.file jagsdata can used run edited JAGS model dataset. allows users considerably modelling flexibility possible using basic MBNMAtime syntax, though requires strong understanding JAGS MBNMA modelling framework. Treatment-specific priors, meta-regression bias-adjustment possible way, allows users make use subsequent functions MBNMAtime (plotting, prediction, ranking) whilst fitting complex models.","code":""},{"path":"/reference/mb.run.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Run MBNMA time-course models — mb.run","text":"Friedrich JO, Adhikari NKJ, Beyene J (2011). “Ratio means analyzing continuous outcomes meta-analysis performed well mean difference methods.” Journal Clinical Epidemiology, 64(5), 556-564. doi:10.1016/j.jclinepi.2010.09.016 . Jansen JP, Vieira MC, Cope S (2015). “Network meta-analysis longitudinal data using fractional polynomials.” Stat Med, 34(15), 2294-311. ISSN 1097-0258 (Electronic) 0277-6715 (Linking), doi:10.1002/sim.6492 , https://pubmed.ncbi.nlm.nih.gov/25877808/. Pedder H, Dias S, Bennetts M, Boucher M, Welton NJ (2019). “Modelling time-course relationships multiple treatments: Model-Based Network Meta-Analysis continuous summary outcomes.” Res Synth Methods, 10(2), 267-286. Plummer M (2008). “Penalized loss functions Bayesian model comparison.” Biostatistics, 9(3), 523-39. ISSN 1468-4357 (Electronic) 1465-4644 (Linking), https://pubmed.ncbi.nlm.nih.gov/18209015/. Plummer M (2017). JAGS user manual. https://people.stat.sc.edu/hansont/stat740/jags_user_manual.pdf. Spiegelhalter DJ, Best NG, Carlin BP, van der Linde (2002). “Bayesian measures model complexity fit.” J R Statistic Soc B, 64(4), 583-639.","code":""},{"path":"/reference/mb.run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run MBNMA time-course models — mb.run","text":"","code":"# \\donttest{ # Create mb.network object network <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Fit a linear time-course MBNMA with: # random relative treatment effects on the slope mb.run(network, fun=tpoly(degree=1, pool.1=\"rel\", method.1=\"random\")) #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 163 #>    Total graph size: 7701 #>  #> Initializing model #>  #> Inference for Bugs model at \"/tmp/RtmpklM6fB/file18c14bab798\", fit using jags, #>  3 chains, each with 20000 iterations (first 10000 discarded), n.thin = 10 #>  n.sims = 3000 iterations saved #>            mu.vect sd.vect     2.5%      25%      50%      75%    97.5%  Rhat #> d.1[1]       0.000   0.000    0.000    0.000    0.000    0.000    0.000 1.000 #> d.1[2]      -0.064   0.045   -0.153   -0.094   -0.063   -0.034    0.022 1.001 #> d.1[3]      -0.094   0.018   -0.131   -0.106   -0.094   -0.082   -0.059 1.001 #> d.1[4]      -0.095   0.045   -0.182   -0.124   -0.095   -0.064   -0.008 1.001 #> d.1[5]      -0.043   0.053   -0.149   -0.078   -0.043   -0.008    0.062 1.002 #> d.1[6]       0.002   0.069   -0.133   -0.045    0.003    0.049    0.134 1.001 #> d.1[7]      -0.148   0.035   -0.219   -0.170   -0.147   -0.124   -0.081 1.002 #> d.1[8]      -0.028   0.069   -0.167   -0.072   -0.026    0.017    0.105 1.001 #> d.1[9]      -0.291   0.050   -0.391   -0.323   -0.290   -0.257   -0.193 1.001 #> d.1[10]     -0.306   0.069   -0.445   -0.349   -0.307   -0.260   -0.171 1.001 #> d.1[11]     -0.075   0.038   -0.151   -0.099   -0.075   -0.050    0.000 1.001 #> d.1[12]     -0.070   0.038   -0.146   -0.095   -0.070   -0.045    0.004 1.001 #> d.1[13]     -0.084   0.045   -0.172   -0.113   -0.084   -0.054    0.005 1.001 #> d.1[14]     -0.082   0.061   -0.202   -0.121   -0.083   -0.039    0.040 1.001 #> d.1[15]     -0.128   0.025   -0.179   -0.144   -0.128   -0.111   -0.078 1.001 #> d.1[16]     -0.134   0.040   -0.212   -0.160   -0.135   -0.109   -0.056 1.001 #> d.1[17]      0.116   0.066   -0.010    0.071    0.114    0.159    0.248 1.001 #> d.1[18]     -0.128   0.047   -0.222   -0.159   -0.127   -0.098   -0.035 1.002 #> d.1[19]     -0.123   0.078   -0.272   -0.177   -0.123   -0.071    0.027 1.001 #> d.1[20]     -0.113   0.049   -0.210   -0.146   -0.112   -0.080   -0.019 1.001 #> d.1[21]     -0.431   0.074   -0.578   -0.480   -0.430   -0.382   -0.283 1.001 #> d.1[22]     -0.171   0.042   -0.253   -0.200   -0.171   -0.144   -0.088 1.001 #> d.1[23]     -0.032   0.041   -0.112   -0.061   -0.031   -0.005    0.050 1.001 #> d.1[24]     -0.040   0.042   -0.122   -0.067   -0.041   -0.013    0.042 1.001 #> d.1[25]     -0.068   0.042   -0.153   -0.094   -0.068   -0.040    0.014 1.001 #> d.1[26]     -0.085   0.063   -0.208   -0.128   -0.085   -0.043    0.037 1.001 #> d.1[27]     -0.068   0.066   -0.200   -0.108   -0.068   -0.025    0.064 1.001 #> d.1[28]     -0.091   0.066   -0.222   -0.137   -0.093   -0.047    0.041 1.001 #> d.1[29]     -0.076   0.065   -0.202   -0.121   -0.076   -0.032    0.054 1.001 #> rho          0.000   0.000    0.000    0.000    0.000    0.000    0.000 1.000 #> sd.beta.1    0.073   0.009    0.057    0.066    0.072    0.078    0.093 1.001 #> totresdev 9299.328  16.976 9267.663 9286.999 9298.788 9310.160 9332.912 1.002 #> deviance  8419.289  16.976 8387.624 8406.960 8418.748 8430.120 8452.873 1.002 #>           n.eff #> d.1[1]        1 #> d.1[2]     2800 #> d.1[3]     3000 #> d.1[4]     2100 #> d.1[5]     1600 #> d.1[6]     3000 #> d.1[7]     2000 #> d.1[8]     3000 #> d.1[9]     3000 #> d.1[10]    3000 #> d.1[11]    3000 #> d.1[12]    3000 #> d.1[13]    3000 #> d.1[14]    2200 #> d.1[15]    3000 #> d.1[16]    3000 #> d.1[17]    3000 #> d.1[18]    1300 #> d.1[19]    3000 #> d.1[20]    3000 #> d.1[21]    3000 #> d.1[22]    3000 #> d.1[23]    3000 #> d.1[24]    3000 #> d.1[25]    2900 #> d.1[26]    3000 #> d.1[27]    3000 #> d.1[28]    3000 #> d.1[29]    3000 #> rho           1 #> sd.beta.1  3000 #> totresdev  1900 #> deviance   1900 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> DIC info (using the rule, pD = var(deviance)/2) #> pD = 144.0 and DIC = 8562.8 #> DIC is an estimate of expected predictive error (lower deviance is better).  # Fit an emax time-course MBNMA with: # fixed relative treatment effects on emax # a common parameter estimated independently of treatment # a common Hill parameter estimated independently of treatment # a prior for the Hill parameter (normal with mean 0 and precision 0.1) # data reported as change from baseline result <- mb.run(network, fun=temax(pool.emax=\"rel\", method.emax=\"common\",                                     pool.et50=\"abs\", method.et50=\"common\",                                     pool.hill=\"abs\", method.hill=\"common\"),                  priors=list(hill=\"dunif(0.5, 2)\"),                  intercept=TRUE) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> 'hill' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 90 #>    Total graph size: 7722 #>  #> Initializing model #>    #### commented out to prevent errors from JAGS version in github actions build #### # Fit a log-linear MBNMA with: # random relative treatment effects on the rate # an autoregressive AR1 covariance structure # modelled as standardised mean differences # copdnet <- mb.network(copd) # result <- mb.run(copdnet, fun=tloglin(pool.rate=\"rel\", method.rate=\"random\"), #                covar=\"AR1\", rho=\"dunif(0,1)\", link=\"smd\")    ####### Examine MCMC diagnostics (using mcmcplots package) #######  # Traceplots # mcmcplots::traplot(result)  # Plots for assessing convergence # mcmcplots::mcmcplot(result, c(\"rate\", \"sd.rate\", \"rho\"))  ########## Output ###########  # Print R2jags output and summary print(result) #> Inference for Bugs model at \"/tmp/RtmpklM6fB/file18c16351916a\", fit using jags, #>  3 chains, each with 20000 iterations (first 10000 discarded), n.thin = 10 #>  n.sims = 3000 iterations saved #>           mu.vect sd.vect    2.5%     25%     50%     75%   97.5%  Rhat n.eff #> emax[1]     0.000   0.000   0.000   0.000   0.000   0.000   0.000 1.000     1 #> emax[2]    -0.639   0.110  -0.855  -0.714  -0.638  -0.567  -0.424 1.006   370 #> emax[3]    -0.930   0.047  -1.018  -0.963  -0.932  -0.900  -0.833 1.014   170 #> emax[4]    -1.036   0.105  -1.248  -1.107  -1.035  -0.965  -0.834 1.002  1200 #> emax[5]    -0.628   0.190  -1.002  -0.757  -0.624  -0.503  -0.255 1.001  3000 #> emax[6]    -0.117   0.146  -0.399  -0.214  -0.118  -0.017   0.167 1.001  3000 #> emax[7]    -1.228   0.074  -1.369  -1.280  -1.229  -1.177  -1.080 1.010   200 #> emax[8]    -0.115   0.142  -0.395  -0.210  -0.112  -0.019   0.159 1.001  3000 #> emax[9]    -1.892   0.114  -2.115  -1.971  -1.893  -1.818  -1.664 1.009   240 #> emax[10]   -1.894   0.164  -2.215  -2.005  -1.895  -1.784  -1.572 1.004   900 #> emax[11]   -0.875   0.063  -0.997  -0.915  -0.875  -0.831  -0.753 1.005   460 #> emax[12]   -0.858   0.065  -0.983  -0.902  -0.859  -0.813  -0.731 1.008   260 #> emax[13]   -1.060   0.078  -1.210  -1.112  -1.062  -1.007  -0.907 1.006   380 #> emax[14]   -0.988   0.129  -1.228  -1.076  -0.992  -0.902  -0.725 1.001  3000 #> emax[15]   -1.316   0.069  -1.448  -1.363  -1.317  -1.272  -1.176 1.018   120 #> emax[16]   -1.222   0.077  -1.369  -1.273  -1.223  -1.169  -1.068 1.011   190 #> emax[17]    0.358   0.140   0.093   0.264   0.355   0.451   0.646 1.001  3000 #> emax[18]   -0.925   0.089  -1.101  -0.985  -0.922  -0.866  -0.758 1.003   690 #> emax[19]   -1.288   0.235  -1.755  -1.453  -1.287  -1.134  -0.828 1.001  2100 #> emax[20]   -0.884   0.104  -1.090  -0.954  -0.885  -0.814  -0.678 1.006   380 #> emax[21]   -2.639   0.213  -3.065  -2.780  -2.640  -2.498  -2.226 1.006   350 #> emax[22]   -1.306   0.115  -1.536  -1.384  -1.305  -1.224  -1.082 1.008   260 #> emax[23]   -0.209   0.070  -0.346  -0.255  -0.208  -0.163  -0.074 1.002  1800 #> emax[24]   -0.328   0.071  -0.468  -0.376  -0.330  -0.281  -0.189 1.002  1600 #> emax[25]   -0.762   0.075  -0.915  -0.812  -0.760  -0.711  -0.619 1.002  1100 #> emax[26]   -0.826   0.099  -1.020  -0.892  -0.824  -0.758  -0.636 1.001  2300 #> emax[27]   -0.788   0.123  -1.029  -0.869  -0.788  -0.702  -0.549 1.005   470 #> emax[28]   -1.020   0.123  -1.268  -1.101  -1.020  -0.933  -0.786 1.004   620 #> emax[29]   -0.833   0.123  -1.077  -0.915  -0.832  -0.749  -0.599 1.003   890 #> et50        0.466   0.044   0.386   0.436   0.465   0.493   0.559 1.001  3000 #> hill        0.589   0.095   0.502   0.523   0.558   0.617   0.867 1.044    93 #> rho         0.000   0.000   0.000   0.000   0.000   0.000   0.000 1.000     1 #> totresdev 837.522  13.627 812.771 827.909 836.781 846.489 865.476 1.001  2700 #> deviance  -42.518  13.627 -67.269 -52.130 -43.258 -33.550 -14.563 1.001  2700 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> DIC info (using the rule, pD = var(deviance)/2) #> pD = 92.8 and DIC = 49.6 #> DIC is an estimate of expected predictive error (lower deviance is better). summary(result) #> ======================================== #> Time-course MBNMA #> ======================================== #>  #> Time-course function: emax #> Data modelled with intercept #>  #> emax parameter #> Pooling: relative effects #> Method: common treatment effects #>  #> |Treatment |Parameter |  Median|    2.5%|   97.5%| #> |:---------|:---------|-------:|-------:|-------:| #> |Pl_0      |emax[1]   |  0.0000|  0.0000|  0.0000| #> |Ce_100    |emax[2]   | -0.6377| -0.8547| -0.4237| #> |Ce_200    |emax[3]   | -0.9321| -1.0179| -0.8330| #> |Ce_400    |emax[4]   | -1.0346| -1.2478| -0.8342| #> |Du_90     |emax[5]   | -0.6237| -1.0022| -0.2555| #> |Et_10     |emax[6]   | -0.1180| -0.3991|  0.1665| #> |Et_30     |emax[7]   | -1.2293| -1.3690| -1.0802| #> |Et_5      |emax[8]   | -0.1116| -0.3953|  0.1591| #> |Et_60     |emax[9]   | -1.8934| -2.1145| -1.6637| #> |Et_90     |emax[10]  | -1.8947| -2.2150| -1.5722| #> |Lu_100    |emax[11]  | -0.8750| -0.9970| -0.7527| #> |Lu_200    |emax[12]  | -0.8588| -0.9825| -0.7310| #> |Lu_400    |emax[13]  | -1.0624| -1.2103| -0.9075| #> |Lu_NA     |emax[14]  | -0.9915| -1.2280| -0.7253| #> |Na_1000   |emax[15]  | -1.3171| -1.4477| -1.1760| #> |Na_1500   |emax[16]  | -1.2230| -1.3687| -1.0678| #> |Na_250    |emax[17]  |  0.3551|  0.0929|  0.6460| #> |Na_750    |emax[18]  | -0.9216| -1.1009| -0.7579| #> |Ox_44     |emax[19]  | -1.2870| -1.7555| -0.8276| #> |Ro_12     |emax[20]  | -0.8848| -1.0903| -0.6783| #> |Ro_125    |emax[21]  | -2.6396| -3.0648| -2.2256| #> |Ro_25     |emax[22]  | -1.3051| -1.5364| -1.0818| #> |Tr_100    |emax[23]  | -0.2084| -0.3463| -0.0743| #> |Tr_200    |emax[24]  | -0.3298| -0.4675| -0.1890| #> |Tr_300    |emax[25]  | -0.7604| -0.9148| -0.6194| #> |Tr_400    |emax[26]  | -0.8241| -1.0198| -0.6355| #> |Va_10     |emax[27]  | -0.7878| -1.0294| -0.5486| #> |Va_20     |emax[28]  | -1.0197| -1.2680| -0.7855| #> |Va_5      |emax[29]  | -0.8322| -1.0770| -0.5987| #>  #>  #> et50 parameter #> Pooling: absolute effects #> Method: common treatment effects #>  #> |Treatment |Parameter | Median|   2.5%|  97.5%| #> |:---------|:---------|------:|------:|------:| #> |Pl_0      |et50      | 0.4648| 0.3857| 0.5586| #> |Ce_100    |et50      | 0.4648| 0.3857| 0.5586| #> |Ce_200    |et50      | 0.4648| 0.3857| 0.5586| #> |Ce_400    |et50      | 0.4648| 0.3857| 0.5586| #> |Du_90     |et50      | 0.4648| 0.3857| 0.5586| #> |Et_10     |et50      | 0.4648| 0.3857| 0.5586| #> |Et_30     |et50      | 0.4648| 0.3857| 0.5586| #> |Et_5      |et50      | 0.4648| 0.3857| 0.5586| #> |Et_60     |et50      | 0.4648| 0.3857| 0.5586| #> |Et_90     |et50      | 0.4648| 0.3857| 0.5586| #> |Lu_100    |et50      | 0.4648| 0.3857| 0.5586| #> |Lu_200    |et50      | 0.4648| 0.3857| 0.5586| #> |Lu_400    |et50      | 0.4648| 0.3857| 0.5586| #> |Lu_NA     |et50      | 0.4648| 0.3857| 0.5586| #> |Na_1000   |et50      | 0.4648| 0.3857| 0.5586| #> |Na_1500   |et50      | 0.4648| 0.3857| 0.5586| #> |Na_250    |et50      | 0.4648| 0.3857| 0.5586| #> |Na_750    |et50      | 0.4648| 0.3857| 0.5586| #> |Ox_44     |et50      | 0.4648| 0.3857| 0.5586| #> |Ro_12     |et50      | 0.4648| 0.3857| 0.5586| #> |Ro_125    |et50      | 0.4648| 0.3857| 0.5586| #> |Ro_25     |et50      | 0.4648| 0.3857| 0.5586| #> |Tr_100    |et50      | 0.4648| 0.3857| 0.5586| #> |Tr_200    |et50      | 0.4648| 0.3857| 0.5586| #> |Tr_300    |et50      | 0.4648| 0.3857| 0.5586| #> |Tr_400    |et50      | 0.4648| 0.3857| 0.5586| #> |Va_10     |et50      | 0.4648| 0.3857| 0.5586| #> |Va_20     |et50      | 0.4648| 0.3857| 0.5586| #> |Va_5      |et50      | 0.4648| 0.3857| 0.5586| #>  #>  #> hill parameter #> Pooling: absolute effects #> Method: common treatment effects #>  #> |Treatment |Parameter | Median|   2.5%| 97.5%| #> |:---------|:---------|------:|------:|-----:| #> |Pl_0      |hill      | 0.5585| 0.5018| 0.867| #> |Ce_100    |hill      | 0.5585| 0.5018| 0.867| #> |Ce_200    |hill      | 0.5585| 0.5018| 0.867| #> |Ce_400    |hill      | 0.5585| 0.5018| 0.867| #> |Du_90     |hill      | 0.5585| 0.5018| 0.867| #> |Et_10     |hill      | 0.5585| 0.5018| 0.867| #> |Et_30     |hill      | 0.5585| 0.5018| 0.867| #> |Et_5      |hill      | 0.5585| 0.5018| 0.867| #> |Et_60     |hill      | 0.5585| 0.5018| 0.867| #> |Et_90     |hill      | 0.5585| 0.5018| 0.867| #> |Lu_100    |hill      | 0.5585| 0.5018| 0.867| #> |Lu_200    |hill      | 0.5585| 0.5018| 0.867| #> |Lu_400    |hill      | 0.5585| 0.5018| 0.867| #> |Lu_NA     |hill      | 0.5585| 0.5018| 0.867| #> |Na_1000   |hill      | 0.5585| 0.5018| 0.867| #> |Na_1500   |hill      | 0.5585| 0.5018| 0.867| #> |Na_250    |hill      | 0.5585| 0.5018| 0.867| #> |Na_750    |hill      | 0.5585| 0.5018| 0.867| #> |Ox_44     |hill      | 0.5585| 0.5018| 0.867| #> |Ro_12     |hill      | 0.5585| 0.5018| 0.867| #> |Ro_125    |hill      | 0.5585| 0.5018| 0.867| #> |Ro_25     |hill      | 0.5585| 0.5018| 0.867| #> |Tr_100    |hill      | 0.5585| 0.5018| 0.867| #> |Tr_200    |hill      | 0.5585| 0.5018| 0.867| #> |Tr_300    |hill      | 0.5585| 0.5018| 0.867| #> |Tr_400    |hill      | 0.5585| 0.5018| 0.867| #> |Va_10     |hill      | 0.5585| 0.5018| 0.867| #> |Va_20     |hill      | 0.5585| 0.5018| 0.867| #> |Va_5      |hill      | 0.5585| 0.5018| 0.867| #>  #>  #>  #> Correlation between time points #> Covariance structure: varadj  #> Rho assigned a numeric value: 0 #>  #> #### Model Fit Statistics #### #>  #> Effective number of parameters: #> pD (pV) calculated using the rule, pD = var(deviance)/2 = 93 #> Deviance = -43 #> Residual deviance = 837 #> Deviance Information Criterion (DIC) = 50  #>  #> The following parameters have Rhat values > 1.02 which could be due to convergence issues: #> hill  # Plot forest plot of results plot(result)    ###### Additional model arguments ######  # Use gout dataset goutnet <- mb.network(goutSUA_CFBcomb) #> Reference treatment is `Plac` #> Studies reporting change from baseline automatically identified from the data  # Define a user-defined time-course relationship for use in mb.run timecourse <- ~ exp(beta.1 * time) + (time^beta.2)  # Run model with: # user-defined time-course function # random relative effects on beta.1 # default common effects on beta.2 # default relative pooling on beta.1 and beta.2 # common class effect on beta.2 mb.run(goutnet, fun=tuser(fun=timecourse, method.1=\"random\"),        class.effect=list(beta.1=\"common\")) #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 224 #>    Unobserved stochastic nodes: 121 #>    Total graph size: 4851 #>  #> Initializing model #>  #> Inference for Bugs model at \"/tmp/RtmpklM6fB/file18c13eb74bfe\", fit using jags, #>  3 chains, each with 20000 iterations (first 10000 discarded), n.thin = 10 #>  n.sims = 3000 iterations saved #>               mu.vect sd.vect        2.5%         25%         50%         75% #> D.1[1]          0.000   0.000       0.000       0.000       0.000       0.000 #> D.1[2]         -0.589  19.152     -35.489     -14.235      -0.685      11.558 #> D.1[3]        -13.804  25.433     -59.721     -30.559     -14.364      -2.445 #> D.1[4]        -14.929  24.288     -61.568     -32.614     -17.320       4.189 #> D.1[5]         -6.898  29.403     -73.386     -23.499      -5.437      10.922 #> D.1[6]        -10.246  18.523     -44.503     -22.064     -11.111      -2.268 #> D.1[7]        -17.077  18.716     -62.856     -25.923     -14.951      -6.571 #> d.1[1]          0.000   0.000       0.000       0.000       0.000       0.000 #> d.1[2]         -0.589  19.152     -35.489     -14.235      -0.685      11.558 #> d.1[3]         -0.589  19.152     -35.489     -14.235      -0.685      11.558 #> d.1[4]         -0.589  19.152     -35.489     -14.235      -0.685      11.558 #> d.1[5]         -0.589  19.152     -35.489     -14.235      -0.685      11.558 #> d.1[6]        -13.804  25.433     -59.721     -30.559     -14.364      -2.445 #> d.1[7]        -14.929  24.288     -61.568     -32.614     -17.320       4.189 #> d.1[8]        -14.929  24.288     -61.568     -32.614     -17.320       4.189 #> d.1[9]        -14.929  24.288     -61.568     -32.614     -17.320       4.189 #> d.1[10]       -14.929  24.288     -61.568     -32.614     -17.320       4.189 #> d.1[11]        -6.898  29.403     -73.386     -23.499      -5.437      10.922 #> d.1[12]       -10.246  18.523     -44.503     -22.064     -11.111      -2.268 #> d.1[13]       -10.246  18.523     -44.503     -22.064     -11.111      -2.268 #> d.1[14]       -10.246  18.523     -44.503     -22.064     -11.111      -2.268 #> d.1[15]       -10.246  18.523     -44.503     -22.064     -11.111      -2.268 #> d.1[16]       -17.077  18.716     -62.856     -25.923     -14.951      -6.571 #> d.1[17]       -17.077  18.716     -62.856     -25.923     -14.951      -6.571 #> d.1[18]       -17.077  18.716     -62.856     -25.923     -14.951      -6.571 #> d.1[19]       -17.077  18.716     -62.856     -25.923     -14.951      -6.571 #> d.2[1]          0.000   0.000       0.000       0.000       0.000       0.000 #> d.2[2]         -3.493  30.325     -63.516     -22.927      -3.311      16.756 #> d.2[3]          3.328  29.428     -54.156     -15.686       2.383      22.637 #> d.2[4]        -16.180  10.326     -42.470     -21.239     -13.674      -8.372 #> d.2[5]          2.763  30.609     -55.764     -17.821       2.562      24.142 #> d.2[6]        -13.382  27.547     -65.620     -30.547     -14.622       2.361 #> d.2[7]         -1.660  30.601     -61.746     -22.638      -0.909      19.243 #> d.2[8]         -9.246  27.657     -64.520     -27.296      -8.403       9.886 #> d.2[9]         -2.503  30.356     -62.270     -23.055      -1.708      17.741 #> d.2[10]        -6.094  29.042     -63.391     -25.146      -4.945      13.361 #> d.2[11]       -18.041  25.796     -71.143     -34.360     -17.380      -1.459 #> d.2[12]       -11.413  26.620     -64.655     -28.567     -10.535       5.896 #> d.2[13]       -19.293  25.764     -68.203     -35.101     -20.177      -7.114 #> d.2[14]       -15.422  22.075     -61.727     -29.567     -14.479      -0.119 #> d.2[15]       -16.220  24.845     -66.910     -32.511     -15.048       0.334 #> d.2[16]         4.648  29.307     -52.453     -14.976       4.147      24.463 #> d.2[17]       -19.135  24.535     -69.276     -34.692     -18.247      -5.501 #> d.2[18]       -17.678  22.869     -63.514     -32.108     -16.824      -5.159 #> d.2[19]       -18.245  26.020     -70.162     -33.734     -18.026      -4.799 #> rho             0.000   0.000       0.000       0.000       0.000       0.000 #> sd.beta.1       3.248   2.539       0.164       1.292       2.610       4.609 #> totresdev 2013068.602   8.084 2013057.700 2013063.420 2013066.017 2013071.406 #> deviance  2012374.414   8.084 2012363.512 2012369.231 2012371.828 2012377.217 #>                 97.5%  Rhat n.eff #> D.1[1]          0.000 1.000     1 #> D.1[2]         38.104 1.215    15 #> D.1[3]         40.903 1.032   180 #> D.1[4]         31.918 1.301    11 #> D.1[5]         51.152 1.017  3000 #> D.1[6]         31.006 1.076    31 #> D.1[7]         21.848 1.055    74 #> d.1[1]          0.000 1.000     1 #> d.1[2]         38.104 1.215    15 #> d.1[3]         38.104 1.215    15 #> d.1[4]         38.104 1.215    15 #> d.1[5]         38.104 1.215    15 #> d.1[6]         40.903 1.032   180 #> d.1[7]         31.918 1.301    11 #> d.1[8]         31.918 1.301    11 #> d.1[9]         31.918 1.301    11 #> d.1[10]        31.918 1.301    11 #> d.1[11]        51.152 1.017  3000 #> d.1[12]        31.006 1.076    31 #> d.1[13]        31.006 1.076    31 #> d.1[14]        31.006 1.076    31 #> d.1[15]        31.006 1.076    31 #> d.1[16]        21.848 1.055    74 #> d.1[17]        21.848 1.055    74 #> d.1[18]        21.848 1.055    74 #> d.1[19]        21.848 1.055    74 #> d.2[1]          0.000 1.000     1 #> d.2[2]         56.452 1.001  2200 #> d.2[3]         63.160 1.001  3000 #> d.2[4]         -4.254 1.002  1200 #> d.2[5]         62.593 1.001  2600 #> d.2[6]         45.553 1.032    89 #> d.2[7]         57.724 1.001  2600 #> d.2[8]         41.802 1.001  3000 #> d.2[9]         55.368 1.002  1300 #> d.2[10]        49.005 1.001  3000 #> d.2[11]        32.482 1.001  2000 #> d.2[12]        40.904 1.001  2600 #> d.2[13]        37.689 1.010   260 #> d.2[14]        25.298 1.002  1200 #> d.2[15]        31.741 1.002  1900 #> d.2[16]        63.119 1.001  3000 #> d.2[17]        30.159 1.089    30 #> d.2[18]        28.640 1.108    25 #> d.2[19]        34.938 1.127    22 #> rho             0.000 1.000     1 #> sd.beta.1       9.343 1.018   120 #> totresdev 2013088.309 1.000     1 #> deviance  2012394.120 1.000     1 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> DIC info (using the rule, pD = var(deviance)/2) #> pD = 32.3 and DIC = 2012404.1 #> DIC is an estimate of expected predictive error (lower deviance is better).  # Fit a log-linear MBNMA # with variance adjustment for correlation between time-points result <- mb.run(network, fun=tloglin(),                  rho=\"dunif(0,1)\", covar=\"varadj\") #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 89 #>    Total graph size: 7303 #>  #> Initializing model #>  # }"},{"path":"/reference/mb.update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update MBNMA to obtain deviance contributions or fitted values — mb.update","title":"Update MBNMA to obtain deviance contributions or fitted values — mb.update","text":"Update MBNMA obtain deviance contributions fitted values","code":""},{"path":"/reference/mb.update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update MBNMA to obtain deviance contributions or fitted values — mb.update","text":"","code":"mb.update(   mbnma,   param = \"theta\",   n.iter = mbnma$BUGSoutput$n.iter,   n.thin = mbnma$BUGSoutput$n.thin )"},{"path":"/reference/mb.update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update MBNMA to obtain deviance contributions or fitted values — mb.update","text":"mbnma S3 object class \"mbnma\" generated running time-course MBNMA model param character object represents parameter within model monitor updating. Can currently used monitoring fitted values deviance contributions can take either \"dev\" (deviance contributions), \"resdev\" (residual deviance contributions) \"theta\" (fitted values). n.iter number iterations update model whilst monitoring additional parameters (necessary). Must positive integer. Default value used mbnma. n.thin thinning rate. Must positive integer. Default value used mbnma.","code":""},{"path":"/reference/mb.update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update MBNMA to obtain deviance contributions or fitted values — mb.update","text":"data frame containing posterior means specified param observation, arm study.","code":""},{"path":"/reference/mb.update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update MBNMA to obtain deviance contributions or fitted values — mb.update","text":"","code":"# \\donttest{ # Using the alogliptin dataset network <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Run Emax model emax <- mb.run(network, fun=temax()) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 233 #>    Unobserved stochastic nodes: 38 #>    Total graph size: 4166 #>  #> Initializing model #>   # Update model for 500 iterations to monitor fitted values mb.update(emax, param=\"theta\", n.iter=500) #>     study arm fup         mean #> 1       1   1   1 -0.054656905 #> 2       2   1   1 -0.035261689 #> 3       3   1   1 -0.472913369 #> 4       4   1   1 -0.004757109 #> 5       5   1   1 -0.086500741 #> 6       6   1   1 -0.032709544 #> 7       7   1   1 -0.103360357 #> 8       8   1   1 -0.009435377 #> 9       9   1   1 -0.099128417 #> 10     10   1   1  0.054119427 #> 11     11   1   1 -0.045736200 #> 12     12   1   1  0.038754814 #> 13     13   1   1 -0.761762294 #> 14     14   1   1 -0.723825470 #> 15      1   2   1 -0.221575468 #> 16      2   2   1 -0.156075453 #> 17      3   2   1 -0.673035538 #> 18      4   2   1 -0.364191995 #> 19      5   2   1 -0.416515004 #> 20      6   2   1 -0.351903031 #> 21      7   2   1 -0.506554126 #> 22      8   2   1 -0.385717385 #> 23      9   2   1 -0.258111310 #> 24     10   2   1 -0.187890969 #> 25     11   2   1 -0.250753317 #> 26     12   2   1 -0.168329228 #> 27     13   2   1 -0.821501783 #> 28     14   2   1 -0.789014970 #> 29      1   3   1 -0.260196479 #> 30      2   3   1 -0.212684937 #> 31      3   3   1 -0.758303978 #> 32      4   3   1 -0.394218405 #> 33      5   3   1 -0.444686827 #> 34      6   3   1 -0.378545228 #> 35      7   3   1 -0.541646463 #> 36      8   3   1 -0.417267603 #> 37      9   3   1 -0.272109740 #> 38     10   3   1 -0.207757303 #> 39     11   3   1 -0.268533014 #> 40     12   3   1 -0.185299186 #> 43      1   4   1 -0.276733642 #> 44      2   4   1 -0.227749958 #> 45      3   4   1 -0.853634818 #> 57      1   5   1 -0.304257411 #> 58      2   5   1 -0.225285773 #> 71      1   6   1 -0.293613346 #> 85      1   1   2 -0.097759129 #> 86      2   1   2 -0.057620839 #> 87      3   1   2 -0.476481422 #> 88      4   1   2 -0.006974079 #> 89      5   1   2 -0.121825925 #> 90      6   1   2 -0.046792727 #> 91      7   1   2 -0.135906555 #> 92      8   1   2 -0.012970951 #> 93      9   1   2 -0.164379729 #> 94     10   1   2  0.082548534 #> 95     11   1   2 -0.072416999 #> 96     12   1   2  0.061276471 #> 97     13   1   2 -0.799575955 #> 98     14   1   2 -0.739380017 #> 99      1   2   2 -0.364558104 #> 100     2   2   2 -0.267545766 #> 101     3   2   2 -0.632272496 #> 102     4   2   2 -0.508640940 #> 103     5   2   2 -0.594516301 #> 104     6   2   2 -0.508148858 #> 105     7   2   2 -0.679164193 #> 106     8   2   2 -0.531247183 #> 107     9   2   2 -0.431489511 #> 108    10   2   2 -0.292219723 #> 109    11   2   2 -0.401464902 #> 110    12   2   2 -0.270249233 #> 111    13   2   2 -0.860976981 #> 112    14   2   2 -0.804497045 #> 113     1   3   2 -0.416308369 #> 114     2   3   2 -0.350077127 #> 115     3   3   2 -0.711271762 #> 116     4   3   2 -0.549650476 #> 117     5   3   2 -0.633777110 #> 118     6   3   2 -0.545934773 #> 119     7   3   2 -0.724702934 #> 120     8   3   2 -0.573702425 #> 121     9   3   2 -0.454525596 #> 122    10   3   2 -0.322652719 #> 123    11   3   2 -0.429360889 #> 124    12   3   2 -0.297157445 #> 127     1   4   2 -0.441667297 #> 128     2   4   2 -0.374539582 #> 129     3   4   2 -0.846281984 #> 141     1   5   2 -0.493982641 #> 142     2   5   2 -0.383045888 #> 155     1   6   2 -0.528371001 #> 170     2   1   3 -0.084424136 #> 171     3   1   3 -0.478668531 #> 172     4   1   3 -0.008235500 #> 173     5   1   3 -0.141093464 #> 174     6   1   3 -0.054657888 #> 175     7   1   3 -0.151955276 #> 176     8   1   3 -0.014825669 #> 177     9   1   3 -0.245114245 #> 178    10   1   3  0.112049252 #> 179    11   1   3 -0.102313885 #> 180    12   1   3  0.086430990 #> 181    13   1   3 -0.820179676 #> 182    14   1   3 -0.747507266 #> 184     2   2   3 -0.416390938 #> 185     3   2   3 -0.610451022 #> 186     4   2   3 -0.586488850 #> 187     5   2   3 -0.693515156 #> 188     6   2   3 -0.596639496 #> 189     7   2   3 -0.766580253 #> 190     8   2   3 -0.607883439 #> 191     9   2   3 -0.649851505 #> 192    10   2   3 -0.404799096 #> 193    11   2   3 -0.574190710 #> 194    12   2   3 -0.387787624 #> 195    13   2   3 -0.882446144 #> 196    14   2   3 -0.812590711 #> 198     2   3   3 -0.517335343 #> 199     3   3   3 -0.686145668 #> 200     4   3   3 -0.633218624 #> 201     5   3   3 -0.738722734 #> 202     6   3   3 -0.640550345 #> 203     7   3   3 -0.817147566 #> 204     8   3   3 -0.655875806 #> 205     9   3   3 -0.683867834 #> 206    10   3   3 -0.446256428 #> 207    11   3   3 -0.613196083 #> 208    12   3   3 -0.425843006 #> 212     2   4   3 -0.552885063 #> 213     3   4   3 -0.842395234 #> 226     2   5   3 -0.589710002 #> 254     2   1   4 -0.099948244 #> 255     3   1   4 -0.480146585 #> 256     4   1   4 -0.009047501 #> 257     5   1   4 -0.153236782 #> 258     6   1   4 -0.059682907 #> 259     7   1   4 -0.161526926 #> 260     8   1   4 -0.015968530 #> 261     9   1   4 -0.293155887 #> 262    10   1   4  0.127244965 #> 263    11   1   4 -0.118679933 #> 264    12   1   4  0.100161915 #> 265    13   1   4 -0.833151113 #> 266    14   1   4 -0.752503063 #> 268     2   2   4 -0.511356120 #> 269     3   2   4 -0.596845207 #> 270     4   2   4 -0.635224980 #> 271     5   2   4 -0.756600566 #> 272     6   2   4 -0.653637067 #> 273     7   2   4 -0.819441997 #> 274     8   2   4 -0.655216156 #> 275     9   2   4 -0.781819254 #> 276    10   2   4 -0.464571132 #> 277    11   2   4 -0.670456487 #> 278    12   2   4 -0.453648758 #> 279    13   2   4 -0.895947373 #> 280    14   2   4 -0.817566804 #> 282     2   3   4 -0.615477857 #> 283     3   3   4 -0.670497493 #> 284     4   3   4 -0.685467882 #> 285     5   3   4 -0.805519263 #> 286     6   3   4 -0.701421539 #> 287     7   3   4 -0.872969287 #> 288     8   3   4 -0.706559735 #> 289     9   3   4 -0.822260570 #> 290    10   3   4 -0.511720606 #> 291    11   3   4 -0.715442862 #> 292    12   3   4 -0.497802933 #> 296     2   4   4 -0.657353023 #> 297     3   4   4 -0.840012343 #> 310     2   5   4 -0.719222518 #> 339     3   1   5 -0.481212357 #> 340     4   1   5 -0.009613495 #> 341     5   1   5 -0.161593955 #> 342     6   1   5 -0.063172151 #> 343     7   1   5 -0.167887169 #> 344     8   1   5 -0.017529306 #> 349    13   1   5 -0.842070175 #> 350    14   1   5 -0.755885240 #> 353     3   2   5 -0.587547142 #> 354     4   2   5 -0.668621687 #> 355     5   2   5 -0.800327275 #> 356     6   2   5 -0.693426305 #> 357     7   2   5 -0.854868666 #> 358     8   2   5 -0.720000983 #> 363    13   2   5 -0.905223790 #> 364    14   2   5 -0.820935920 #> 367     3   3   5 -0.659811674 #> 368     4   3   5 -0.721242492 #> 369     5   3   5 -0.851783460 #> 370     6   3   5 -0.743881608 #> 371     7   3   5 -0.910346678 #> 372     8   3   5 -0.775848234 #> 381     3   4   5 -0.838409555 #> 423     3   1   6 -0.482017257 #> 424     4   1   6 -0.010200257 #> 425     5   1   6 -0.170172093 #> 426     6   1   6 -0.066780183 #> 427     7   1   6 -0.174232442 #> 433    13   1   6 -0.848579904 #> 434    14   1   6 -0.758326997 #> 437     3   2   6 -0.580789517 #> 438     4   2   6 -0.702780834 #> 439     5   2   6 -0.845473569 #> 440     6   2   6 -0.734752601 #> 441     7   2   6 -0.890451741 #> 447    13   2   6 -0.911990719 #> 448    14   2   6 -0.823368345 #> 451     3   3   6 -0.652049516 #> 452     4   3   6 -0.757809470 #> 453     5   3   6 -0.899520287 #> 454     6   3   6 -0.787952848 #> 455     7   3   6 -0.947863107 #> 465     3   4   6 -0.837260836 #> 507     3   1   7 -0.482646632 #> 517    13   1   7 -0.853540638 #> 518    14   1   7 -0.760172734 #> 521     3   2   7 -0.575655876 #> 531    13   2   7 -0.917145375 #> 532    14   2   7 -0.825207064 #> 535     3   3   7 -0.646155028 #> 549     3   4   7 -0.836398651 #> 591     3   1   8 -0.483152258 #> 601    13   1   8 -0.857446582 #> 602    14   1   8 -0.761616961 #> 605     3   2   8 -0.571623405 #> 615    13   2   8 -0.921202734 #> 616    14   2   8 -0.826645815 #> 619     3   3   8 -0.641526290 #> 633     3   4   8 -0.835728433 #> 685    13   1   9 -0.860601882 #> 699    13   2   9 -0.924479522  # Update model for 500 iterations to monitor residual deviance contributions mb.update(emax, param=\"resdev\", n.iter=500) #>     study arm fup        mean #> 1       1   1   1  0.97855859 #> 2       2   1   1  2.94991443 #> 3       3   1   1  1.29411918 #> 4       4   1   1  4.17193163 #> 5       5   1   1  1.81302893 #> 6       6   1   1  2.36407983 #> 7       7   1   1 12.45165480 #> 8       8   1   1 16.80050470 #> 9       9   1   1 11.29199960 #> 10     10   1   1  0.94140591 #> 11     11   1   1  3.12098488 #> 12     12   1   1  1.42520419 #> 13     13   1   1  2.73905853 #> 14     14   1   1  2.35268277 #> 15      1   2   1  1.22513279 #> 16      2   2   1  0.24680870 #> 17      3   2   1  0.56284646 #> 18      4   2   1  0.33111077 #> 19      5   2   1  0.59522792 #> 20      6   2   1  0.36339809 #> 21      7   2   1  0.97429081 #> 22      8   2   1  0.59318703 #> 23      9   2   1  7.53261648 #> 24     10   2   1  8.23175659 #> 25     11   2   1 12.85301701 #> 26     12   2   1  3.62179151 #> 27     13   2   1  1.06376817 #> 28     14   2   1  3.37763657 #> 29      1   3   1  0.99932749 #> 30      2   3   1  4.05461283 #> 31      3   3   1  0.47222940 #> 32      4   3   1  2.86160792 #> 33      5   3   1  0.39960570 #> 34      6   3   1  0.88851252 #> 35      7   3   1  1.10974225 #> 36      8   3   1  2.55804550 #> 37      9   3   1 13.30878061 #> 38     10   3   1 15.21030194 #> 39     11   3   1  9.05353065 #> 40     12   3   1 13.32211758 #> 43      1   4   1  0.96529357 #> 44      2   4   1 10.26217816 #> 45      3   4   1  0.51564509 #> 57      1   5   1  0.27098047 #> 58      2   5   1 13.62666220 #> 71      1   6   1  0.39501220 #> 85      1   1   2  1.04396390 #> 86      2   1   2  1.76021270 #> 87      3   1   2  1.48170392 #> 88      4   1   2  3.00017313 #> 89      5   1   2  1.05787691 #> 90      6   1   2  7.87961310 #> 91      7   1   2  5.02389212 #> 92      8   1   2  8.83442426 #> 93      9   1   2  5.15809021 #> 94     10   1   2  0.31670338 #> 95     11   1   2  2.47121049 #> 96     12   1   2  1.15235615 #> 97     13   1   2  2.58556435 #> 98     14   1   2  4.00497321 #> 99      1   2   2  2.16167538 #> 100     2   2   2  7.06963020 #> 101     3   2   2  3.71547777 #> 102     4   2   2  0.31616126 #> 103     5   2   2  0.14312315 #> 104     6   2   2  4.21829528 #> 105     7   2   2  1.93150839 #> 106     8   2   2  1.07295989 #> 107     9   2   2  3.02695302 #> 108    10   2   2  0.75548128 #> 109    11   2   2  2.20253139 #> 110    12   2   2  0.60462547 #> 111    13   2   2  4.10777046 #> 112    14   2   2  3.59244319 #> 113     1   3   2  1.18260887 #> 114     2   3   2  0.96031209 #> 115     3   3   2  0.91608747 #> 116     4   3   2  3.43611186 #> 117     5   3   2  5.47531306 #> 118     6   3   2  1.29642614 #> 119     7   3   2  3.56083085 #> 120     8   3   2  3.76256740 #> 121     9   3   2  0.20540020 #> 122    10   3   2  1.38860245 #> 123    11   3   2  0.15278621 #> 124    12   3   2  0.38169178 #> 127     1   4   2  1.18600206 #> 128     2   4   2  0.71511650 #> 129     3   4   2  0.99939600 #> 141     1   5   2  0.40639153 #> 142     2   5   2  0.53244451 #> 155     1   6   2  0.74374531 #> 170     2   1   3  2.73368430 #> 171     3   1   3  1.33872708 #> 172     4   1   3  2.44423814 #> 173     5   1   3  1.84552560 #> 174     6   1   3  2.48832504 #> 175     7   1   3  2.74979268 #> 176     8   1   3  5.40394460 #> 177     9   1   3  3.51315874 #> 178    10   1   3  1.86579243 #> 179    11   1   3  4.31706226 #> 180    12   1   3  1.05621703 #> 181    13   1   3  1.77715700 #> 182    14   1   3  6.65565156 #> 184     2   2   3  2.98418355 #> 185     3   2   3  1.45064299 #> 186     4   2   3  0.16565645 #> 187     5   2   3  0.10781789 #> 188     6   2   3  1.92161700 #> 189     7   2   3  1.09658372 #> 190     8   2   3  0.43365544 #> 191     9   2   3 10.79636874 #> 192    10   2   3  5.92741003 #> 193    11   2   3 11.39843726 #> 194    12   2   3  4.13546523 #> 195    13   2   3  1.51807574 #> 196    14   2   3  5.66425642 #> 198     2   3   3  3.18054519 #> 199     3   3   3  0.10326116 #> 200     4   3   3  0.31584580 #> 201     5   3   3  2.99602912 #> 202     6   3   3  0.25992082 #> 203     7   3   3  0.07867833 #> 204     8   3   3  0.60899752 #> 205     9   3   3 11.25056065 #> 206    10   3   3  8.52613611 #> 207    11   3   3  9.53224905 #> 208    12   3   3 10.68792340 #> 212     2   4   3  4.92307332 #> 213     3   4   3  0.45530969 #> 226     2   5   3  5.61086745 #> 254     2   1   4  9.76385495 #> 255     3   1   4  0.11677104 #> 256     4   1   4  1.79945049 #> 257     5   1   4  2.14479266 #> 258     6   1   4  1.00425867 #> 259     7   1   4  0.70887279 #> 260     8   1   4  4.19467250 #> 261     9   1   4  4.12738754 #> 262    10   1   4 12.52319004 #> 263    11   1   4  9.23513447 #> 264    12   1   4  3.03590603 #> 265    13   1   4  0.79820193 #> 266    14   1   4  3.12700738 #> 268     2   2   4  0.06523392 #> 269     3   2   4  0.10407108 #> 270     4   2   4  0.69108292 #> 271     5   2   4  1.19070758 #> 272     6   2   4  0.09756720 #> 273     7   2   4  0.13564853 #> 274     8   2   4  6.35922136 #> 275     9   2   4  9.46945462 #> 276    10   2   4  6.23319528 #> 277    11   2   4 20.89889589 #> 278    12   2   4  2.28471021 #> 279    13   2   4  0.07218179 #> 280    14   2   4  3.18881139 #> 282     2   3   4  1.86967981 #> 283     3   3   4  0.10343949 #> 284     4   3   4  0.45159177 #> 285     5   3   4  0.51124070 #> 286     6   3   4  1.57200776 #> 287     7   3   4  2.31265913 #> 288     8   3   4  0.94019036 #> 289     9   3   4  9.08044940 #> 290    10   3   4  7.38195926 #> 291    11   3   4 12.80605365 #> 292    12   3   4  8.17747268 #> 296     2   4   4  2.75087459 #> 297     3   4   4  0.17749303 #> 310     2   5   4  3.66389085 #> 339     3   1   5  1.14506398 #> 340     4   1   5  1.59951232 #> 341     5   1   5  2.10819014 #> 342     6   1   5  0.67596022 #> 343     7   1   5  0.10478184 #> 344     8   1   5  0.20383616 #> 349    13   1   5  0.07913900 #> 350    14   1   5  0.29203181 #> 353     3   2   5  0.22725573 #> 354     4   2   5  2.14738099 #> 355     5   2   5  4.83036783 #> 356     6   2   5  1.69904051 #> 357     7   2   5  1.64988859 #> 358     8   2   5 34.48445274 #> 363    13   2   5  0.19704736 #> 364    14   2   5  0.09290831 #> 367     3   3   5  0.08926336 #> 368     4   3   5  3.35431101 #> 369     5   3   5  0.42307155 #> 370     6   3   5  5.01188630 #> 371     7   3   5  4.90581605 #> 372     8   3   5 19.66458270 #> 381     3   4   5  0.81625811 #> 423     3   1   6  2.39988542 #> 424     4   1   6  0.12000690 #> 425     5   1   6  0.18667198 #> 426     6   1   6  0.28776164 #> 427     7   1   6  0.43800220 #> 433    13   1   6  0.32218844 #> 434    14   1   6  0.12458055 #> 437     3   2   6  0.14506792 #> 438     4   2   6  4.97708677 #> 439     5   2   6 11.03545947 #> 440     6   2   6  5.82118805 #> 441     7   2   6 11.90902867 #> 447    13   2   6  0.17815750 #> 448    14   2   6  1.98520149 #> 451     3   3   6  0.37911537 #> 452     4   3   6  6.65718364 #> 453     5   3   6  3.28121775 #> 454     6   3   6 13.84950276 #> 455     7   3   6  9.49508702 #> 465     3   4   6  1.14309289 #> 507     3   1   7  3.67752550 #> 517    13   1   7  0.55780025 #> 518    14   1   7  0.82716607 #> 521     3   2   7  0.45439057 #> 531    13   2   7  0.85843505 #> 532    14   2   7  4.51679915 #> 535     3   3   7  0.12197618 #> 549     3   4   7  0.91578873 #> 591     3   1   8  4.07341511 #> 601    13   1   8  0.29673822 #> 602    14   1   8  4.03087579 #> 605     3   2   8  0.98693785 #> 615    13   2   8  0.16458676 #> 616    14   2   8  8.29958439 #> 619     3   3   8  0.15517260 #> 633     3   4   8  0.91681336 #> 685    13   1   9  1.01061954 #> 699    13   2   9  0.09240913  # Update model for 500 iterations to monitor deviance contributions mb.update(emax, param=\"dev\", n.iter=500) #>     study arm fup        mean #> 1       1   1   1 -1.31203206 #> 2       2   1   1 -3.00682282 #> 3       3   1   1 -2.14248596 #> 4       4   1   1  0.06434395 #> 5       5   1   1 -2.87385329 #> 6       6   1   1 -2.02894920 #> 7       7   1   1  7.45924216 #> 8       8   1   1 11.77496752 #> 9       9   1   1  5.87197416 #> 10     10   1   1 -4.33626251 #> 11     11   1   1 -2.69408283 #> 12     12   1   1 -4.62516292 #> 13     13   1   1 -1.48614713 #> 14     14   1   1 -2.80687713 #> 15      1   2   1 -1.70997009 #> 16      2   2   1 -6.06271847 #> 17      3   2   1 -3.43835541 #> 18      4   2   1 -4.50437553 #> 19      5   2   1 -4.63686380 #> 20      6   2   1 -4.75720477 #> 21      7   2   1 -3.39380003 #> 22      8   2   1 -4.58001955 #> 23      9   2   1  0.85360199 #> 24     10   2   1  2.45336833 #> 25     11   2   1  6.28661809 #> 26     12   2   1 -2.39953385 #> 27     13   2   1 -3.30795083 #> 28     14   2   1 -1.36892431 #> 29      1   3   1 -1.61555394 #> 30      2   3   1 -1.73404821 #> 31      3   3   1 -3.54683219 #> 32      4   3   1 -1.84460535 #> 33      5   3   1 -4.78166251 #> 34      6   3   1 -4.27534382 #> 35      7   3   1 -3.35089135 #> 36      8   3   1 -2.40840248 #> 37      9   3   1  7.11984422 #> 38     10   3   1  9.06665806 #> 39     11   3   1  3.16932056 #> 40     12   3   1  6.57416267 #> 43      1   4   1 -1.62264650 #> 44      2   4   1  4.71597164 #> 45      3   4   1 -3.65115703 #> 57      1   5   1 -2.37327309 #> 58      2   5   1  8.03258671 #> 71      1   6   1 -2.51953687 #> 85      1   1   2 -0.30055947 #> 86      2   1   2 -3.03666118 #> 87      3   1   2 -1.72551539 #> 88      4   1   2 -0.44992332 #> 89      5   1   2 -2.77951875 #> 90      6   1   2  4.11515223 #> 91      7   1   2  1.10066512 #> 92      8   1   2  4.58602243 #> 93      9   1   2  0.12710820 #> 94     10   1   2 -4.55921634 #> 95     11   1   2 -2.42019973 #> 96     12   1   2 -4.00959142 #> 97     13   1   2 -1.32096204 #> 98     14   1   2 -0.84777551 #> 99      1   2   2 -0.11190307 #> 100     2   2   2  1.68528362 #> 101     3   2   2 -0.04315933 #> 102     4   2   2 -3.86654888 #> 103     5   2   2 -4.36975919 #> 104     6   2   2 -0.41860863 #> 105     7   2   2 -1.90432568 #> 106     8   2   2 -3.49213264 #> 107     9   2   2 -2.63724267 #> 108    10   2   2 -4.12429928 #> 109    11   2   2 -3.08256766 #> 110    12   2   2 -4.62953151 #> 111    13   2   2 -0.09868999 #> 112    14   2   2 -0.97039915 #> 113     1   3   2 -1.14172008 #> 114     2   3   2 -4.00558400 #> 115     3   3   2 -2.65722745 #> 116     4   3   2 -0.64992332 #> 117     5   3   2  0.83682256 #> 118     6   3   2 -3.23571600 #> 119     7   3   2 -0.25870322 #> 120     8   3   2 -0.70082858 #> 121     9   3   2 -5.44249481 #> 122    10   3   2 -3.57370467 #> 123    11   3   2 -5.03950286 #> 124    12   3   2 -4.95877093 #> 127     1   4   2 -1.12455836 #> 128     2   4   2 -4.32509514 #> 129     3   4   2 -2.82322520 #> 141     1   5   2 -1.97444388 #> 142     2   5   2 -4.57507337 #> 155     1   6   2 -1.72653534 #> 170     2   1   3 -1.48945332 #> 171     3   1   3 -2.00717959 #> 172     4   1   3 -0.80854359 #> 173     5   1   3 -1.74652595 #> 174     6   1   3 -1.00917662 #> 175     7   1   3 -0.69201467 #> 176     8   1   3  1.60867357 #> 177     9   1   3 -1.12610272 #> 178    10   1   3 -2.22945952 #> 179    11   1   3 -0.15742436 #> 180    12   1   3 -3.21636823 #> 181    13   1   3 -1.74281778 #> 182    14   1   3  2.19212369 #> 184     2   2   3 -1.19140404 #> 185     3   2   3 -2.11613914 #> 186     4   2   3 -3.78012324 #> 187     5   2   3 -4.14330859 #> 188     6   2   3 -2.42006418 #> 189     7   2   3 -2.36349352 #> 190     8   2   3 -3.80047397 #> 191     9   2   3  6.25565631 #> 192    10   2   3  1.48233558 #> 193    11   2   3  7.40541676 #> 194    12   2   3 -0.11137900 #> 195    13   2   3 -2.09924573 #> 196    14   2   3  1.43948225 #> 198     2   3   3 -0.84424985 #> 199     3   3   3 -3.31355006 #> 200     4   3   3 -3.60868559 #> 201     5   3   3 -1.30973610 #> 202     6   3   3 -3.98821567 #> 203     7   3   3 -3.31508197 #> 204     8   3   3 -3.65644350 #> 205     9   3   3  6.80753313 #> 206    10   3   3  4.25965016 #> 207    11   3   3  5.32905790 #> 208    12   3   3  6.08356563 #> 212     2   4   3  0.76209100 #> 213     3   4   3 -3.20552953 #> 226     2   5   3  1.13761267 #> 254     2   1   4  5.07657711 #> 255     3   1   4 -3.09866515 #> 256     4   1   4 -1.31303538 #> 257     5   1   4 -1.22566341 #> 258     6   1   4 -2.36919120 #> 259     7   1   4 -2.61039767 #> 260     8   1   4  0.54462062 #> 261     9   1   4 -0.19040567 #> 262    10   1   4  8.78990189 #> 263    11   1   4  4.86902211 #> 264    12   1   4 -0.56947829 #> 265    13   1   4 -2.45510575 #> 266    14   1   4 -1.06674766 #> 268     2   2   4 -3.23888273 #> 269     3   2   4 -3.21028792 #> 270     4   2   4 -3.11334098 #> 271     5   2   4 -2.76460097 #> 272     6   2   4 -4.06439123 #> 273     7   2   4 -3.22624016 #> 274     8   2   4  2.46898604 #> 275     9   2   4  5.45231394 #> 276    10   2   4  1.96497441 #> 277    11   2   4 17.45809000 #> 278    12   2   4 -1.70416320 #> 279    13   2   4 -3.55710003 #> 280    14   2   4 -0.97318067 #> 282     2   3   4 -1.79586076 #> 283     3   3   4 -3.23199519 #> 284     4   3   4 -3.37301697 #> 285     5   3   4 -3.54480911 #> 286     6   3   4 -2.56258607 #> 287     7   3   4 -1.00031426 #> 288     8   3   4 -3.15236310 #> 289     9   3   4  5.32103196 #> 290    10   3   4  3.27507698 #> 291    11   3   4  9.12920177 #> 292    12   3   4  3.90265447 #> 296     2   4   4 -0.87367492 #> 297     3   4   4 -3.37216890 #> 310     2   5   4 -0.29840452 #> 339     3   1   5 -1.88154881 #> 340     4   1   5 -1.39724407 #> 341     5   1   5 -1.19329790 #> 342     6   1   5 -2.67545125 #> 343     7   1   5 -3.15913634 #> 344     8   1   5 -2.88782080 #> 349    13   1   5 -3.15918934 #> 350    14   1   5 -3.89805796 #> 353     3   2   5 -2.99683729 #> 354     4   2   5 -1.46255345 #> 355     5   2   5  1.05107496 #> 356     6   2   5 -2.36040508 #> 357     7   2   5 -1.62345967 #> 358     8   2   5 31.60528510 #> 363    13   2   5 -3.33349921 #> 364    14   2   5 -4.19926707 #> 367     3   3   5 -3.10437874 #> 368     4   3   5 -0.37079706 #> 369     5   3   5 -3.53016695 #> 370     6   3   5  0.86730265 #> 371     7   3   5  1.61926571 #> 372     8   3   5 16.09708581 #> 381     3   4   5 -2.58364813 #> 423     3   1   6 -0.66019197 #> 424     4   1   6 -2.77694240 #> 425     5   1   6 -3.00497511 #> 426     6   1   6 -3.00260457 #> 427     7   1   6 -2.86998921 #> 433    13   1   6 -3.02143681 #> 434    14   1   6 -4.00641839 #> 437     3   2   6 -2.83230343 #> 438     4   2   6  1.55918422 #> 439     5   2   6  7.41833626 #> 440     6   2   6  1.89002764 #> 441     7   2   6  8.71973914 #> 447    13   2   6 -3.36667303 #> 448    14   2   6 -2.41013200 #> 451     3   3   6 -2.80519000 #> 452     4   3   6  3.07326232 #> 453     5   3   6 -0.62779264 #> 454     6   3   6  9.67865465 #> 455     7   3   6  6.15880438 #> 465     3   4   6 -2.12613332 #> 507     3   1   7  0.47168920 #> 517    13   1   7 -2.77269720 #> 518    14   1   7 -3.34077742 #> 521     3   2   7 -2.41565861 #> 531    13   2   7 -2.55136128 #> 532    14   2   7  0.16810855 #> 535     3   3   7 -3.08106877 #> 549     3   4   7 -2.33685148 #> 591     3   1   8  0.76844542 #> 601    13   1   8 -2.96414389 #> 602    14   1   8 -0.21123460 #> 605     3   2   8 -1.80408958 #> 615    13   2   8 -3.23316837 #> 616    14   2   8  3.71641308 #> 619     3   3   8 -3.08208333 #> 633     3   4   8 -2.32895835 #> 685    13   1   9 -2.16092533 #> 699    13   2   9 -3.21320911 # }"},{"path":"/reference/mb.validate.data.html","id":null,"dir":"Reference","previous_headings":"","what":"Validates that a dataset fulfils requirements for MBNMA — mb.validate.data","title":"Validates that a dataset fulfils requirements for MBNMA — mb.validate.data","text":"Validates dataset fulfils requirements MBNMA","code":""},{"path":"/reference/mb.validate.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates that a dataset fulfils requirements for MBNMA — mb.validate.data","text":"","code":"mb.validate.data(data.ab, single.arm = FALSE, CFB = TRUE)"},{"path":"/reference/mb.validate.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates that a dataset fulfils requirements for MBNMA — mb.validate.data","text":"data.ab data frame arm-level data \"long\" format containing columns: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating aggregate response given observation (e.g. mean) se Numeric data indicating standard error given observation treatment Treatment identifiers (can numeric, factor character) class optional column indicating particular class identifier. Observations treatment identifier must also class identifier. n optional column indicating number participants used calculate response given observation (required modelling using Standardised Mean Differences) single.arm boolean object indicate whether function allow singe arm studies allowed network without returning error. Default allow inclusion (single.arm=FALSE) CFB boolean object indicate dataset composed studies measuring change baseline (TRUE) (FALSE). essential specify correctly failing may lead warnings.","code":""},{"path":"/reference/mb.validate.data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validates that a dataset fulfils requirements for MBNMA — mb.validate.data","text":"error warnings checks passed. Runs silently checks passed","code":""},{"path":"/reference/mb.validate.data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validates that a dataset fulfils requirements for MBNMA — mb.validate.data","text":"Checks done within validation: Checks data.ab required column names Checks NAs Checks SEs positive Checks studies baseline measurement (unless change baseline data used) Checks arms balanced time point Checks class codes consistent within treatment Checks treatment codes consistent across different time points within study Checks studies least two arms (single.arm = FALSE)","code":""},{"path":"/reference/mb.write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write MBNMA time-course models JAGS code — mb.write","title":"Write MBNMA time-course models JAGS code — mb.write","text":"Writes JAGS code Bayesian time-course model model-based network meta-analysis (MBNMA).","code":""},{"path":"/reference/mb.write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write MBNMA time-course models JAGS code — mb.write","text":"","code":"mb.write(   fun = tpoly(degree = 1),   link = \"identity\",   positive.scale = TRUE,   intercept = NULL,   rho = 0,   covar = \"varadj\",   omega = NULL,   corparam = TRUE,   class.effect = list(),   UME = FALSE )"},{"path":"/reference/mb.write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write MBNMA time-course models JAGS code — mb.write","text":"fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser() link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function). positive.scale boolean object indicates whether continuous mean responses (y) positive therefore whether baseline response given prior constrains positive (e.g. scales <0). intercept boolean object indicates whether intercept (written alpha model) included. left NULL (default), intercept included studies reporting absolute means, excluded studies reporting change baseline (indicated network$cfb). rho correlation coefficient modelling within-study correlation time points. default string representing prior distribution JAGS, indicating estimated data (e.g. rho=\"dunif(0,1)\"). rho also assigned numeric value (e.g. rho=0.7), fixes rho model value (e.g. use deterministic sensitivity analysis). set rho=0 (default) implies modelling correlation time points. covar character specifying covariance structure use modelling within-study correlation time-points. can done specifying one following: \"varadj\" - univariate likelihood variance adjustment assume constant correlation subsequent time points (Jansen et al. 2015) . default. \"CS\" - multivariate normal likelihood compound symmetry structure \"AR1\" - multivariate normal likelihood autoregressive AR1 structure omega DEPRACATED VERSION 0.2.3 ONWARDS (~uniform(-1,1) now used correlation parameters rather Wishart prior). scale matrix inverse-Wishart prior covariance matrix used model correlation time-course parameters (see Details time-course functions). omega must symmetric positive definite matrix dimensions equal number time-course parameters modelled using relative effects (pool=\"rel\"). left NULL (default) diagonal matrix elements equal 1 used. corparam boolean object indicates whether correlation modeled relative effect time-course parameters. Default FALSE automatically set FALSE class effects modeled. Setting TRUE models correlation time-course parameters. can help identify parameters estimated poorly treatments allowing sharing information parameters different treatments network, may also cause shrinkage. class.effect list named strings determines time-course parameters model class effect effect (\"common\" \"random\"). example: list(emax=\"common\", et50=\"random\"). UME Can take either TRUE FALSE (unrelated mean effects model time-course parameters respectively) can vector parameter name strings model UME. example: c(\"beta.1\", \"beta.2\").","code":""},{"path":"/reference/mb.write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write MBNMA time-course models JAGS code — mb.write","text":"single long character string containing JAGS model generated based arguments passed function.","code":""},{"path":"/reference/mb.write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write MBNMA time-course models JAGS code — mb.write","text":"","code":"# Write a linear time-course MBNMA: # random treatment effects on beta.1 # equal baselines in study arms model <- mb.write(fun=tpoly(degree=1, pool.1=\"rel\", method.1=\"random\"))  # Write an emax time-course MBNMA with: # a Hill parameter # no intercept model <- mb.write(fun=temax(pool.emax=\"rel\", method.emax=\"common\",     pool.et50=\"abs\", method.et50=\"common\", pool.hill=\"abs\", method.hill=\"common\"),   intercept=TRUE) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> 'hill' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values.  # Write a log-linear time-course MBNMA with: # AR1 correlation between time points model <- mb.write(fun=tloglin(),   rho=\"dunif(0,1)\", covar=\"AR1\")  # Define a user-defined time-course relationship for the MBNMA JAGS model userfun <- ~ (exp(beta.1 * time) / (beta.2 * time)) model <- mb.write(fun=tuser(fun=userfun,     pool.1=\"rel\", method.1=\"random\",     pool.2=\"rel\", method.2=\"common\"))"},{"path":"/reference/nma.run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an NMA model — nma.run","title":"Run an NMA model — nma.run","text":"Run NMA model","code":""},{"path":"/reference/nma.run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an NMA model — nma.run","text":"","code":"nma.run(data.ab, method = \"common\", link = \"identity\", ...)"},{"path":"/reference/nma.run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an NMA model — nma.run","text":"data.ab data frame arm-level data \"long\" format containing columns: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating aggregate response given observation (e.g. mean) se Numeric data indicating standard error given observation treatment Treatment identifiers (can numeric, factor character) class optional column indicating particular class identifier. Observations treatment identifier must also class identifier. n optional column indicating number participants used calculate response given observation (required modelling using Standardised Mean Differences) method Can take \"common\" \"random\" indicate type NMA model used synthesise data points given overlay.nma. default \"random\" since assumes different time-points overlay.nma lumped together estimate NMA. link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function). ... Options plotting igraph.","code":""},{"path":"/reference/nma.run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an NMA model — nma.run","text":"Returns object class(\"nma\", \"rjags\")","code":""},{"path":"/reference/nma.run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run an NMA model — nma.run","text":"","code":"network <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Get the latest time point df <- get.latest.time(network)  # Get the closest time point to a given value (t) df <- get.closest.time(network, t=7)  # Run NMA on the data nma.run(df, method=\"random\") #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 104 #>    Unobserved stochastic nodes: 133 #>    Total graph size: 1451 #>  #> Initializing model #>  #> Inference for Bugs model at \"/tmp/RtmpklM6fB/file18c11709bd79\", fit using jags, #>  3 chains, each with 2000 iterations (first 1000 discarded) #>  n.sims = 3000 iterations saved #>            mu.vect sd.vect     2.5%      25%      50%      75%    97.5%  Rhat #> d[1]         0.000   0.000    0.000    0.000    0.000    0.000    0.000 1.000 #> d[2]        -0.052   0.115   -0.269   -0.136   -0.046    0.028    0.161 1.002 #> d[3]        -0.038   0.037   -0.104   -0.063   -0.041   -0.014    0.041 1.054 #> d[4]         0.030   0.111   -0.176   -0.050    0.035    0.106    0.248 1.034 #> d[5]        -0.037   0.139   -0.306   -0.134   -0.039    0.061    0.226 1.028 #> d[6]         0.185   0.204   -0.244    0.050    0.204    0.323    0.564 1.022 #> d[7]         0.054   0.083   -0.113    0.004    0.054    0.107    0.217 1.019 #> d[8]         0.066   0.192   -0.323   -0.057    0.066    0.196    0.437 1.043 #> d[9]        -0.140   0.128   -0.393   -0.223   -0.138   -0.057    0.123 1.037 #> d[10]        0.054   0.187   -0.328   -0.074    0.069    0.178    0.405 1.051 #> d[11]       -0.038   0.063   -0.156   -0.082   -0.036    0.004    0.094 1.015 #> d[12]       -0.026   0.069   -0.162   -0.074   -0.026    0.023    0.101 1.060 #> d[13]       -0.143   0.080   -0.299   -0.196   -0.144   -0.088    0.016 1.013 #> d[14]       -0.070   0.107   -0.274   -0.144   -0.071    0.006    0.139 1.044 #> d[15]       -0.010   0.069   -0.142   -0.056   -0.011    0.036    0.122 1.030 #> d[16]        0.152   0.085   -0.021    0.100    0.148    0.208    0.318 1.017 #> d[17]        0.232   0.204   -0.180    0.094    0.249    0.372    0.608 1.015 #> d[18]        0.172   0.114   -0.054    0.100    0.173    0.237    0.417 1.036 #> d[19]        0.130   0.344   -0.584   -0.074    0.139    0.346    0.845 1.021 #> d[20]        0.069   0.135   -0.218   -0.014    0.078    0.163    0.308 1.005 #> d[21]       -0.173   0.233   -0.612   -0.329   -0.182   -0.018    0.288 1.082 #> d[22]        0.186   0.141   -0.090    0.089    0.181    0.282    0.458 1.059 #> d[23]       -0.001   0.104   -0.224   -0.062    0.004    0.063    0.206 1.040 #> d[24]        0.058   0.102   -0.138   -0.016    0.057    0.133    0.252 1.024 #> d[25]        0.074   0.113   -0.175    0.013    0.083    0.150    0.274 1.082 #> d[26]       -0.113   0.163   -0.441   -0.226   -0.113   -0.006    0.204 1.003 #> d[27]        0.108   0.146   -0.151    0.009    0.093    0.197    0.426 1.075 #> d[28]       -0.060   0.161   -0.359   -0.178   -0.057    0.062    0.230 1.072 #> d[29]        0.008   0.151   -0.269   -0.097    0.002    0.104    0.317 1.075 #> sd           0.052   0.025    0.012    0.032    0.050    0.068    0.104 1.450 #> totresdev   99.272  10.920   79.675   91.641   98.720  106.172  123.110 1.020 #> deviance  -141.775  10.920 -161.373 -149.406 -142.327 -134.876 -117.937 1.022 #>           n.eff #> d[1]          1 #> d[2]       1700 #> d[3]         47 #> d[4]        100 #> d[5]         98 #> d[6]        170 #> d[7]        110 #> d[8]         69 #> d[9]        150 #> d[10]       110 #> d[11]       140 #> d[12]        38 #> d[13]       190 #> d[14]        51 #> d[15]       180 #> d[16]       210 #> d[17]       150 #> d[18]       230 #> d[19]       110 #> d[20]       830 #> d[21]        29 #> d[22]        44 #> d[23]       110 #> d[24]        97 #> d[25]        40 #> d[26]      3000 #> d[27]        37 #> d[28]        34 #> d[29]        36 #> sd            9 #> totresdev   120 #> deviance    110 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> DIC info (using the rule, pD = var(deviance)/2) #> pD = 58.6 and DIC = -83.2 #> DIC is an estimate of expected predictive error (lower deviance is better)."},{"path":"/reference/obesityBW_CFB.html","id":null,"dir":"Reference","previous_headings":"","what":"Studies of treatments for reducing body weight in patients with obesity — obesityBW_CFB","title":"Studies of treatments for reducing body weight in patients with obesity — obesityBW_CFB","text":"dataset systematic review pharmacological treatments reducing body weight patients obesity. outcome continuous, aggregate data responses given mean change baseline body weight (KG). Overall 35 RCTs investigating 26 treatments 16 agents (/combinations agents) network. Standard deviations imputed 421 observations.","code":""},{"path":"/reference/obesityBW_CFB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Studies of treatments for reducing body weight in patients with obesity — obesityBW_CFB","text":"","code":"obesityBW_CFB"},{"path":"/reference/obesityBW_CFB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Studies of treatments for reducing body weight in patients with obesity — obesityBW_CFB","text":"data frame 710 rows 7 variables: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating mean response given observation se Numeric data indicating standard error given observation n Numeric data indicating number participants used calculate means observation treatment Treatment identifiers factors. Labels shortened treatment names. treatname Character data giving full names treatment format agent_dose agent Agent (drug) names stored characters class drug class agent (broader category agent) stored characters","code":""},{"path":"/reference/obesityBW_CFB.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Studies of treatments for reducing body weight in patients with obesity — obesityBW_CFB","text":"Pfizer Ltd.","code":""},{"path":"/reference/obesityBW_CFB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Studies of treatments for reducing body weight in patients with obesity — obesityBW_CFB","text":"obesityBW_CFB data frame long format (one row per observation, arm study), variables studyID, time, y, se, n, treatment, treatname, agent class.","code":""},{"path":"/reference/osteopain.html","id":null,"dir":"Reference","previous_headings":"","what":"Studies of pain relief medications for osteoarthritis — osteopain","title":"Studies of pain relief medications for osteoarthritis — osteopain","text":"dataset containing results WOMAC pain scale (0-10) time studies investigating 29 treatments pain relief patients osteoarthritis. Standard deviations imputed 269 observations.","code":""},{"path":"/reference/osteopain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Studies of pain relief medications for osteoarthritis — osteopain","text":"","code":"osteopain"},{"path":"/reference/osteopain.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Studies of pain relief medications for osteoarthritis — osteopain","text":"data frame 417 rows 7 variables: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating mean response given observation se Numeric data indicating standard error given observation treatment Treatment identifiers factors. Labels shortened treatment names. arm Arm identifiers coded study treatname Character data giving full names treatment","code":""},{"path":"/reference/osteopain.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Studies of pain relief medications for osteoarthritis — osteopain","text":"Pfizer Ltd.","code":""},{"path":"/reference/osteopain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Studies of pain relief medications for osteoarthritis — osteopain","text":"osteopain data frame long format (one row per observation, arm study), variables studyID, time, y, se, treatment, arm treatname.","code":""},{"path":"/reference/pDcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate plugin pD from a JAGS model with univariate likelihood for studies\nwith repeated measurements — pDcalc","title":"Calculate plugin pD from a JAGS model with univariate likelihood for studies\nwith repeated measurements — pDcalc","text":"Uses results MBNMA JAGS models calculate pD via plugin method (Spiegelhalter et al. 2002) . Can used models known standard errors covariance matrices (typically univariate).","code":""},{"path":"/reference/pDcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate plugin pD from a JAGS model with univariate likelihood for studies\nwith repeated measurements — pDcalc","text":"","code":"pDcalc(   obs1,   obs2,   fups = NULL,   narm,   NS,   theta.result,   resdev.result,   likelihood = \"normal\",   type = \"time\" )"},{"path":"/reference/pDcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate plugin pD from a JAGS model with univariate likelihood for studies\nwith repeated measurements — pDcalc","text":"obs1 matrix (study x arm) array (study x arm x time point) containing observed data y (normal likelihood) r (binomial Poisson likelihood) arm study. array used data JAGS model. obs2 matrix (study x arm) array (study x arm x time point) containing observed data se (normal likelihood), N (binomial likelihood) E (Poisson likelihood) arm study. array used data JAGS model. fups numeric vector length equal number studies, containing number follow-mean responses reported study. Required time-course MBNMA models (type=\"time\") narm numeric vector length equal number studies, containing number arms study. NS single number equal number studies dataset. theta.result matrix (study x arm) array (study x arm x time point) containing posterior mean predicted means/probabilities/rate arm study. estimated JAGS model. resdev.result matrix (study x arm) array (study x arm x time point) containing posterior mean residual deviance contributions arm study. estimated JAGS model. likelihood character object following likelihoods: univariate binomial (work time-course MBNMA models) multivar.normal (work time-course MBNMA models) type type MBNMA model fitted. Can either \"time\" \"dose\"","code":""},{"path":"/reference/pDcalc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate plugin pD from a JAGS model with univariate likelihood for studies\nwith repeated measurements — pDcalc","text":"Method calculating pD via plugin method proposed (Spiegelhalter et al. 2002) . Standard errors / covariance matrices must assumed known. obtain values theta.result resdev.result parameters must monitored running JAGS model. non-linear time-course MBNMA models residual deviance contributions may skewed, can lead non-sensical results calculating pD via plugin method. Alternative approaches use pV (pv) approximation (Plummer 2008)  pD calculated Kullback–Leibler divergence (pd.kl) using optimism adjustment (popt) (Plummer 2008) .","code":""},{"path":"/reference/pDcalc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate plugin pD from a JAGS model with univariate likelihood for studies\nwith repeated measurements — pDcalc","text":"ADD pV REF","code":""},{"path":"/reference/pDcalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate plugin pD from a JAGS model with univariate likelihood for studies\nwith repeated measurements — pDcalc","text":"","code":"# \\donttest{ # Using the alogliptin dataset network <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Run Emax model saving predicted means and residual deviance contributions emax <- mb.run(network, fun=temax(),   parameters.to.save=c(\"theta\", \"resdev\"), intercept=FALSE) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 233 #>    Unobserved stochastic nodes: 38 #>    Total graph size: 4166 #>  #> Initializing model #>   # Get matrices of observed data jagsdat <- getjagsdata(network$data.ab)  # Plugin estimation of pD is problematic with non-linear models as it often leads to #negative values, hence use of pV, pd.kl and popt as other measures for the effective #number of parameters pDcalc(obs1=jagsdat$y, obs2=jagsdat$se,   fups=jagsdat$fups, narm=jagsdat$narm, NS=jagsdat$NS,   theta.result = emax$BUGSoutput$mean$theta,   resdev.result = emax$BUGSoutput$mean$resdev   ) #> [1] -9714.622 # }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot.mb.predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots predicted responses from a time-course MBNMA model — plot.mb.predict","title":"Plots predicted responses from a time-course MBNMA model — plot.mb.predict","text":"Plots predicted responses time-course MBNMA model","code":""},{"path":"/reference/plot.mb.predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots predicted responses from a time-course MBNMA model — plot.mb.predict","text":"","code":"# S3 method for mb.predict plot(   x,   disp.obs = FALSE,   overlay.ref = TRUE,   overlay.nma = NULL,   method = \"random\",   col = \"blue\",   max.col.scale = NULL,   treat.labs = NULL,   plot.bins = TRUE,   ... )"},{"path":"/reference/plot.mb.predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots predicted responses from a time-course MBNMA model — plot.mb.predict","text":"x object class \"mb.predict\" generated predict(\"mbnma\") disp.obs boolean object indicate whether show shaded sections plot observed data (TRUE) (FALSE) overlay.ref boolean object indicating whether overlay line showing median network reference treatment response time plot (TRUE) (FALSE). network reference treatment (treatment must included predict display network reference treatment properly. overlay.nma Numeric vector used overlay results standard NMA model \"lumps\" time-points together within time bin ranges specified overlay.nma. numbers overlay.nma define boundaries time bins within perform standard NMA. Length must >=2, can left NULL (default) indicate NMA perfomed. overlay.nma can specified overlay.ref==TRUE. See Details information. method Can take \"common\" \"random\" indicate type NMA model used synthesise data points given overlay.nma. default \"random\" since assumes different time-points overlay.nma lumped together estimate NMA. col character indicating colour use shading disp.obs set TRUE. Can either \"blue\", \"green\", \"red\" max.col.scale Rarely requires adjustment. maximum count observations (therefore darkest shaded color) used disp.obs used. allows consistency shading multiple plotted graphs. always least high maximum count observations plotted treat.labs vector treatment labels order treatment codes. Easiest use treatment labels stored mb.network() plot.bins Plot time bin boundaries vertical dashed lines. Setting plot.bins=TRUE overlay.nma specified also sets x-axis ticks time bin boundaries automatically. ... Arguments ggplot() R2jags()","code":""},{"path":"/reference/plot.mb.predict.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots predicted responses from a time-course MBNMA model — plot.mb.predict","text":"S3 method plot(), disp.obs set TRUE advisable ensure predictions predict estimated using even sequence time points avoid misrepresentation shaded densities. Shaded counts observations relative treatment plotted panel rather network reference treatment disp.obs set TRUE.","code":""},{"path":"/reference/plot.mb.predict.html","id":"overlaying-nma-results","dir":"Reference","previous_headings":"","what":"Overlaying NMA results","title":"Plots predicted responses from a time-course MBNMA model — plot.mb.predict","text":"overlay.nma indicates regions data (defined \"time bins\") may reasonable \"lump\" different follow-times different studies together assume standard NMA model. example: overlay.nma=c(5,10) indicates single NMA studies follow-times >5 <=10 overlay.nma=c(5,10,15) indicates two NMAs performed studies follow-times >5 <=10 studies follow-times >10 <=15 used MBNMA (via predict.mbnma()) allows comparison MBNMA results specific range time within time bin. can useful assess time-course function might suitable using binplot(), assess MBNMA predictions agreement predictions NMA model using plot.mb.predict() specific range time-points. can general indicator fit time-course model. However, important note wider range specified overlay.nma, likely different time-points included, therefore greater heterogeneity/inconsistency NMA model. overlay.nma includes several follow-times study single time-point taken (one closest mean(overlay.nma)). NMA predictions plotted range specified overlay.nma horizontal line, 95%CrI shown grey rectangle. NMA predictions represent time-points within range since lump together data time-points. Predictions treatments disconnected network reference treatment data points specified within overlay.nma estimated included. important note NMA model necessarily \"correct\" model, since \"lumps\" different time-points together ignores potential differences treatment effects may arise . wider range specified overlay.nma, greater effect \"lumping\" stronger assumption similarity studies. NMA model estimated corresponding prediction made , time bin must include network reference treatment (treatment=1) evaluated least 1 connected study time bin. given time bin meet criteria NMA calculated .","code":""},{"path":"/reference/plot.mb.predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots predicted responses from a time-course MBNMA model — plot.mb.predict","text":"","code":"# \\donttest{ # Create an mb.network object from a dataset copdnet <- mb.network(copd) #> Reference treatment is `Placebo` #> Studies reporting change from baseline automatically identified from the data  # Run an MBNMA model with a log-linear time-course loglin <- mb.run(copdnet,   fun=tloglin(pool.rate=\"rel\", method.rate=\"common\"),   rho=\"dunif(0,1)\", covar=\"varadj\") #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 80 #>    Unobserved stochastic nodes: 16 #>    Total graph size: 1310 #>  #> Initializing model #>   # Predict responses using the original dataset to estimate the network reference #treatment response df.ref <- copd[copd$treatment==\"Placebo\",] predict <- predict(loglin, times=c(0:20), E0=0, ref.resp=df.ref) #> Data frame must contain only data from reference treatment #> Studies reporting change from baseline automatically identified from ref.resp #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 39 #>    Unobserved stochastic nodes: 2 #>    Total graph size: 649 #>  #> Initializing model #>   # Plot the predicted responses with observations displayed on plot as green shading plot(predict, disp.obs=TRUE, overlay.ref=FALSE, col=\"green\")   # Plot the predicted responses with the median network reference treatment response overlayed #on the plot plot(predict, disp.obs=FALSE, overlay.ref=TRUE) #> Reference treatment in plots is Placebo   # Plot predictions from NMAs calculated between different time-points plot(predict, overlay.nma=c(5,10), n.iter=20000) #> Reference treatment in plots is Placebo #> Running overlay.nma for time=5 and time=10 #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 17 #>    Unobserved stochastic nodes: 20 #>    Total graph size: 221 #>  #> Initializing model #>   plot(predict, overlay.nma=c(5,10,15,20), n.iter=20000) #> Reference treatment in plots is Placebo #> Running overlay.nma for time=5 and time=10 #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 17 #>    Unobserved stochastic nodes: 20 #>    Total graph size: 221 #>  #> Initializing model #>  #> Running overlay.nma for time=10 and time=15 #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 18 #>    Unobserved stochastic nodes: 21 #>    Total graph size: 223 #>  #> Initializing model #>  #> Running overlay.nma for time=15 and time=20 #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 2 #>    Unobserved stochastic nodes: 4 #>    Total graph size: 41 #>  #> Initializing model #>   # Time-course fit may be less well at 15-20 weeks follow-up # }"},{"path":"/reference/plot.mb.rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot histograms of rankings from MBNMA models — plot.mb.rank","title":"Plot histograms of rankings from MBNMA models — plot.mb.rank","text":"Plot histograms rankings MBNMA models","code":""},{"path":"/reference/plot.mb.rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot histograms of rankings from MBNMA models — plot.mb.rank","text":"","code":"# S3 method for mb.rank plot(x, params = NULL, treat.labs = NULL, ...)"},{"path":"/reference/plot.mb.rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot histograms of rankings from MBNMA models — plot.mb.rank","text":"x object class \"mb.rank\" generated rank.mbnma() params character vector containing model parameters monitored mbnma ranking desired (e.g. \"beta.1\", \"emax\"). Parameters must vary treatment ranking possible. Can include \"auc\" (see details). treat.labs vector treatment labels order treatment codes. Easiest use treatment labels stored mb.network() ... Arguments sent ggplot2::ggplot()","code":""},{"path":"/reference/plot.mb.rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot histograms of rankings from MBNMA models — plot.mb.rank","text":"series histograms show rankings treatment/agent/prediction, separate panel parameter object returned list containing separate element parameter params object class c(\"gg\", \"ggplot\").","code":""},{"path":"/reference/plot.mb.rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot histograms of rankings from MBNMA models — plot.mb.rank","text":"","code":"# \\donttest{ # Create an mb.network object from a dataset painnet <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Run an MBNMA model with an Emax time-course emax <- mb.run(painnet,   fun=temax(pool.emax=\"rel\", method.emax=\"common\",     pool.et50=\"abs\", method.et50=\"random\"),   positive.scale=TRUE) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 194 #>    Total graph size: 8240 #>  #> Initializing model #>   # Calculate treatment rankings for AUC and emax ranks <- rank(emax,   param=c(\"auc\", \"emax\"),   int.range=c(0,15), n.iter=500) #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  17%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |=====================                                                 |  31%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |============================                                          |  41%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |===================================                                   |  51%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  57%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |=============================================                         |  64%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  79%   |                                                                               |========================================================              |  80%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100%  # Plot histograms for ranking by AUC plot(ranks, param=\"auc\")   # Plot histograms for ranking by emax plot(ranks, param=\"emax\")  # }"},{"path":"/reference/plot.mbnma.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest plot for results from time-course MBNMA models — plot.mbnma","title":"Forest plot for results from time-course MBNMA models — plot.mbnma","text":"Generates forest plot time-course parameters interest results time-course MBNMA models. Posterior densities plotted result using ggdist:stat_:halfeye()","code":""},{"path":"/reference/plot.mbnma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest plot for results from time-course MBNMA models — plot.mbnma","text":"","code":"# S3 method for mbnma plot(x, params = NULL, treat.labs = NULL, class.labs = NULL, ...)"},{"path":"/reference/plot.mbnma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forest plot for results from time-course MBNMA models — plot.mbnma","text":"x S3 object class \"mbnma\" generated running time-course MBNMA model params character vector time-course parameters plot. Parameters must given name monitored nodes mbnma must vary treatment class. Can set NULL include available time-course parameters estimated mbnma. treat.labs character vector treatment labels. left NULL (default) labels used defined data. class.labs character vector class labels mbnma modelled using class effects left NULL (default) labels used defined data. ... Arguments sent ggdist::stat_halfeye()","code":""},{"path":"/reference/plot.mbnma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forest plot for results from time-course MBNMA models — plot.mbnma","text":"forest plot class c(\"gg\", \"ggplot\") separate panels different time-course parameters","code":""},{"path":"/reference/plot.mbnma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forest plot for results from time-course MBNMA models — plot.mbnma","text":"","code":"# \\donttest{ # Create an mb.network object from a dataset alognet <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Run an MBNMA model with an Emax time-course emax <- mb.run(alognet,   fun=temax(pool.emax=\"rel\", method.emax=\"common\",     pool.et50=\"rel\", method.et50=\"common\"),   intercept=FALSE) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 233 #>    Unobserved stochastic nodes: 38 #>    Total graph size: 4166 #>  #> Initializing model #>   # Generate forest plot plot(emax)   # Plot results for only one time-course parameter plot(emax, params=\"emax\")  # }"},{"path":"/reference/predict.mbnma.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict effects over time in a given population based on MBNMA time-course\nmodels — predict.mbnma","title":"Predict effects over time in a given population based on MBNMA time-course\nmodels — predict.mbnma","text":"Used predict effects time different treatments predict results new study. MBNMA models include consistency relative effects time-course parameters, calculated combining relative treatment effects given reference treatment response (specific population interest).","code":""},{"path":"/reference/predict.mbnma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict effects over time in a given population based on MBNMA time-course\nmodels — predict.mbnma","text":"","code":"# S3 method for mbnma predict(   object,   times = seq(0, max(object$model.arg$jagsdata$time, na.rm = TRUE), length.out = 30),   E0 = 0,   treats = NULL,   level = \"treatment\",   ref.resp = NULL,   synth = \"common\",   lim = \"cred\",   ... )"},{"path":"/reference/predict.mbnma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict effects over time in a given population based on MBNMA time-course\nmodels — predict.mbnma","text":"object S3 object class(\"mbnma\") generated running time-course MBNMA model times sequence positive numbers indicating time points predict mean responses (conduct node-split used mb.nodesplit()) E0 object indicate value(s) use response time = 0 prediction. can take number different formats depending used/calculated. default 0 may lead non-sensical predictions Ratio Means modeled. numeric() single numeric value representing deterministic response time = 0 formula() formula representing stochastic distribution response time = 0. specified random number generator (RNG) given string, can take RNG distribution function exists R. example: ~rnorm(n, 7, 0.5). treats character vector treatment/class names numeric vector treatment/class codes (coded mbnma) indicates treatments/classes calculate predictions . left NULL predictions calculated treatments/classes. Whether vector correspond treatments classes depends value level. level Can take either \"treatment\" make predictions treatments, \"class\" make predictions classes (case object must class effect model). ref.resp object indicate value(s) use reference treatment response MBNMA models reference treatment response estimated within model (.e. model time- course parameters using pool=\"rel\"). can take number different formats depending used/calculated. two approaches : reference response can estimated dataset studies investigating reference treatment using meta-analysis. dataset set observational studies specific population make predictions, subset study arms within MBNMA dataset investigate reference treatment. data provided ref.resp data.frame() containing data long format (one row per observation). See ref.synth() Values reference treatment response can assigned different time-course parameters within model modelled using consistency relative effects (pool=\"rel\"). given list, named element corresponds time-course parameter modelled mbnma. values can either following: numeric() numeric value representing deterministic value time-course parameter question individuals given reference treatment. 0 used default, assumes effect time reference treatment (.e. mean differences / relative effects versus reference treatment modeled). formula() formula representing stochastic distribution value time-course parameter question. specified random number generator (RNG) given formula, can take RNG distribution function exists R. example: ~rnorm(n, -3, 0.2). synth character object can take value \"common\" \"random\" specifies type pooling use synthesis ref.resp. Using \"random\" rather \"common\" synth result wider 95\\% CrI predictions. lim Specifies calculation either 95% credible intervals (lim=\"cred\") 95% prediction intervals (lim=\"pred\"). ... Arguments sent R2jags synthesis network reference treatment effect (using ref.synth())","code":""},{"path":"/reference/predict.mbnma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict effects over time in a given population based on MBNMA time-course\nmodels — predict.mbnma","text":"S3 object class mb.predict contains following elements: summary named list data frames. data frame contains summary predicted responses follow-times specified times treatment specified treats pred.mat named list matrices. matrix contains MCMC results predicted responses follow-times specified times treatment specified treats","code":""},{"path":"/reference/predict.mbnma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict effects over time in a given population based on MBNMA time-course\nmodels — predict.mbnma","text":"default network reference treatment baseline (E0) time-course parameter values set zero predict() estimates mean differences (/relative treatment effects) time versus network reference treatment. ref.resp needs specified mbnma estimated using consistency relative effects (pool=\"rel\") time-course parameters, inform absolute values network reference treatment parameters can added relative effects calculate specific predictions.","code":""},{"path":"/reference/predict.mbnma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict effects over time in a given population based on MBNMA time-course\nmodels — predict.mbnma","text":"","code":"# \\donttest{ # Create an mb.network object from a dataset network <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Run an MBNMA model with an Emax time-course emax <- mb.run(network,   fun=temax(pool.emax=\"rel\", method.emax=\"common\",     pool.et50=\"abs\", method.et50=\"common\")) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 89 #>    Total graph size: 7703 #>  #> Initializing model #>   # Predict responses using a stochastic baseline (E0) and a distribution for the #network reference treatment preds <- predict(emax, times=c(0:10),   E0=~rnorm(n, 7, 0.5),   ref.resp=list(emax=~rnorm(n, -0.5, 0.05))) #> Priors required for: mu.1 #> Success: Elements in prior match consistency time-course treatment effect parameters summary(preds) #>       time     Pl_0   Ce_100   Ce_200   Ce_400    Du_90    Et_10    Et_30 #>  [1,]    0 7.008180 7.008180 7.008180 7.008180 7.008180 7.008180 7.008180 #>  [2,]    1 6.678838 6.299977 6.129000 6.066002 6.300390 6.606605 5.956167 #>  [3,]    2 6.611088 6.154303 5.948134 5.872170 6.154807 6.524003 5.739752 #>  [4,]    3 6.581843 6.091421 5.870060 5.788498 6.091965 6.488347 5.646332 #>  [5,]    4 6.565540 6.056368 5.826536 5.741854 6.056934 6.468471 5.594255 #>  [6,]    5 6.555145 6.034017 5.798784 5.712112 6.034597 6.455797 5.561048 #>  [7,]    6 6.547938 6.018522 5.779545 5.691493 6.019112 6.447011 5.538027 #>  [8,]    7 6.542649 6.007148 5.765423 5.676358 6.007746 6.440561 5.521130 #>  [9,]    8 6.538601 5.998445 5.754616 5.664777 5.999048 6.435626 5.508199 #> [10,]    9 6.535403 5.991570 5.746079 5.655628 5.992178 6.431728 5.497985 #> [11,]   10 6.532814 5.986002 5.739166 5.648219 5.986613 6.428571 5.489713 #>           Et_5    Et_60    Et_90   Lu_100   Lu_200   Lu_400    Lu_NA  Na_1000 #>  [1,] 7.008180 7.008180 7.008180 7.008180 7.008180 7.008180 7.008180 7.008180 #>  [2,] 6.606871 5.566860 5.568447 6.162701 6.171228 6.050411 6.094142 5.902775 #>  [3,] 6.524316 5.270339 5.272255 5.988763 5.999050 5.853384 5.906117 5.675373 #>  [4,] 6.488681 5.142338 5.144398 5.913679 5.924727 5.768334 5.824954 5.577211 #>  [5,] 6.468815 5.070982 5.073122 5.871823 5.883294 5.720922 5.779708 5.522489 #>  [6,] 6.456148 5.025482 5.027673 5.845133 5.856875 5.690690 5.750858 5.487596 #>  [7,] 6.447367 4.993940 4.996166 5.826631 5.838560 5.669732 5.730858 5.463407 #>  [8,] 6.440921 4.970787 4.973039 5.813049 5.825116 5.654349 5.716177 5.445652 #>  [9,] 6.435988 4.953069 4.955341 5.802656 5.814829 5.642576 5.704943 5.432064 #> [10,] 6.432092 4.939074 4.941362 5.794447 5.806702 5.633277 5.696069 5.421332 #> [11,] 6.428936 4.927739 4.930040 5.787798 5.800121 5.625746 5.688882 5.412639 #>        Na_1500   Na_250   Na_750    Ox_44    Ro_12   Ro_125    Ro_25   Tr_100 #>  [1,] 7.008180 7.008180 7.008180 7.008180 7.008180 7.008180 7.008180 7.008180 #>  [2,] 5.959423 6.884345 6.134069 5.927108 6.160677 5.135136 5.908427 6.553351 #>  [3,] 5.743675 6.858881 5.954256 5.704668 5.986330 4.749769 5.682173 6.459789 #>  [4,] 5.650543 6.847890 5.876636 5.608643 5.911069 4.583414 5.584504 6.419401 #>  [5,] 5.598625 6.841763 5.833367 5.555112 5.869115 4.490676 5.530057 6.396887 #>  [6,] 5.565520 6.837857 5.805776 5.520977 5.842363 4.431541 5.495339 6.382531 #>  [7,] 5.542571 6.835148 5.786650 5.497314 5.823817 4.390547 5.471272 6.372579 #>  [8,] 5.525725 6.833161 5.772610 5.479944 5.810204 4.360456 5.453605 6.365274 #>  [9,] 5.512834 6.831640 5.761867 5.466652 5.799787 4.337429 5.440086 6.359683 #> [10,] 5.502651 6.830438 5.753380 5.456152 5.791558 4.319239 5.429407 6.355268 #> [11,] 5.494405 6.829465 5.746507 5.447649 5.784894 4.304508 5.420758 6.351691 #>         Tr_200   Tr_300   Tr_400    Va_10    Va_20     Va_5 #>  [1,] 7.008180 7.008180 7.008180 7.008180 7.008180 7.008180 #>  [2,] 6.483499 6.228098 6.189451 6.214393 6.076830 6.186477 #>  [3,] 6.375562 6.067623 6.021044 6.051101 5.885252 6.017456 #>  [4,] 6.328969 5.998351 5.948351 5.980614 5.802556 5.944496 #>  [5,] 6.302995 5.959735 5.907827 5.941320 5.756457 5.903825 #>  [6,] 6.286433 5.935112 5.881988 5.916264 5.727062 5.877891 #>  [7,] 6.274952 5.918042 5.864076 5.898895 5.706684 5.859913 #>  [8,] 6.266524 5.905512 5.850927 5.886145 5.691727 5.846717 #>  [9,] 6.260075 5.895924 5.840866 5.876389 5.680280 5.836618 #> [10,] 6.254981 5.888350 5.832918 5.868682 5.671239 5.828641 #> [11,] 6.250855 5.882216 5.826481 5.862440 5.663916 5.822181  # Predict responses using the original dataset to estimate the network reference #treatment response paindata.ref <- osteopain[osteopain$treatname==\"Placebo_0\",] preds <- predict(emax, times=c(5:15),   E0=10,   ref.resp=paindata.ref) #> Data frame must contain only data from reference treatment #> Studies reporting change from baseline automatically identified from ref.resp #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 113 #>    Unobserved stochastic nodes: 31 #>    Total graph size: 2037 #>  #> Initializing model #>  summary(preds) #>       time     Pl_0   Ce_100   Ce_200   Ce_400    Du_90    Et_10    Et_30 #>  [1,]    5 8.534527 8.013399 7.778166 7.691494 8.013979 8.435178 7.540429 #>  [2,]    6 8.511218 7.981802 7.742825 7.654773 7.982392 8.410290 7.501307 #>  [3,]    7 8.494109 7.958609 7.716883 7.627819 7.959207 8.392022 7.472590 #>  [4,]    8 8.481017 7.940861 7.697032 7.607193 7.941464 8.378042 7.450615 #>  [5,]    9 8.470675 7.926841 7.681351 7.590900 7.927449 8.366999 7.433256 #>  [6,]   10 8.462299 7.915487 7.668651 7.577704 7.916099 8.358056 7.419198 #>  [7,]   11 8.455377 7.906104 7.658156 7.566800 7.906719 8.350665 7.407580 #>  [8,]   12 8.449561 7.898220 7.649338 7.557637 7.898837 8.344455 7.397819 #>  [9,]   13 8.444606 7.891503 7.641824 7.549830 7.892122 8.339164 7.389501 #> [10,]   14 8.440333 7.885710 7.635345 7.543098 7.886331 8.334602 7.382329 #> [11,]   15 8.436611 7.880664 7.629702 7.537234 7.881287 8.330627 7.376081 #>           Et_5    Et_60    Et_90   Lu_100   Lu_200   Lu_400    Lu_NA  Na_1000 #>  [1,] 8.435530 7.004864 7.007055 7.824515 7.836257 7.670072 7.730240 7.466978 #>  [2,] 8.410646 6.957220 6.959446 7.789910 7.801840 7.633012 7.694138 7.426687 #>  [3,] 8.392381 6.922248 6.924500 7.764510 7.776577 7.605809 7.667638 7.397112 #>  [4,] 8.378404 6.895485 6.897757 7.745072 7.757245 7.584992 7.647359 7.374480 #>  [5,] 8.367363 6.874345 6.876633 7.729718 7.741974 7.568549 7.631341 7.356603 #>  [6,] 8.358422 6.857225 6.859525 7.717283 7.729606 7.555232 7.618367 7.342125 #>  [7,] 8.351033 6.843076 6.845387 7.707007 7.719386 7.544226 7.607647 7.330160 #>  [8,] 8.344824 6.831188 6.833508 7.698373 7.710798 7.534979 7.598639 7.320107 #>  [9,] 8.339533 6.821058 6.823386 7.691016 7.703481 7.527100 7.590963 7.311540 #> [10,] 8.334972 6.812324 6.814658 7.684672 7.697172 7.520306 7.584345 7.304154 #> [11,] 8.330998 6.804715 6.807055 7.679146 7.691675 7.514388 7.578579 7.297720 #>        Na_1500   Na_250   Na_750    Ox_44    Ro_12   Ro_125    Ro_25   Tr_100 #>  [1,] 7.544902 8.817239 7.785158 7.500359 7.821745 6.410923 7.474721 8.361913 #>  [2,] 7.505851 8.798428 7.749930 7.460594 7.787097 6.353827 7.434551 8.335859 #>  [3,] 7.477186 8.784621 7.724071 7.431405 7.761665 6.311917 7.405066 8.316734 #>  [4,] 7.455250 8.774055 7.704283 7.409068 7.742203 6.279845 7.382502 8.302099 #>  [5,] 7.437923 8.765709 7.688652 7.391424 7.726830 6.254511 7.364678 8.290539 #>  [6,] 7.423890 8.758950 7.675992 7.377134 7.714379 6.233993 7.350243 8.281177 #>  [7,] 7.412293 8.753364 7.665531 7.365325 7.704091 6.217038 7.338315 8.273440 #>  [8,] 7.402549 8.748671 7.656741 7.355403 7.695445 6.202791 7.328291 8.266939 #>  [9,] 7.394247 8.744672 7.649251 7.346949 7.688079 6.190652 7.319751 8.261399 #> [10,] 7.387088 8.741224 7.642793 7.339659 7.681727 6.180185 7.312387 8.256623 #> [11,] 7.380851 8.738220 7.637167 7.333308 7.676194 6.171067 7.305972 8.252462 #>         Tr_200   Tr_300   Tr_400    Va_10    Va_20     Va_5 #>  [1,] 8.265815 7.914494 7.861370 7.895646 7.706444 7.857273 #>  [2,] 8.238232 7.881322 7.827355 7.862175 7.669964 7.823193 #>  [3,] 8.217985 7.856973 7.802388 7.837606 7.643187 7.798177 #>  [4,] 8.202491 7.838340 7.783281 7.818804 7.622696 7.779034 #>  [5,] 8.190252 7.823622 7.768189 7.803953 7.606510 7.763913 #>  [6,] 8.180340 7.811702 7.755966 7.791925 7.593402 7.751666 #>  [7,] 8.172149 7.801851 7.745865 7.781986 7.582569 7.741546 #>  [8,] 8.165267 7.793574 7.737378 7.773634 7.573467 7.733042 #>  [9,] 8.159402 7.786521 7.730147 7.766518 7.565711 7.725797 #> [10,] 8.154345 7.780440 7.723911 7.760382 7.559023 7.719549 #> [11,] 8.149940 7.775143 7.718479 7.755036 7.553198 7.714107  # Repeat the above prediction but using a random effects meta-analysis of the #network reference treatment response preds <- predict(emax, times=c(5:15),   E0=10,   ref.resp=paindata.ref,   synth=\"random\") #> Data frame must contain only data from reference treatment #> Studies reporting change from baseline automatically identified from ref.resp #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 113 #>    Unobserved stochastic nodes: 61 #>    Total graph size: 2261 #>  #> Initializing model #>  summary(preds) #>       time     Pl_0   Ce_100   Ce_200   Ce_400    Du_90    Et_10    Et_30 #>  [1,]    5 8.527112 8.005983 7.770750 7.684078 8.006564 8.427763 7.533014 #>  [2,]    6 8.503711 7.974294 7.735317 7.647265 7.974885 8.402783 7.493799 #>  [3,]    7 8.486534 7.951034 7.709308 7.620244 7.951632 8.384447 7.465015 #>  [4,]    8 8.473390 7.933234 7.689405 7.599566 7.933838 8.370416 7.442989 #>  [5,]    9 8.463008 7.919174 7.673684 7.583233 7.919782 8.359333 7.425590 #>  [6,]   10 8.454600 7.907788 7.660952 7.570005 7.908399 8.350357 7.411499 #>  [7,]   11 8.447651 7.898378 7.650430 7.559074 7.898993 8.342939 7.399854 #>  [8,]   12 8.441813 7.890472 7.641589 7.549889 7.891089 8.336707 7.390070 #>  [9,]   13 8.436838 7.883735 7.634057 7.542062 7.884354 8.331396 7.381733 #> [10,]   14 8.432549 7.877926 7.627561 7.535314 7.878547 8.326818 7.374545 #> [11,]   15 8.428812 7.872866 7.621903 7.529436 7.873489 8.322829 7.368283 #>           Et_5    Et_60    Et_90   Lu_100   Lu_200   Lu_400    Lu_NA  Na_1000 #>  [1,] 8.428115 6.997449 6.999640 7.817100 7.828841 7.662657 7.722825 7.459563 #>  [2,] 8.403139 6.949712 6.951938 7.782403 7.794332 7.625505 7.686630 7.419179 #>  [3,] 8.384806 6.914673 6.916925 7.756935 7.769002 7.598234 7.660063 7.389537 #>  [4,] 8.370778 6.887859 6.890131 7.737446 7.749618 7.577366 7.639733 7.366854 #>  [5,] 8.359697 6.866679 6.868966 7.722051 7.734307 7.560882 7.623674 7.348936 #>  [6,] 8.350722 6.849525 6.851826 7.709584 7.721907 7.547532 7.610668 7.334425 #>  [7,] 8.343306 6.835350 6.837661 7.699281 7.711660 7.536500 7.599921 7.322434 #>  [8,] 8.337075 6.823439 6.825759 7.690624 7.703050 7.527231 7.590890 7.312358 #>  [9,] 8.331766 6.813291 6.815618 7.683248 7.695713 7.519332 7.583195 7.303773 #> [10,] 8.327188 6.804540 6.806874 7.676888 7.689387 7.512522 7.576561 7.296370 #> [11,] 8.323199 6.796917 6.799257 7.671347 7.683877 7.506589 7.570781 7.289921 #>        Na_1500   Na_250   Na_750    Ox_44    Ro_12   Ro_125    Ro_25   Tr_100 #>  [1,] 7.537487 8.809823 7.777743 7.492944 7.814330 6.403508 7.467306 8.354498 #>  [2,] 7.498343 8.790921 7.742422 7.453086 7.779589 6.346319 7.427044 8.328351 #>  [3,] 7.469611 8.777046 7.716496 7.423830 7.754090 6.304342 7.397491 8.309159 #>  [4,] 7.447624 8.766429 7.696656 7.401442 7.734577 6.272218 7.374875 8.294473 #>  [5,] 7.430256 8.758043 7.680985 7.383757 7.719163 6.246844 7.357011 8.282872 #>  [6,] 7.416191 8.751251 7.668293 7.369435 7.706680 6.226294 7.342544 8.273477 #>  [7,] 7.404567 8.745638 7.657805 7.357599 7.696365 6.209312 7.330588 8.265714 #>  [8,] 7.394801 8.740922 7.648992 7.347655 7.687697 6.195043 7.320543 8.259190 #>  [9,] 7.386479 8.736904 7.641483 7.339181 7.680311 6.182884 7.311983 8.253632 #> [10,] 7.379303 8.733440 7.635008 7.331874 7.673943 6.172401 7.304603 8.248839 #> [11,] 7.373053 8.730421 7.629368 7.325510 7.668396 6.163268 7.298173 8.244664 #>         Tr_200   Tr_300   Tr_400    Va_10    Va_20     Va_5 #>  [1,] 8.258400 7.907079 7.853955 7.888231 7.699029 7.849858 #>  [2,] 8.230724 7.873814 7.819848 7.854667 7.662456 7.815685 #>  [3,] 8.210410 7.849398 7.794813 7.830031 7.635612 7.790602 #>  [4,] 8.194864 7.830714 7.775655 7.811178 7.615070 7.771408 #>  [5,] 8.182585 7.815955 7.760522 7.796286 7.598844 7.756246 #>  [6,] 8.172641 7.804002 7.748267 7.784226 7.585702 7.743967 #>  [7,] 8.164423 7.794125 7.738139 7.774260 7.574843 7.733820 #>  [8,] 8.157518 7.785825 7.729630 7.765885 7.565718 7.725294 #>  [9,] 8.151634 7.778754 7.722379 7.758750 7.557943 7.718029 #> [10,] 8.146561 7.772656 7.716127 7.752598 7.551239 7.711765 #> [11,] 8.142142 7.767344 7.710681 7.747238 7.545399 7.706308 # }"},{"path":"/reference/print.mb.network.html","id":null,"dir":"Reference","previous_headings":"","what":"Print mb.network information to the console — print.mb.network","title":"Print mb.network information to the console — print.mb.network","text":"Print mb.network information console","code":""},{"path":"/reference/print.mb.network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print mb.network information to the console — print.mb.network","text":"","code":"# S3 method for mb.network print(x, ...)"},{"path":"/reference/print.mb.network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print mb.network information to the console — print.mb.network","text":"x object class mb.network. ... arguments passed methods","code":""},{"path":"/reference/print.mb.predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Print summary information from an mb.predict object — print.mb.predict","title":"Print summary information from an mb.predict object — print.mb.predict","text":"Print summary information mb.predict object","code":""},{"path":"/reference/print.mb.predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print summary information from an mb.predict object — print.mb.predict","text":"","code":"# S3 method for mb.predict print(x, ...)"},{"path":"/reference/print.mb.predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print summary information from an mb.predict object — print.mb.predict","text":"x object class(\"mb.predict\") generated predict.mbnma() ... arguments passed methods","code":""},{"path":"/reference/print.mb.rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a summary of rankings for each parameter — print.mb.rank","title":"Prints a summary of rankings for each parameter — print.mb.rank","text":"Prints summary rankings parameter","code":""},{"path":"/reference/print.mb.rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a summary of rankings for each parameter — print.mb.rank","text":"","code":"# S3 method for mb.rank print(x, ...)"},{"path":"/reference/print.mb.rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a summary of rankings for each parameter — print.mb.rank","text":"x object class \"mb.rank\" generated rank.mbnma() ... arguments passed methods","code":""},{"path":"/reference/print.nodesplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints basic results from a node-split to the console — print.nodesplit","title":"Prints basic results from a node-split to the console — print.nodesplit","text":"Prints basic results node-split console","code":""},{"path":"/reference/print.nodesplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints basic results from a node-split to the console — print.nodesplit","text":"","code":"# S3 method for nodesplit print(x, groupby = \"time.param\", ...)"},{"path":"/reference/print.nodesplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints basic results from a node-split to the console — print.nodesplit","text":"x object class \"nodesplit\" generated mb.nodeplit() groupby character object can take value \"time.param\" present results grouped time-course parameter (default) \"comparison\" present results grouped treatment comparison. ... arguments sent knitr::kable()","code":""},{"path":"/reference/print.relative.array.html","id":null,"dir":"Reference","previous_headings":"","what":"Print posterior medians (95% credible intervals) for table of relative effects/mean\ndifferences between treatments/classes — print.relative.array","title":"Print posterior medians (95% credible intervals) for table of relative effects/mean\ndifferences between treatments/classes — print.relative.array","text":"Print posterior medians (95% credible intervals) table relative effects/mean differences treatments/classes","code":""},{"path":"/reference/print.relative.array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print posterior medians (95% credible intervals) for table of relative effects/mean\ndifferences between treatments/classes — print.relative.array","text":"","code":"# S3 method for relative.array print(x, digits = 2, ...)"},{"path":"/reference/print.relative.array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print posterior medians (95% credible intervals) for table of relative effects/mean\ndifferences between treatments/classes — print.relative.array","text":"x object class \"relative.array\" generated get.relative() digits integer indicating number significant digits used. ... arguments passed knitr::kable","code":""},{"path":"/reference/radian.rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate position of label with respect to vertex location within a circle — radian.rescale","title":"Calculate position of label with respect to vertex location within a circle — radian.rescale","text":"Useful graphs drawn using igraph reposition labels relative vertices vertices laid circle (common network plots). igraph interprets position within vertex.label.degree radians, necessary convert locations radian values. main role function.","code":""},{"path":"/reference/radian.rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate position of label with respect to vertex location within a circle — radian.rescale","text":"","code":"radian.rescale(x, start = 0, direction = 1)"},{"path":"/reference/radian.rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate position of label with respect to vertex location within a circle — radian.rescale","text":"x numeric vector positions around circle, typically sequentially numbered. start number giving offset 12 o'clock radians label locations. direction Either 1 clockwise numbering (based order x) -1 anti-clockwise.","code":""},{"path":"/reference/radian.rescale.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate position of label with respect to vertex location within a circle — radian.rescale","text":"https://gist.github.com/kjhealy/834774/a4e677401fd6e4c319135dabeaf9894393f9392c","code":""},{"path":"/reference/radian.rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate position of label with respect to vertex location within a circle — radian.rescale","text":"","code":"MBNMAtime:::radian.rescale(c(1:10), start=0, direction=1) #>  [1] 0.0000000 0.6981317 1.3962634 2.0943951 2.7925268 3.4906585 4.1887902 #>  [8] 4.8869219 5.5850536 0.0000000"},{"path":"/reference/rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Set rank as a method — rank","title":"Set rank as a method — rank","text":"Set rank method","code":""},{"path":"/reference/rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set rank as a method — rank","text":"","code":"rank(x, ...)"},{"path":"/reference/rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set rank as a method — rank","text":"x object apply rank method ... Arguments passed methods","code":""},{"path":"/reference/rank.mb.predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank predictions at a specific time point — rank.mb.predict","title":"Rank predictions at a specific time point — rank.mb.predict","text":"Rank predictions specific time point","code":""},{"path":"/reference/rank.mb.predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank predictions at a specific time point — rank.mb.predict","text":"","code":"# S3 method for mb.predict rank(   x,   time = max(x$summary[[1]]$time),   lower_better = FALSE,   treats = names(x$summary),   ... )"},{"path":"/reference/rank.mb.predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank predictions at a specific time point — rank.mb.predict","text":"x object class(\"mb.predict\") contains predictions MBNMA model time number indicating time point predictions ranked. must one time points predictions x available. lower_better Indicates whether negative responses better (lower_better=TRUE) positive responses better (lower_better=FALSE) treats character vector treatment/class names responses predicted x default, rankings calculated treatments/classes x. ... Arguments passed methods","code":""},{"path":"/reference/rank.mb.predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank predictions at a specific time point — rank.mb.predict","text":"Returns object class(\"mb.rank\") containing ranked predictions","code":""},{"path":"/reference/rank.mb.predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rank predictions at a specific time point — rank.mb.predict","text":"","code":"# \\donttest{ # Create an mb.network object from a dataset network <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Run an MBNMA model with an Emax time-course emax <- mb.run(network,   fun=temax(pool.emax=\"rel\", method.emax=\"common\",     pool.et50=\"abs\", method.et50=\"common\")) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 89 #>    Total graph size: 7703 #>  #> Initializing model #>   # Predict responses using a stochastic baseline (E0) and a distribution for the #network reference treatment preds <- predict(emax, E0=7,   ref.resp=list(emax=~rnorm(n, -0.5, 0.05))) #> Priors required for: mu.1 #> Success: Elements in prior match consistency time-course treatment effect parameters  # Rank predictions at latest predicted time-point rank(preds, lower_better=TRUE) #>  #> ======================================== #> Treatment rankings #> ========================================  #>  #> Predictions at time = 24 ranking #>  #> |Treatment |  Mean| Median|  2.5%| 97.5%| #> |:---------|-----:|------:|-----:|-----:| #> |Pl_0      | 27.60|     28| 26.00| 28.00| #> |Ce_100    | 21.90|     22| 18.00| 23.00| #> |Ce_200    | 13.69|     14| 11.00| 17.00| #> |Ce_400    | 10.85|     10|  7.00| 17.00| #> |Du_90     | 20.88|     22| 11.00| 24.03| #> |Et_10     | 26.35|     26| 24.00| 28.00| #> |Et_30     |  6.90|      7|  4.00|  9.00| #> |Et_5      | 26.28|     26| 24.00| 28.00| #> |Et_60     |  2.50|      2|  2.00|  3.00| #> |Et_90     |  2.52|      3|  2.00|  3.00| #> |Lu_100    | 16.16|     16| 12.00| 20.00| #> |Lu_200    | 16.80|     17| 12.00| 21.00| #> |Lu_400    | 10.05|     10|  7.00| 13.00| #> |Lu_NA     | 12.46|     12|  7.00| 21.00| #> |Na_1000   |  5.09|      5|  4.00|  7.00| #> |Na_1500   |  7.03|      7|  5.00|  9.03| #> |Na_250    | 28.98|     29| 29.00| 29.00| #> |Na_750    | 14.41|     14|  9.00| 20.00| #> |Ox_44     |  7.02|      6|  4.00| 18.00| #> |Ro_12     | 16.03|     16| 10.00| 22.00| #> |Ro_125    |  1.00|      1|  1.00|  1.00| #> |Ro_25     |  5.61|      5|  4.00|  9.00| #> |Tr_100    | 25.51|     25| 24.00| 27.00| #> |Tr_200    | 24.16|     24| 23.00| 26.00| #> |Tr_300    | 19.81|     20| 15.00| 23.00| #> |Tr_400    | 17.63|     18| 11.00| 22.00| #> |Va_10     | 18.79|     20| 11.98| 23.00| #> |Va_20     | 11.50|     11|  7.00| 19.00| #> |Va_5      | 17.51|     18| 11.00| 23.00| #>  #>    #### Rank predictions at 5 weeks follow-up ####  # First ensure responses are predicted at 5 weeks preds <- predict(emax, E0=7,   ref.resp=list(emax=~rnorm(n, -0.5, 0.05)),   times=c(0,5,10)) #> Priors required for: mu.1 #> Success: Elements in prior match consistency time-course treatment effect parameters  # Rank predictions at 5 weeks follow-up ranks <- rank(preds, lower_better=TRUE, time=5)  # Plot ranks plot(ranks)   # }"},{"path":"/reference/rank.mbnma.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank parameters from a time-course MBNMA — rank.mbnma","title":"Rank parameters from a time-course MBNMA — rank.mbnma","text":"Ranks desired parameters saved time-course MBNMA model \"best\" \"worst\".","code":""},{"path":"/reference/rank.mbnma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank parameters from a time-course MBNMA — rank.mbnma","text":"","code":"# S3 method for mbnma rank(   x,   params = \"auc\",   lower_better = FALSE,   treats = NULL,   int.range = NULL,   level = \"treatment\",   n.iter = x$BUGSoutput$n.sims,   ... )"},{"path":"/reference/rank.mbnma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank parameters from a time-course MBNMA — rank.mbnma","text":"x object class \"mb.predict\" generated predict(\"mbnma\") params character vector containing model parameters monitored mbnma ranking desired (e.g. \"beta.1\", \"emax\"). Parameters must vary treatment ranking possible. Can include \"auc\" (see details). lower_better Indicates whether negative responses better (lower_better=TRUE) positive responses better (lower_better=FALSE) treats character vector treatment/class names (depending value level) numeric vector treatment/class codes (coded mbnma) indicate treatments/classes calculate rankings . left `NULL`` rankings calculated treatments/classes. int.range numeric vector two elements indicates range calculate AUC. Takes form c(lower bound, upper bound). left NULL (default) range zero maximum follow-time dataset. level character object indicate whether parameters ranked treatment level (\"treatment\") class level (\"class\"). n.iter number iterations calculate AUC (\"auc\" included params). Must positive integer. Default value used mbnma. ... Arguments sent integrate()","code":""},{"path":"/reference/rank.mbnma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank parameters from a time-course MBNMA — rank.mbnma","text":"named list whose elements correspond parameters given params. element contains: summary.rank data frame containing mean, sd, quantiles ranks treatment given treats prob.matrix matrix proportions MCMC results treatment treats ranked position given parameter rank.matrix matrix ranks MCMC results treatment treats given parameter.","code":""},{"path":"/reference/rank.mbnma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rank parameters from a time-course MBNMA — rank.mbnma","text":"\"auc\" can included params rank treatments based Area Curve (AUC). accounts effect multiple time-course parameters simultaneously treatment response, impacted range time AUC calculated (int.range). requires integration int.range can take time run (particularly) spline functions uses trapezoid method rather adaptive quadrature). post-estimation functions, rank() performed models successfully converged. Note rankings can sensitive even small changes treatment effects therefore failure converge one parameter may substantial impact rankings.","code":""},{"path":"/reference/rank.mbnma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rank parameters from a time-course MBNMA — rank.mbnma","text":"","code":"# \\donttest{ # Create an mb.network object from a dataset network <- mb.network(alog_pcfb) #> Reference treatment is `placebo` #> Studies reporting change from baseline automatically identified from the data  # Run an MBNMA model with an Emax time-course emax <- mb.run(network,   fun=temax(pool.emax=\"rel\", method.emax=\"common\",             pool.et50=\"rel\", method.et50=\"random\"),   intercept=FALSE) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 233 #>    Unobserved stochastic nodes: 71 #>    Total graph size: 4363 #>  #> Initializing model #>   # Rank treatments by time-course parameter from the model with lower scores being better rank(emax, params=c(\"emax\", \"et50\"), lower_better=TRUE) #>  #> ======================================== #> Treatment rankings #> ========================================  #>  #> emax ranking #>  #> |Treatment | Mean| Median| 2.5%| 97.5%| #> |:---------|----:|------:|----:|-----:| #> |placebo   | 6.00|      6|    6|     6| #> |alog_6.25 | 4.86|      5|    4|     5| #> |alog_12.5 | 4.06|      4|    3|     5| #> |alog_25   | 2.98|      3|    2|     3| #> |alog_50   | 1.94|      2|    1|     2| #> |alog_100  | 1.16|      1|    1|     5| #>  #>  #> et50 ranking #>  #> |Treatment | Mean| Median| 2.5%| 97.5%| #> |:---------|----:|------:|----:|-----:| #> |placebo   | 1.00|      1|    1|     1| #> |alog_6.25 | 4.52|      5|    2|     6| #> |alog_12.5 | 2.88|      3|    2|     5| #> |alog_25   | 2.85|      3|    2|     5| #> |alog_50   | 4.06|      4|    2|     6| #> |alog_100  | 5.68|      6|    3|     6| #>  #>   # Rank treatments 1-3 by AUC rank(emax, params=\"auc\", treats=c(1:3), lower_better=TRUE,   int.range=c(0,20)) #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |==                                                                    |   4%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15%   |                                                                               |===========                                                           |  15%   |                                                                               |===========                                                           |  16%   |                                                                               |============                                                          |  16%   |                                                                               |============                                                          |  17%   |                                                                               |============                                                          |  18%   |                                                                               |=============                                                         |  18%   |                                                                               |=============                                                         |  19%   |                                                                               |==============                                                        |  19%   |                                                                               |==============                                                        |  20%   |                                                                               |==============                                                        |  21%   |                                                                               |===============                                                       |  21%   |                                                                               |===============                                                       |  22%   |                                                                               |================                                                      |  22%   |                                                                               |================                                                      |  23%   |                                                                               |================                                                      |  24%   |                                                                               |=================                                                     |  24%   |                                                                               |=================                                                     |  25%   |                                                                               |==================                                                    |  25%   |                                                                               |==================                                                    |  26%   |                                                                               |===================                                                   |  26%   |                                                                               |===================                                                   |  27%   |                                                                               |===================                                                   |  28%   |                                                                               |====================                                                  |  28%   |                                                                               |====================                                                  |  29%   |                                                                               |=====================                                                 |  29%   |                                                                               |=====================                                                 |  30%   |                                                                               |=====================                                                 |  31%   |                                                                               |======================                                                |  31%   |                                                                               |======================                                                |  32%   |                                                                               |=======================                                               |  32%   |                                                                               |=======================                                               |  33%   |                                                                               |=======================                                               |  34%   |                                                                               |========================                                              |  34%   |                                                                               |========================                                              |  35%   |                                                                               |=========================                                             |  35%   |                                                                               |=========================                                             |  36%   |                                                                               |==========================                                            |  36%   |                                                                               |==========================                                            |  37%   |                                                                               |==========================                                            |  38%   |                                                                               |===========================                                           |  38%   |                                                                               |===========================                                           |  39%   |                                                                               |============================                                          |  39%   |                                                                               |============================                                          |  40%   |                                                                               |============================                                          |  41%   |                                                                               |=============================                                         |  41%   |                                                                               |=============================                                         |  42%   |                                                                               |==============================                                        |  42%   |                                                                               |==============================                                        |  43%   |                                                                               |==============================                                        |  44%   |                                                                               |===============================                                       |  44%   |                                                                               |===============================                                       |  45%   |                                                                               |================================                                      |  45%   |                                                                               |================================                                      |  46%   |                                                                               |=================================                                     |  46%   |                                                                               |=================================                                     |  47%   |                                                                               |=================================                                     |  48%   |                                                                               |==================================                                    |  48%   |                                                                               |==================================                                    |  49%   |                                                                               |===================================                                   |  49%   |                                                                               |===================================                                   |  50%   |                                                                               |===================================                                   |  51%   |                                                                               |====================================                                  |  51%   |                                                                               |====================================                                  |  52%   |                                                                               |=====================================                                 |  52%   |                                                                               |=====================================                                 |  53%   |                                                                               |=====================================                                 |  54%   |                                                                               |======================================                                |  54%   |                                                                               |======================================                                |  55%   |                                                                               |=======================================                               |  55%   |                                                                               |=======================================                               |  56%   |                                                                               |========================================                              |  56%   |                                                                               |========================================                              |  57%   |                                                                               |========================================                              |  58%   |                                                                               |=========================================                             |  58%   |                                                                               |=========================================                             |  59%   |                                                                               |==========================================                            |  59%   |                                                                               |==========================================                            |  60%   |                                                                               |==========================================                            |  61%   |                                                                               |===========================================                           |  61%   |                                                                               |===========================================                           |  62%   |                                                                               |============================================                          |  62%   |                                                                               |============================================                          |  63%   |                                                                               |============================================                          |  64%   |                                                                               |=============================================                         |  64%   |                                                                               |=============================================                         |  65%   |                                                                               |==============================================                        |  65%   |                                                                               |==============================================                        |  66%   |                                                                               |===============================================                       |  66%   |                                                                               |===============================================                       |  67%   |                                                                               |===============================================                       |  68%   |                                                                               |================================================                      |  68%   |                                                                               |================================================                      |  69%   |                                                                               |=================================================                     |  69%   |                                                                               |=================================================                     |  70%   |                                                                               |=================================================                     |  71%   |                                                                               |==================================================                    |  71%   |                                                                               |==================================================                    |  72%   |                                                                               |===================================================                   |  72%   |                                                                               |===================================================                   |  73%   |                                                                               |===================================================                   |  74%   |                                                                               |====================================================                  |  74%   |                                                                               |====================================================                  |  75%   |                                                                               |=====================================================                 |  75%   |                                                                               |=====================================================                 |  76%   |                                                                               |======================================================                |  76%   |                                                                               |======================================================                |  77%   |                                                                               |======================================================                |  78%   |                                                                               |=======================================================               |  78%   |                                                                               |=======================================================               |  79%   |                                                                               |========================================================              |  79%   |                                                                               |========================================================              |  80%   |                                                                               |========================================================              |  81%   |                                                                               |=========================================================             |  81%   |                                                                               |=========================================================             |  82%   |                                                                               |==========================================================            |  82%   |                                                                               |==========================================================            |  83%   |                                                                               |==========================================================            |  84%   |                                                                               |===========================================================           |  84%   |                                                                               |===========================================================           |  85%   |                                                                               |============================================================          |  85%   |                                                                               |============================================================          |  86%   |                                                                               |=============================================================         |  86%   |                                                                               |=============================================================         |  87%   |                                                                               |=============================================================         |  88%   |                                                                               |==============================================================        |  88%   |                                                                               |==============================================================        |  89%   |                                                                               |===============================================================       |  89%   |                                                                               |===============================================================       |  90%   |                                                                               |===============================================================       |  91%   |                                                                               |================================================================      |  91%   |                                                                               |================================================================      |  92%   |                                                                               |=================================================================     |  92%   |                                                                               |=================================================================     |  93%   |                                                                               |=================================================================     |  94%   |                                                                               |==================================================================    |  94%   |                                                                               |==================================================================    |  95%   |                                                                               |===================================================================   |  95%   |                                                                               |===================================================================   |  96%   |                                                                               |====================================================================  |  96%   |                                                                               |====================================================================  |  97%   |                                                                               |====================================================================  |  98%   |                                                                               |===================================================================== |  98%   |                                                                               |===================================================================== |  99%   |                                                                               |======================================================================|  99%   |                                                                               |======================================================================| 100% #>  #> ======================================== #> Treatment rankings #> ========================================  #>  #> auc ranking #>  #> |Treatment | Mean| Median| 2.5%| 97.5%| #> |:---------|----:|------:|----:|-----:| #> |placebo   | 3.00|      3|    3|     3| #> |alog_6.25 | 1.92|      2|    1|     2| #> |alog_12.5 | 1.08|      1|    1|     2| #>  #>  # }"},{"path":"/reference/rankauc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates ranking probabilities for AUC from a time-course MBNMA — rankauc","title":"Calculates ranking probabilities for AUC from a time-course MBNMA — rankauc","text":"Calculates ranking probabilities AUC time-course MBNMA","code":""},{"path":"/reference/rankauc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates ranking probabilities for AUC from a time-course MBNMA — rankauc","text":"","code":"rankauc(   mbnma,   lower_better = FALSE,   treats = NULL,   level = \"treatments\",   int.range = c(0, max(mbnma$network$data.ab$time)),   n.iter = mbnma$BUGSoutput$n.sims,   subdivisions = 100,   ... )"},{"path":"/reference/rankauc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates ranking probabilities for AUC from a time-course MBNMA — rankauc","text":"mbnma S3 object class \"mbnma\" generated running time-course MBNMA model lower_better Indicates whether negative responses better (lower_better=TRUE) positive responses better (lower_better=FALSE) treats character vector treatment/class names (depending value level). left NULL`` rankings calculated treatments/classes. Note unlike rank.mbnma()` argument take numeric vector. level Can take either \"treatment\" make predictions treatments, \"class\" make predictions classes (case object must class effect model). int.range numeric vector two elements indicates range calculate AUC. Takes form c(lower bound, upper bound). left NULL (default) range zero maximum follow-time dataset. n.iter number iterations calculate AUC (\"auc\" included params). Must positive integer. Default value used mbnma. subdivisions number subdivisions integrate (see integrate) ... Arguments sent R2jags synthesis network reference treatment effect (using ref.synth())","code":""},{"path":"/reference/rankauc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates ranking probabilities for AUC from a time-course MBNMA — rankauc","text":"named list whose elements correspond parameters given params. element contains: summary.rank data frame containing mean, sd, quantiles ranks treatment given treats prob.matrix matrix proportions MCMC results treatment treats ranked position given parameter rank.matrix matrix ranks MCMC results treatment treats given parameter.","code":""},{"path":"/reference/rankauc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates ranking probabilities for AUC from a time-course MBNMA — rankauc","text":"\"auc\" can included params rank treatments based Area Curve (AUC). accounts effect multiple time-course parameters simultaneously treatment response, impacted range time AUC calculated (int.range). requires integration int.range can take time run (particularly) spline functions uses trapezoid method rather adaptive quadrature). post-estimation functions, rank() performed models successfully converged. Note rankings can sensitive even small changes treatment effects therefore failure converge one parameter may substantial impact rankings.","code":""},{"path":"/reference/ref.comparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify unique comparisons relative to study reference treatment within a\nnetwork — ref.comparisons","title":"Identify unique comparisons relative to study reference treatment within a\nnetwork — ref.comparisons","text":"Identify unique contrasts relative study reference within network. Repetitions treatment comparison grouped together.","code":""},{"path":"/reference/ref.comparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify unique comparisons relative to study reference treatment within a\nnetwork — ref.comparisons","text":"","code":"ref.comparisons(data)"},{"path":"/reference/ref.comparisons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify unique comparisons relative to study reference treatment within a\nnetwork — ref.comparisons","text":"data data frame containing variables studyID treatment (numeric codes) indicate treatments used studies.","code":""},{"path":"/reference/ref.comparisons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify unique comparisons relative to study reference treatment within a\nnetwork — ref.comparisons","text":"data frame unique comparisons row represents different comparison. t1 t2 indicate treatment codes make comparison. nr indicates number times given comparison made within network. single observation study within dataset (.e. standard network meta-analysis) nr represent number studies compare treatments t1 t2. multiple observations study within dataset (MBNMAtime) nr represent number time points dataset treatments t1 t2 compared.","code":""},{"path":"/reference/ref.comparisons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify unique comparisons relative to study reference treatment within a\nnetwork — ref.comparisons","text":"","code":"data <- data.frame(studyID=c(1,1,2,2,3,3,4,4,5,5,5),   treatment=c(1,2,1,3,2,3,3,4,1,2,4)   )  # Identify comparisons informed by direct and indirect evidence MBNMAtime:::ref.comparisons(data) #> # A tibble: 5 × 3 #> # Groups:   t1, t2 [5] #>      t1    t2    nr #>   <dbl> <dbl> <int> #> 1     1     2     2 #> 2     1     3     1 #> 3     1     4     1 #> 4     2     3     1 #> 5     3     4     1"},{"path":"/reference/ref.synth.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthesise single arm studies with repeated observations of the same\ntreatment over time — ref.synth","title":"Synthesise single arm studies with repeated observations of the same\ntreatment over time — ref.synth","text":"Synthesises single arm studies repeated measures applying particular time-course function. Used predicting mean responses time-course MBNMA. parameterisation time course must used MBNMA.","code":""},{"path":"/reference/ref.synth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthesise single arm studies with repeated observations of the same\ntreatment over time — ref.synth","text":"","code":"ref.synth(   data.ab,   mbnma,   synth = \"random\",   link = mbnma$model.arg$link,   n.iter = mbnma$BUGSoutput$n.iter,   n.burnin = mbnma$BUGSoutput$n.burnin,   n.thin = mbnma$BUGSoutput$n.thin,   n.chains = mbnma$BUGSoutput$n.chains,   ... )"},{"path":"/reference/ref.synth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synthesise single arm studies with repeated observations of the same\ntreatment over time — ref.synth","text":"data.ab data frame arm-level data \"long\" format containing columns: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating mean response given observation se Numeric data indicating standard error given observation mbnma S3 object class \"mbnma\" generated running time-course MBNMA model synth character object can take value \"common\" \"random\" specifies type pooling use synthesis ref.resp. Using \"random\" rather \"common\" synth result wider 95\\% CrI predictions. link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function). n.iter number total iterations per chain (including burn ;     default: 2000) n.burnin length burn , .e. number iterations     discard beginning. Default n.iter/2, ,     discarding first half simulations. n.burnin 0,     jags() run 100 iterations adaption. n.thin thinning rate. Must positive integer.  Set     n.thin > 1 save memory computation time     n.iter large.  Default max(1, floor(n.chains *     (n.iter-n.burnin) / 1000)) thin     least 2000 simulations. n.chains number Markov chains (default: 3) ... Arguments sent R2jags synthesis network reference treatment effect (using ref.synth())","code":""},{"path":"/reference/ref.synth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Synthesise single arm studies with repeated observations of the same\ntreatment over time — ref.synth","text":"list named elements corresponding time-course parameter within MBNMA model contain median posterior value network reference treatment response.","code":""},{"path":"/reference/ref.synth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthesise single arm studies with repeated observations of the same\ntreatment over time — ref.synth","text":"data.ab can collection studies closely resemble population interest intended prediction, different used estimate MBNMA model, include single arms RCTs observational studies. data available, data used estimate MBNMA model can used selecting studies arms specify network reference treatment responses.","code":""},{"path":"/reference/ref.synth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthesise single arm studies with repeated observations of the same\ntreatment over time — ref.synth","text":"","code":"# \\donttest{ # Create an mb.network object from a dataset network <- mb.network(osteopain) #> Reference treatment is `Pl_0` #> Studies reporting change from baseline automatically identified from the data  # Run an MBNMA model with an Emax time-course emax <- mb.run(network,   fun=temax(pool.emax=\"rel\", method.emax=\"common\",     pool.et50=\"abs\", method.et50=\"random\")) #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 417 #>    Unobserved stochastic nodes: 194 #>    Total graph size: 8210 #>  #> Initializing model #>   # Generate a set of studies with which to estimate the network reference treatment response paindata.ref <- osteopain[osteopain$treatname==\"Placebo_0\",]  # Estimate the network reference treatment effect using common effects meta-analysis ref.synth(data.ab=paindata.ref, mbnma=emax, synth=\"common\") #> Data frame must contain only data from reference treatment #> Studies reporting change from baseline automatically identified from ref.resp #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 113 #>    Unobserved stochastic nodes: 61 #>    Total graph size: 2261 #>  #> Initializing model #>  #> Inference for Bugs model at \"/tmp/RtmpklM6fB/file18c1e9aff\", fit using jags, #>  3 chains, each with 20000 iterations (first 10000 discarded), n.thin = 10 #>  n.sims = 3000 iterations saved #>          mu.vect sd.vect    2.5%     25%     50%     75%   97.5%  Rhat n.eff #> mu.1      -2.107   0.080  -2.269  -2.159  -2.107  -2.051  -1.953 1.004   520 #> deviance -39.190  12.398 -61.987 -47.850 -39.604 -31.331 -12.941 1.001  3000 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> DIC info (using the rule, pD = var(deviance)/2) #> pD = 76.9 and DIC = 37.7 #> DIC is an estimate of expected predictive error (lower deviance is better).  # Estimate the network reference treatment effect using random effects meta-analysis ref.synth(data.ab=paindata.ref, mbnma=emax, synth=\"random\") #> Data frame must contain only data from reference treatment #> Studies reporting change from baseline automatically identified from ref.resp #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 113 #>    Unobserved stochastic nodes: 91 #>    Total graph size: 2388 #>  #> Initializing model #>  #> Inference for Bugs model at \"/tmp/RtmpklM6fB/file18c13a67d877\", fit using jags, #>  3 chains, each with 20000 iterations (first 10000 discarded), n.thin = 10 #>  n.sims = 3000 iterations saved #>           mu.vect sd.vect     2.5%      25%      50%      75%    97.5%  Rhat #> mu.1       -1.647   0.147   -1.934   -1.745   -1.650   -1.549   -1.358 1.001 #> sd.mu.1     0.721   0.115    0.529    0.641    0.708    0.789    0.992 1.001 #> deviance -130.977  11.880 -152.678 -139.320 -131.377 -123.521 -105.768 1.001 #>          n.eff #> mu.1      2900 #> sd.mu.1   2900 #> deviance  3000 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> DIC info (using the rule, pD = var(deviance)/2) #> pD = 70.6 and DIC = -60.4 #> DIC is an estimate of expected predictive error (lower deviance is better). # }"},{"path":"/reference/ref.validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the validity of ref.resp if given as data frame — ref.validate","title":"Checks the validity of ref.resp if given as data frame — ref.validate","text":"Ensures ref.resp takes correct form allow synthesis network reference treatment response data provided meta-analysis","code":""},{"path":"/reference/ref.validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the validity of ref.resp if given as data frame — ref.validate","text":"","code":"ref.validate(data.ab)"},{"path":"/reference/ref.validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the validity of ref.resp if given as data frame — ref.validate","text":"data.ab data frame arm-level data \"long\" format containing columns: studyID Study identifiers time Numeric data indicating follow-times y Numeric data indicating mean response given observation se Numeric data indicating standard error given observation","code":""},{"path":"/reference/remove.loops.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes any loops from MBNMA model JAGS code that do not contain any\nexpressions — remove.loops","title":"Removes any loops from MBNMA model JAGS code that do not contain any\nexpressions — remove.loops","text":"Removes loops MBNMA model JAGS code contain expressions","code":""},{"path":"/reference/remove.loops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes any loops from MBNMA model JAGS code that do not contain any\nexpressions — remove.loops","text":"","code":"remove.loops(model)"},{"path":"/reference/remove.loops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes any loops from MBNMA model JAGS code that do not contain any\nexpressions — remove.loops","text":"model character object JAGS MBNMA model code","code":""},{"path":"/reference/remove.loops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes any loops from MBNMA model JAGS code that do not contain any\nexpressions — remove.loops","text":"character vector JAGS MBNMA model code empty loops removed ","code":""},{"path":"/reference/replace.prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace original priors in an MBNMA model with new priors — replace.prior","title":"Replace original priors in an MBNMA model with new priors — replace.prior","text":"Identical replace.prior() MBNMAdose.","code":""},{"path":"/reference/replace.prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace original priors in an MBNMA model with new priors — replace.prior","text":"","code":"replace.prior(priors, model = NULL, mbnma = NULL)"},{"path":"/reference/replace.prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace original priors in an MBNMA model with new priors — replace.prior","text":"priors named list parameter values (without indices) replacement prior distribution values given strings using distributions specified JAGS syntax (see Plummer (2017) ). model character object JAGS MBNMA model code mbnma S3 object class c(\"mbnma\", \"rjags\") generated running time-course MBNMA model.","code":""},{"path":"/reference/replace.prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace original priors in an MBNMA model with new priors — replace.prior","text":"character object JAGS MBNMA model code includes new priors place original priors","code":""},{"path":"/reference/replace.prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace original priors in an MBNMA model with new priors — replace.prior","text":"function takes new priors, specified user, adds JAGS code MBNMA model. New priors replace old priors JAGS model. Values priors can include JAGS functions/distributions (e.g. censoring/truncation).","code":""},{"path":"/reference/summary.mb.network.html","id":null,"dir":"Reference","previous_headings":"","what":"Print summary mb.network information to the console — summary.mb.network","title":"Print summary mb.network information to the console — summary.mb.network","text":"Print summary mb.network information console","code":""},{"path":"/reference/summary.mb.network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print summary mb.network information to the console — summary.mb.network","text":"","code":"# S3 method for mb.network summary(object, ...)"},{"path":"/reference/summary.mb.network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print summary mb.network information to the console — summary.mb.network","text":"object object class mb.network. ... arguments passed methods","code":""},{"path":"/reference/summary.mb.predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints summary of mb.predict object — summary.mb.predict","title":"Prints summary of mb.predict object — summary.mb.predict","text":"Prints summary table mean MCMC iterations time point treatment","code":""},{"path":"/reference/summary.mb.predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints summary of mb.predict object — summary.mb.predict","text":"","code":"# S3 method for mb.predict summary(object, ...)"},{"path":"/reference/summary.mb.predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints summary of mb.predict object — summary.mb.predict","text":"object object class \"mb.predict\" ... arguments passed methods","code":""},{"path":"/reference/summary.mb.predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints summary of mb.predict object — summary.mb.predict","text":"matrix containing times responses predicted (time) additional column treatment responses predicted. row represents mean MCMC predicted responses treatment particular time.","code":""},{"path":"/reference/summary.mb.predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints summary of mb.predict object — summary.mb.predict","text":"","code":"# \\donttest{ # Define network network <- mb.network(obesityBW_CFB, reference=\"plac\") #> Studies reporting change from baseline automatically identified from the data  # Run an MBNMA with a quadratic time-course function quad <- mb.run(network,   fun=tpoly(degree=2, pool.1=\"rel\", method.1=\"common\",     pool.2=\"rel\", method.2=\"common\"),   intercept=TRUE) #> Change from version 0.2.2 onwards: corparam=FALSE as default #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 648 #>    Unobserved stochastic nodes: 155 #>    Total graph size: 11523 #>  #> Initializing model #>   # Predict responses pred <- predict(quad, times=c(0:50), treats=c(1:5),   ref.resp = network$data.ab[network$data.ab$treatment==1,],   E0=10) #> Data frame must contain only data from reference treatment #> Studies reporting change from baseline automatically identified from ref.resp #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 264 #>    Unobserved stochastic nodes: 2 #>    Total graph size: 4249 #>  #> Initializing model #>   # Generate summary of predictions summary(pred) #>       time      plac    amfe_75MG dexf_10MG dexf_30MG dexf_60MG #>  [1,]    0 10.000000 10.000000000 10.000000 10.000000 10.000000 #>  [2,]    1  9.910629  9.523907584  9.858903  9.495025  9.312936 #>  [3,]    2  9.822205  9.059382915  9.729258  9.025060  8.672143 #>  [4,]    3  9.734729  8.606425991  9.611066  8.590107  8.077620 #>  [5,]    4  9.648201  8.165036814  9.504327  8.190164  7.529368 #>  [6,]    5  9.562621  7.735215383  9.409040  7.825231  7.027387 #>  [7,]    6  9.477988  7.316961698  9.325205  7.495309  6.571676 #>  [8,]    7  9.394303  6.910275760  9.252823  7.200398  6.162236 #>  [9,]    8  9.311566  6.515157568  9.191893  6.940498  5.799066 #> [10,]    9  9.229777  6.131607122  9.142416  6.715608  5.482167 #> [11,]   10  9.148936  5.759624422  9.104391  6.525729  5.211539 #> [12,]   11  9.069042  5.399209468  9.077819  6.370860  4.987181 #> [13,]   12  8.990096  5.050362261  9.062699  6.251003  4.809094 #> [14,]   13  8.912098  4.713082800  9.059032  6.166155  4.677277 #> [15,]   14  8.835048  4.387371085  9.066817  6.116319  4.591731 #> [16,]   15  8.758945  4.073227117  9.086055  6.101493  4.552456 #> [17,]   16  8.683790  3.770650894  9.116745  6.121678  4.559451 #> [18,]   17  8.609583  3.479642418  9.158888  6.176874  4.612716 #> [19,]   18  8.536324  3.200201688  9.212483  6.267080  4.712253 #> [20,]   19  8.464013  2.932328705  9.277530  6.392297  4.858060 #> [21,]   20  8.392649  2.676023467  9.354030  6.552524  5.050137 #> [22,]   21  8.322233  2.431285976  9.441983  6.747762  5.288485 #> [23,]   22  8.252765  2.198116231  9.541388  6.978011  5.573104 #> [24,]   23  8.184245  1.976514232  9.652245  7.243271  5.903993 #> [25,]   24  8.116673  1.766479980  9.774555  7.543541  6.281153 #> [26,]   25  8.050048  1.568013473  9.908318  7.878822  6.704583 #> [27,]   26  7.984371  1.381114713 10.053533  8.249113  7.174285 #> [28,]   27  7.919642  1.205783699 10.210200  8.654416  7.690256 #> [29,]   28  7.855860  1.042020432 10.378320  9.094729  8.252498 #> [30,]   29  7.793027  0.889824910 10.557892  9.570052  8.861011 #> [31,]   30  7.731141  0.749197135 10.748917 10.080386  9.515795 #> [32,]   31  7.670203  0.620137106 10.951394 10.625731 10.216849 #> [33,]   32  7.610213  0.502644824 11.165324 11.206087 10.964173 #> [34,]   33  7.551170  0.396720287 11.390706 11.821453 11.757768 #> [35,]   34  7.493076  0.302363497 11.627541 12.471830 12.597634 #> [36,]   35  7.435929  0.219574453 11.875828 13.157217 13.483771 #> [37,]   36  7.379730  0.148353155 12.135568 13.877616 14.416178 #> [38,]   37  7.324478  0.088699604 12.406760 14.633024 15.394855 #> [39,]   38  7.270175  0.040613798 12.689404 15.423444 16.419803 #> [40,]   39  7.216819  0.004095739 12.983501 16.248874 17.491022 #> [41,]   40  7.164411 -0.020854573 13.289051 17.109315 18.608511 #> [42,]   41  7.112951 -0.034237140 13.606053 18.004766 19.772271 #> [43,]   42  7.062438 -0.036051960 13.934508 18.935229 20.982302 #> [44,]   43  7.012874 -0.026299035 14.274415 19.900702 22.238603 #> [45,]   44  6.964257 -0.004978362 14.625774 20.901185 23.541175 #> [46,]   45  6.916588  0.027910056 14.988586 21.936679 24.890017 #> [47,]   46  6.869866  0.072366220 15.362850 23.007184 26.285130 #> [48,]   47  6.824093  0.128390131 15.748567 24.112700 27.726514 #> [49,]   48  6.779267  0.195981788 16.145737 25.253226 29.214168 #> [50,]   49  6.735389  0.275141191 16.554358 26.428763 30.748092 #> [51,]   50  6.692459  0.365868341 16.974433 27.639310 32.328288 # }"},{"path":"/reference/summary.mbnma.html","id":null,"dir":"Reference","previous_headings":"","what":"Print summary MBNMA results to the console — summary.mbnma","title":"Print summary MBNMA results to the console — summary.mbnma","text":"Print summary MBNMA results console","code":""},{"path":"/reference/summary.mbnma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print summary MBNMA results to the console — summary.mbnma","text":"","code":"# S3 method for mbnma summary(object, ...)"},{"path":"/reference/summary.mbnma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print summary MBNMA results to the console — summary.mbnma","text":"object S3 object class(\"mbnma\") generated running time-course MBNMA model ... arguments passed knitr::kable","code":""},{"path":"/reference/summary.nodesplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Takes node-split results and produces summary data frame — summary.nodesplit","title":"Takes node-split results and produces summary data frame — summary.nodesplit","text":"Takes node-split results produces summary data frame","code":""},{"path":"/reference/summary.nodesplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Takes node-split results and produces summary data frame — summary.nodesplit","text":"","code":"# S3 method for nodesplit summary(object, ...)"},{"path":"/reference/summary.nodesplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Takes node-split results and produces summary data frame — summary.nodesplit","text":"object object class \"nodesplit\" generated mb.nodeplit() ... arguments passed methods","code":""},{"path":"/reference/summary.nodesplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Takes node-split results and produces summary data frame — summary.nodesplit","text":"data frame summary node-split results following variables: Comparison treatment comparison node-split performed Time.Param time-course parameter node-split performed Evidence evidence contribution given comparison (either \"Direct\" \"Indirect\") Median posterior median 2.5% lower 95% credible interval limit 97.5% upper 95% credible interval limit p.value Bayesian p-value overlap direct indirect evidence given comparison (therefore identical value direct indirect evidence within particular comparison time-course parameter)","code":""},{"path":"/reference/temax.html","id":null,"dir":"Reference","previous_headings":"","what":"Emax time-course function — temax","title":"Emax time-course function — temax","text":"** version 0.2.3: ensure positive posterior values, et50 hill parameters now modeled natural scale using half-normal prior rather symmetrical prior exponential scale improve model stability **","code":""},{"path":"/reference/temax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emax time-course function — temax","text":"","code":"temax(   pool.emax = \"rel\",   method.emax = \"common\",   pool.et50 = \"rel\",   method.et50 = \"common\",   pool.hill = NULL,   method.hill = NULL,   p.expon = FALSE )"},{"path":"/reference/temax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emax time-course function — temax","text":"pool.emax Pooling Emax parameter. Can take \"rel\" \"abs\" (see details). method.emax Method synthesis Emax parameter. Can take \"common, \"random\", assigned numeric value (see details). pool.et50 Pooling ET50 parameter. Can take \"rel\" \"abs\" (see details). method.et50 Method synthesis ET50 parameter. Can take \"common, \"random\", assigned numeric value (see details). pool.hill Pooling Hill parameter. Can take \"rel\" \"abs\" (see details). method.hill Method synthesis Hill parameter. Can take \"common, \"random\", assigned numeric value (see details). p.expon parameters can take positive values modeled exponential scale (TRUE) assigned prior restricts posterior positive values (FALSE)","code":""},{"path":"/reference/temax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emax time-course function — temax","text":"object class(\"timefun\")","code":""},{"path":"/reference/temax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Emax time-course function — temax","text":"Emax represents maximum response. ET50 represents time 50% maximum response achieved. can take positive values modeled exponential scale assigned symmetrical normal prior Alternatively can assigned normal prior truncated zero (half-normal) (default MBNMAtime version >=0.2.3). Hill Hill parameter, allows sigmoidal function. can take positive values modeled exponential scale assigned symmetrical normal prior Alternatively can assigned normal prior truncated zero (half-normal) (default MBNMAtime version >=0.2.3). Without Hill parameter: $$\\frac{E_{max}\\times{x}}{ET_{50}+x}$$ Hill parameter: $$\\frac{E_{max}\\times{x^{hill}}}{ET_{50}\\times{hill}+x^{hill}}$$","code":""},{"path":"/reference/temax.html","id":"time-course-parameters","dir":"Reference","previous_headings":"","what":"Time-course parameters","title":"Emax time-course function — temax","text":"Time-course parameters model must specified using pool method prefix. pool used define approach used pooling given time-course parameter can take : method used define model used meta-analysis given time-course parameter can take following values: relative effects modelled one time-course parameter, correlation automatically estimated using vague inverse-Wishart prior. prior can made slightly informative specifying scale matrix omega changing degrees freedom inverse-Wishart prior using priors argument mb.run().","code":""},{"path":"/reference/temax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Emax time-course function — temax","text":"Lu G, Ades AE (2004). “Combination direct indirect evidence mixed treatment comparisons.” Stat Med, 23(20), 3105-24. ISSN 0277-6715 (Print) 0277-6715 (Linking), doi:10.1002/sim.1875 , https://pubmed.ncbi.nlm.nih.gov/15449338/.","code":""},{"path":"/reference/temax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Emax time-course function — temax","text":"","code":"# Model without a Hill parameter temax(pool.emax=\"rel\", method.emax=\"random\", pool.et50=\"abs\", method.et50=\"common\") #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> $name #> [1] \"emax\" #>  #> $fun #> ~(emax * time)/(et50 + time) #> <environment: 0x55add547b3e8> #>  #> $f #> function (time, beta.1, beta.2, beta.3, p.expon)  #> { #>     if (p.expon == TRUE) { #>         y <- (beta.1 * (time^exp(beta.3)))/((exp(beta.2)^exp(beta.3)) +  #>             (time^exp(beta.3))) #>     } #>     else { #>         y <- (beta.1 * (time^beta.3))/((exp(beta.2)^beta.3) +  #>             (time^beta.3)) #>     } #>     return(y) #> } #> <bytecode: 0x55adcf9baa48> #> <environment: 0x55add547b3e8> #>  #> $latex #> [1] \"$\\\\frac{\\\\beta_1 \\\\times x_m}{{\\\\beta_2} + x_m}$\" #>  #> $params #> [1] \"emax\" \"et50\" #>  #> $nparam #> [1] 2 #>  #> $jags #> [1] \"(beta.1[i,k] * time[i,m]) / (beta.2 + time[i,m])\" #>  #> $apool #>  emax  et50  #> \"rel\" \"abs\"  #>  #> $amethod #>     emax     et50  #> \"random\" \"common\"  #>  #> $bname #>     emax     et50  #> \"beta.1\" \"beta.2\"  #>  #> $bpool #>     emax     et50  #> \"pool.1\" \"pool.2\"  #>  #> $bmethod #>       emax       et50  #> \"method.1\" \"method.2\"  #>  #> $p.expon #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"timefun\"  # Model including a Hill parameter and defaults for Emax and ET50 parameters temax(pool.hill=\"abs\", method.hill=\"common\") #> 'et50' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> 'hill' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> $name #> [1] \"emax\" #>  #> $fun #> ~(emax * (time^hill))/((et50^hill) + (time^hill)) #> <environment: 0x55add713e6d0> #>  #> $f #> function (time, beta.1, beta.2, beta.3, p.expon)  #> { #>     if (p.expon == TRUE) { #>         y <- (beta.1 * (time^exp(beta.3)))/((exp(beta.2)^exp(beta.3)) +  #>             (time^exp(beta.3))) #>     } #>     else { #>         y <- (beta.1 * (time^beta.3))/((exp(beta.2)^beta.3) +  #>             (time^beta.3)) #>     } #>     return(y) #> } #> <bytecode: 0x55adcf9baa48> #> <environment: 0x55add713e6d0> #>  #> $latex #> [1] \"$\\\\frac{\\\\beta_1 \\\\times x_m^{\\\\beta_3}}{{\\\\beta_2}^{\\\\beta_3} + x_m^{\\\\beta_3}}$\" #>  #> $params #> [1] \"emax\" \"et50\" \"hill\" #>  #> $nparam #> [1] 3 #>  #> $jags #> [1] \"(beta.1[i,k] * (time[i,m] ^ beta.3)) / ((beta.2[i,k] ^ beta.3) + (time[i,m] ^ beta.3))\" #>  #> $apool #>  emax  et50  hill  #> \"rel\" \"rel\" \"abs\"  #>  #> $amethod #>     emax     et50     hill  #> \"common\" \"common\" \"common\"  #>  #> $bname #>     emax     et50     hill  #> \"beta.1\" \"beta.2\" \"beta.3\"  #>  #> $bpool #>     emax     et50     hill  #> \"pool.1\" \"pool.2\" \"pool.3\"  #>  #> $bmethod #>       emax       et50       hill  #> \"method.1\" \"method.2\" \"method.3\"  #>  #> $p.expon #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"timefun\""},{"path":"/reference/tfpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Fractional polynomial time-course function — tfpoly","title":"Fractional polynomial time-course function — tfpoly","text":"first described use Network Meta-Analysis Jansen et al. (2015) .","code":""},{"path":"/reference/tfpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fractional polynomial time-course function — tfpoly","text":"","code":"tfpoly(   degree = 1,   pool.1 = \"rel\",   method.1 = \"common\",   pool.2 = \"rel\",   method.2 = \"common\",   method.power1 = 0,   method.power2 = 0 )"},{"path":"/reference/tfpoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fractional polynomial time-course function — tfpoly","text":"degree degree fractional polynomial defined  Royston Altman (1994) pool.1 Pooling 1st fractional polynomial coefficient. Can take \"rel\" \"abs\" (see details). method.1 Method synthesis 1st fractional polynomial coefficient. Can take \"common, \"random\", assigned numeric value (see details). pool.2 Pooling 2nd fractional polynomial coefficient. Can take \"rel\" \"abs\" (see details). method.2 Method synthesis 2nd fractional polynomial coefficient. Can take \"common, \"random\", assigned numeric value (see details). method.power1 Value 1st fractional polynomial power. Must take numeric value set -2, -1, -0.5, 0, 0.5, 1, 2, 3. pool parameter set \"abs\". method.power2 Value 2nd fractional polynomial power. Must take numeric value set -2, -1, -0.5, 0, 0.5, 1, 2, 3. pool parameter set \"abs\".","code":""},{"path":"/reference/tfpoly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fractional polynomial time-course function — tfpoly","text":"object class(\"timefun\")","code":""},{"path":"/reference/tfpoly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fractional polynomial time-course function — tfpoly","text":"\\(\\beta_1\\) represents 1st coefficient. \\(\\beta_2\\) represents 2nd coefficient. \\(p_1\\) represents 1st power \\(p_2\\) represents 2nd power polynomial degree=1: $${\\beta_1}x^{p_1}$$ polynomial degree=2: $${\\beta_1}x^{p_1}+{\\beta_2}x^{p_2}$$ \\(x^{(p)}\\) regular power except \\(p=0\\), \\(x^{(0)}=ln(x)\\). fractional polynomial power \\(p_m\\) repeats within function multiplied another \\(ln(x)\\).","code":""},{"path":"/reference/tfpoly.html","id":"time-course-parameters","dir":"Reference","previous_headings":"","what":"Time-course parameters","title":"Fractional polynomial time-course function — tfpoly","text":"Time-course parameters model must specified using pool method prefix. pool used define approach used pooling given time-course parameter can take : method used define model used meta-analysis given time-course parameter can take following values: relative effects modelled one time-course parameter, correlation automatically estimated using vague inverse-Wishart prior. prior can made slightly informative specifying scale matrix omega changing degrees freedom inverse-Wishart prior using priors argument mb.run().","code":""},{"path":"/reference/tfpoly.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fractional polynomial time-course function — tfpoly","text":"Jansen JP, Vieira MC, Cope S (2015). “Network meta-analysis longitudinal data using fractional polynomials.” Stat Med, 34(15), 2294-311. ISSN 1097-0258 (Electronic) 0277-6715 (Linking), doi:10.1002/sim.6492 , https://pubmed.ncbi.nlm.nih.gov/25877808/. Lu G, Ades AE (2004). “Combination direct indirect evidence mixed treatment comparisons.” Stat Med, 23(20), 3105-24. ISSN 0277-6715 (Print) 0277-6715 (Linking), doi:10.1002/sim.1875 , https://pubmed.ncbi.nlm.nih.gov/15449338/. Royston P, Altman D (1994). “Regression Using Fractional Polynomials Continuous Covariates: Parsimonious Parametric Modelling.” Journal Royal Statistical Society: Series C, 43(3), 429-467.","code":""},{"path":"/reference/tfpoly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fractional polynomial time-course function — tfpoly","text":"","code":"# 1st order fractional polynomial with random effects tfpoly(pool.1=\"rel\", method.1=\"random\") #> $name #> [1] \"fpoly\" #>  #> $fun #> ~beta.1 * ifelse(time > 0, ifelse(beta.2 == 0, log(time), time^beta.2),  #>     0) #> <environment: 0x55add9271ec8> #>  #> $f #> function (time, beta.1, beta.2)  #> { #>     if (time > 0) { #>         if (beta.2 == 0) { #>             y <- log(time) #>         } #>         else { #>             y <- time^beta.2 #>         } #>     } #>     else { #>         y <- 0 #>     } #>     return(beta.1 * y) #> } #> <bytecode: 0x55add9273130> #> <environment: 0x55add9271ec8> #>  #> $latex #> [1] \"TO BE WRITTEN\" #>  #> $params #> [1] \"beta.1\" \"power1\" #>  #> $nparam #> [1] 2 #>  #> $jags #> [1] \"beta.1[i,k] * ifelse(time[i,m]>0, ifelse(beta.2==0, log(time[i,m]), time[i,m]^beta.2), 0)\" #>  #> $apool #> beta.1 power1  #>  \"rel\"  \"abs\"  #>  #> $amethod #>   beta.1   power1  #> \"random\"      \"0\"  #>  #> $bname #>   beta.1   power1  #> \"beta.1\" \"beta.2\"  #>  #> $bpool #>   beta.1   power1  #> \"pool.1\" \"pool.2\"  #>  #> $bmethod #>     beta.1     power1  #> \"method.1\" \"method.2\"  #>  #> attr(,\"class\") #> [1] \"timefun\"  # 2nd order fractional polynomial # with a single absolute parameter estimated for the 2nd coefficient # 1st power equal to zero tfpoly(degree=2, pool.1=\"rel\", method.1=\"common\",   pool.2=\"abs\", method.2=\"random\",   method.power1=0) #> $name #> [1] \"fpoly\" #>  #> $fun #> ~beta.1 * ifelse(time > 0, ifelse(beta.3 == 0, log(time), time^beta.3),  #>     0) + (beta.2 * ifelse(beta.4 == beta.3, ifelse(time > 0,  #>     ifelse(beta.4 == 0, log(time)^2, (time^beta.4) * log(time)),  #>     0), ifelse(time > 0, ifelse(beta.4 == 0, log(time), time^beta.4),  #>     0))) #> <environment: 0x55addcdf91c0> #>  #> $f #> function (time, beta.1, beta.2, beta.3, beta.4)  #> { #>     if (time > 0) { #>         if (beta.3 == 0) { #>             y1 <- log(time) #>         } #>         else { #>             y1 <- time^beta.3 #>         } #>     } #>     else { #>         y1 <- 0 #>     } #>     y1 <- beta.1 * y1 #>     if (beta.4 == beta.3) { #>         if (time > 0) { #>             if (beta.4 == 0) { #>                 y2 <- log(time)^2 #>             } #>             else { #>                 y2 <- time^beta.4 * log(time) #>             } #>         } #>         else { #>             if (time > 0) { #>                 if (beta.4 == 0) { #>                   y2 <- log(time) #>                 } #>                 else { #>                   y2 <- time^beta.4 #>                 } #>             } #>         } #>     } #>     else { #>         y2 <- 0 #>     } #>     return(y1 + y2) #> } #> <bytecode: 0x55add9273ec0> #> <environment: 0x55addcdf91c0> #>  #> $latex #> [1] \"TO BE WRITTEN\" #>  #> $params #> [1] \"beta.1\" \"beta.2\" \"power1\" \"power2\" #>  #> $nparam #> [1] 4 #>  #> $jags #> [1] \"beta.1[i,k] * ifelse(time[i,m]>0, ifelse(beta.3==0, log(time[i,m]), time[i,m]^beta.3), 0) + (i.beta.2[i,k] * ifelse(beta.4==beta.3, ifelse(time[i,m]>0, ifelse(beta.4==0, log(time[i,m])^2, (time[i,m]^beta.4) * log(time[i,m])), 0), ifelse(time[i,m]>0, ifelse(beta.4==0, log(time[i,m]), time[i,m]^beta.4), 0)))\" #>  #> $apool #> beta.1 beta.2 power1 power2  #>  \"rel\"  \"abs\"  \"abs\"  \"abs\"  #>  #> $amethod #>   beta.1   beta.2   power1   power2  #> \"common\" \"random\"      \"0\"      \"0\"  #>  #> $bname #>   beta.1   beta.2   power1   power2  #> \"beta.1\" \"beta.2\" \"beta.3\" \"beta.4\"  #>  #> $bpool #>   beta.1   beta.2   power1   power2  #> \"pool.1\" \"pool.2\" \"pool.3\" \"pool.4\"  #>  #> $bmethod #>     beta.1     beta.2     power1     power2  #> \"method.1\" \"method.2\" \"method.3\" \"method.4\"  #>  #> attr(,\"class\") #> [1] \"timefun\""},{"path":"/reference/timeplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot raw responses over time by treatment or class — timeplot","title":"Plot raw responses over time by treatment or class — timeplot","text":"Plot raw responses time treatment class","code":""},{"path":"/reference/timeplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot raw responses over time by treatment or class — timeplot","text":"","code":"timeplot(network, level = \"treatment\", plotby = \"arm\", link = \"identity\", ...)"},{"path":"/reference/timeplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot raw responses over time by treatment or class — timeplot","text":"network object class \"mb.network\". level string indicating whether nodes/facets represent treatment class plot. Can used examine expected impact modelling class/agent effects. plotby character object can take either \"arm\" indicate raw responses plotted separately study arm, \"rel\" indicate within-study relative effects/treatment differences plotted. way time-course absolute effects relative effects can examined. link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function). ... Arguments sent ggplot()","code":""},{"path":"/reference/timeplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot raw responses over time by treatment or class — timeplot","text":"function returns object class(c(\"gg\", \"ggplot\"). Characteristics object can therefore amended plots generated ggplot().","code":""},{"path":"/reference/timeplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot raw responses over time by treatment or class — timeplot","text":"Plots can faceted either treatment (level=\"treatment\") class (level=\"class\") investigate similarity treatment responses within classes/agents. Points represent observed responses lines connect observations within study arm.","code":""},{"path":"/reference/timeplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot raw responses over time by treatment or class — timeplot","text":"","code":"# \\donttest{ # Make network goutnet <- mb.network(goutSUA_CFB) #> Reference treatment is `Plac` #> Studies reporting change from baseline automatically identified from the data  # Use timeplot to plot responses grouped by treatment timeplot(goutnet)   # Use timeplot ot plot resposes grouped by class timeplot(goutnet, level=\"class\")   # Plot matrix of relative effects timeplot(goutnet, level=\"class\", plotby=\"rel\")   # Plot using Standardised Mean Differences copdnet <- mb.network(copd) #> Reference treatment is `Placebo` #> Studies reporting change from baseline automatically identified from the data timeplot(copdnet, plotby=\"rel\", link=\"smd\")   # }"},{"path":"/reference/titp.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Two-Component Prediction (ITP) function — titp","title":"Integrated Two-Component Prediction (ITP) function — titp","text":"Similar parameterisation Emax model non-asymptotic maximal effect (Emax). Proposed proposed Fu Manner (2010)","code":""},{"path":"/reference/titp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Two-Component Prediction (ITP) function — titp","text":"","code":"titp(   pool.emax = \"rel\",   method.emax = \"common\",   pool.rate = \"rel\",   method.rate = \"common\",   p.expon = FALSE )"},{"path":"/reference/titp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Two-Component Prediction (ITP) function — titp","text":"pool.emax Pooling exponential Emax parameter. Can take \"rel\" \"abs\" (see details). method.emax Method synthesis exponential Emax parameter. Can take \"common, \"random\", assigned numeric value (see details). pool.rate Pooling parameter controlling rate onset. Default NULL avoids including parameter (.e. fixes 1 treatments). Can take \"rel\" \"abs\" (see details). method.rate Method synthesis parameter controlling rate onset. Can take \"common, \"random\", assigned numeric value (see details). p.expon parameters can take positive values modeled exponential scale (TRUE) assigned prior restricts posterior positive values (FALSE)","code":""},{"path":"/reference/titp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrated Two-Component Prediction (ITP) function — titp","text":"object class(\"timefun\")","code":""},{"path":"/reference/titp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Two-Component Prediction (ITP) function — titp","text":"$${E_{max}}\\times\\frac{(1-exp(-{rate}\\times{x}))}{(1-exp(-{rate}\\times{max(x)}))}$$","code":""},{"path":"/reference/titp.html","id":"time-course-parameters","dir":"Reference","previous_headings":"","what":"Time-course parameters","title":"Integrated Two-Component Prediction (ITP) function — titp","text":"Time-course parameters model must specified using pool method prefix. pool used define approach used pooling given time-course parameter can take : method used define model used meta-analysis given time-course parameter can take following values:","code":""},{"path":"/reference/titp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Integrated Two-Component Prediction (ITP) function — titp","text":"Fu H, Manner D (2010). “Bayesian adaptive dose-finding studies delayed responses.” J Biopharm Stat, 20(5), 1055-1070. doi:10.1080/10543400903315740 . Lu G, Ades AE (2004). “Combination direct indirect evidence mixed treatment comparisons.” Stat Med, 23(20), 3105-24. ISSN 0277-6715 (Print) 0277-6715 (Linking), doi:10.1002/sim.1875 , https://pubmed.ncbi.nlm.nih.gov/15449338/.","code":""},{"path":"/reference/titp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrated Two-Component Prediction (ITP) function — titp","text":"","code":"titp(pool.emax=\"rel\", method.emax=\"random\") #> 'rate' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> $name #> [1] \"itp\" #>  #> $fun #> ~emax * (1 - exp(-rate * time))/(1 - exp(-rate * max(time))) #> <environment: 0x55add79d9238> #>  #> $f #> function (time, beta.1, beta.2)  #> { #>     y <- beta.1 * (1 - exp(-beta.2 * time))/(1 - exp(-beta.2 *  #>         max(time))) #>     return(y) #> } #> <bytecode: 0x55add53769e0> #> <environment: 0x55add79d9238> #>  #> $latex #> [1] \"\\beta_1 * (1-exp(-\\beta_2*x_m)) / (1-exp(-\\beta_2*max(x_m)))\" #>  #> $params #> [1] \"emax\" \"rate\" #>  #> $nparam #> [1] 2 #>  #> $jags #> [1] \"beta.1[i,k] * ((1-exp(-beta.2[i,k]*time[i,m])) / (1-exp(-beta.2[i,k]*maxtime)))\" #>  #> $apool #>  emax  rate  #> \"rel\" \"rel\"  #>  #> $amethod #>     emax     rate  #> \"random\" \"common\"  #>  #> $bname #>     emax     rate  #> \"beta.1\" \"beta.2\"  #>  #> $bpool #>     emax     rate  #> \"pool.1\" \"pool.2\"  #>  #> $bmethod #>       emax       rate  #> \"method.1\" \"method.2\"  #>  #> $p.expon #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"timefun\" titp(pool.emax=\"abs\") #> 'rate' parameters must take positive values. #>  Default half-normal prior restricts posterior to positive values. #> $name #> [1] \"itp\" #>  #> $fun #> ~emax * (1 - exp(-rate * time))/(1 - exp(-rate * max(time))) #> <environment: 0x55add6579000> #>  #> $f #> function (time, beta.1, beta.2)  #> { #>     y <- beta.1 * (1 - exp(-beta.2 * time))/(1 - exp(-beta.2 *  #>         max(time))) #>     return(y) #> } #> <bytecode: 0x55add53769e0> #> <environment: 0x55add6579000> #>  #> $latex #> [1] \"\\beta_1 * (1-exp(-\\beta_2*x_m)) / (1-exp(-\\beta_2*max(x_m)))\" #>  #> $params #> [1] \"emax\" \"rate\" #>  #> $nparam #> [1] 2 #>  #> $jags #> [1] \"beta.1 * ((1-exp(-beta.2[i,k]*time[i,m])) / (1-exp(-beta.2[i,k]*maxtime)))\" #>  #> $apool #>  emax  rate  #> \"abs\" \"rel\"  #>  #> $amethod #>     emax     rate  #> \"common\" \"common\"  #>  #> $bname #>     emax     rate  #> \"beta.1\" \"beta.2\"  #>  #> $bpool #>     emax     rate  #> \"pool.1\" \"pool.2\"  #>  #> $bmethod #>       emax       rate  #> \"method.1\" \"method.2\"  #>  #> $p.expon #> [1] FALSE #>  #> attr(,\"class\") #> [1] \"timefun\""},{"path":"/reference/tloglin.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-linear (exponential) time-course function — tloglin","title":"Log-linear (exponential) time-course function — tloglin","text":"\\(rate\\times{log(x + 1)}\\)","code":""},{"path":"/reference/tloglin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-linear (exponential) time-course function — tloglin","text":"","code":"tloglin(pool.rate = \"rel\", method.rate = \"common\")"},{"path":"/reference/tloglin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-linear (exponential) time-course function — tloglin","text":"pool.rate Pooling rate parameter. Can take \"rel\" \"abs\" (see details). method.rate Method synthesis rate parameter. Can take \"common, \"random\", assigned numeric value (see details).","code":""},{"path":"/reference/tloglin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-linear (exponential) time-course function — tloglin","text":"object class(\"timefun\")","code":""},{"path":"/reference/tloglin.html","id":"time-course-parameters","dir":"Reference","previous_headings":"","what":"Time-course parameters","title":"Log-linear (exponential) time-course function — tloglin","text":"Time-course parameters model must specified using pool method prefix. pool used define approach used pooling given time-course parameter can take : method used define model used meta-analysis given time-course parameter can take following values:","code":""},{"path":"/reference/tloglin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Log-linear (exponential) time-course function — tloglin","text":"Lu G, Ades AE (2004). “Combination direct indirect evidence mixed treatment comparisons.” Stat Med, 23(20), 3105-24. ISSN 0277-6715 (Print) 0277-6715 (Linking), doi:10.1002/sim.1875 , https://pubmed.ncbi.nlm.nih.gov/15449338/.","code":""},{"path":"/reference/tloglin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-linear (exponential) time-course function — tloglin","text":"","code":"tloglin(pool.rate=\"rel\", method.rate=\"random\") #> $name #> [1] \"loglin\" #>  #> $fun #> ~rate * log(time + 1) #> <environment: 0x55add1cac170> #>  #> $f #> function (time, beta.1)  #> { #>     y <- beta.1 * log(time + 1) #>     return(y) #> } #> <bytecode: 0x55add5caf930> #> <environment: 0x55add1cac170> #>  #> $latex #> [1] \"\\beta_1 * log(x_m + 1)\" #>  #> $params #> [1] \"rate\" #>  #> $nparam #> [1] 1 #>  #> $jags #> [1] \"beta.1[i,k] * log(time[i,m] + 1)\" #>  #> $apool #>  rate  #> \"rel\"  #>  #> $amethod #>     rate  #> \"random\"  #>  #> $bname #>     rate  #> \"beta.1\"  #>  #> $bpool #>     rate  #> \"pool.1\"  #>  #> $bmethod #>       rate  #> \"method.1\"  #>  #> attr(,\"class\") #> [1] \"timefun\" tloglin(pool.rate=\"abs\") #> $name #> [1] \"loglin\" #>  #> $fun #> ~rate * log(time + 1) #> <environment: 0x55add1b5aea8> #>  #> $f #> function (time, beta.1)  #> { #>     y <- beta.1 * log(time + 1) #>     return(y) #> } #> <bytecode: 0x55add5caf930> #> <environment: 0x55add1b5aea8> #>  #> $latex #> [1] \"\\beta_1 * log(x_m + 1)\" #>  #> $params #> [1] \"rate\" #>  #> $nparam #> [1] 1 #>  #> $jags #> [1] \"beta.1 * log(time[i,m] + 1)\" #>  #> $apool #>  rate  #> \"abs\"  #>  #> $amethod #>     rate  #> \"common\"  #>  #> $bname #>     rate  #> \"beta.1\"  #>  #> $bpool #>     rate  #> \"pool.1\"  #>  #> $bmethod #>       rate  #> \"method.1\"  #>  #> attr(,\"class\") #> [1] \"timefun\""},{"path":"/reference/tpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Polynomial time-course function — tpoly","title":"Polynomial time-course function — tpoly","text":"Polynomial time-course function","code":""},{"path":"/reference/tpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polynomial time-course function — tpoly","text":"","code":"tpoly(   degree = 1,   pool.1 = \"rel\",   method.1 = \"common\",   pool.2 = \"rel\",   method.2 = \"common\",   pool.3 = \"rel\",   method.3 = \"common\",   pool.4 = \"rel\",   method.4 = \"common\" )"},{"path":"/reference/tpoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polynomial time-course function — tpoly","text":"degree degree polynomial - e.g. degree=1 linear, degree=2 quadratic, degree=3 cubic. pool.1 Pooling 1st polynomial coefficient. Can take \"rel\" \"abs\" (see details). method.1 Method synthesis 1st polynomial coefficient.Can take \"common, \"random\", assigned numeric value (see details). pool.2 Pooling 2nd polynomial coefficient. Can take \"rel\" \"abs\" (see details). method.2 Method synthesis 2nd polynomial coefficient. Can take \"common, \"random\", assigned numeric value (see details). pool.3 Pooling 3rd polynomial coefficient. Can take \"rel\" \"abs\" (see details). method.3 Method synthesis 3rd polynomial coefficient. Can take \"common, \"random\", assigned numeric value (see details). pool.4 Pooling 4th polynomial coefficient. Can take \"rel\" \"abs\" (see details). method.4 Method synthesis 4th polynomial coefficient. Can take \"common, \"random\", assigned numeric value (see details).","code":""},{"path":"/reference/tpoly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polynomial time-course function — tpoly","text":"object class(\"timefun\")","code":""},{"path":"/reference/tpoly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Polynomial time-course function — tpoly","text":"\\(\\beta_1\\) represents 1st coefficient. \\(\\beta_2\\) represents 2nd coefficient. \\(\\beta_3\\) represents 3rd coefficient. \\(\\beta_4\\) represents 4th coefficient. Linear model: $$\\beta_1{x}$$ Quadratic model: $$\\beta_1{x} + \\beta_2{x^2}$$ Cubic model: $$\\beta_1{x} + \\beta_2{x^2} + \\beta_3{x^3}$$ Quartic model: $$\\beta_1{x} + \\beta_2{x^2} + \\beta_3{x^3} + \\beta_4{x^4}$$","code":""},{"path":"/reference/tpoly.html","id":"time-course-parameters","dir":"Reference","previous_headings":"","what":"Time-course parameters","title":"Polynomial time-course function — tpoly","text":"Time-course parameters model must specified using pool method prefix. pool used define approach used pooling given time-course parameter can take : method used define model used meta-analysis given time-course parameter can take following values: relative effects modelled one time-course parameter, correlation automatically estimated using vague inverse-Wishart prior. prior can made slightly informative specifying scale matrix omega changing degrees freedom inverse-Wishart prior using priors argument mb.run().","code":""},{"path":"/reference/tpoly.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Polynomial time-course function — tpoly","text":"Lu G, Ades AE (2004). “Combination direct indirect evidence mixed treatment comparisons.” Stat Med, 23(20), 3105-24. ISSN 0277-6715 (Print) 0277-6715 (Linking), doi:10.1002/sim.1875 , https://pubmed.ncbi.nlm.nih.gov/15449338/.","code":""},{"path":"/reference/tpoly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polynomial time-course function — tpoly","text":"","code":"# Linear model with random effects tpoly(pool.1=\"rel\", method.1=\"random\") #> $name #> [1] \"poly\" #>  #> $fun #> ~beta.1 * time #> <environment: 0x55ade09164f0> #>  #> $latex #> [1] \"beta_1 * x_m\" #>  #> $params #> [1] \"beta.1\" #>  #> $nparam #> [1] 1 #>  #> $jags #> [1] \"beta.1[i,k] * time[i,m]\" #>  #> $apool #> beta.1  #>  \"rel\"  #>  #> $amethod #>   beta.1  #> \"random\"  #>  #> $bname #>   beta.1  #> \"beta.1\"  #>  #> $bpool #>   beta.1  #> \"pool.1\"  #>  #> $bmethod #>     beta.1  #> \"method.1\"  #>  #> attr(,\"class\") #> [1] \"timefun\"  # Quadratic model with a single absolute parameter estimated for the 2nd coefficient tpoly(pool.1=\"rel\", method.1=\"common\", pool.2=\"abs\", method.2=\"random\") #> $name #> [1] \"poly\" #>  #> $fun #> ~beta.1 * time #> <environment: 0x55ade1134c00> #>  #> $latex #> [1] \"beta_1 * x_m\" #>  #> $params #> [1] \"beta.1\" #>  #> $nparam #> [1] 1 #>  #> $jags #> [1] \"beta.1[i,k] * time[i,m]\" #>  #> $apool #> beta.1  #>  \"rel\"  #>  #> $amethod #>   beta.1  #> \"common\"  #>  #> $bname #>   beta.1  #> \"beta.1\"  #>  #> $bpool #>   beta.1  #> \"pool.1\"  #>  #> $bmethod #>     beta.1  #> \"method.1\"  #>  #> attr(,\"class\") #> [1] \"timefun\""},{"path":"/reference/tspline.html","id":null,"dir":"Reference","previous_headings":"","what":"Spline time-course functions — tspline","title":"Spline time-course functions — tspline","text":"Used fit B-splines, natural cubic splines, piecewise linear splines(Perperoglu et al. 2019) .","code":""},{"path":"/reference/tspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spline time-course functions — tspline","text":"","code":"tspline(   type = \"bs\",   knots = 1,   degree = 1,   pool.1 = \"rel\",   method.1 = \"common\",   pool.2 = \"rel\",   method.2 = \"common\",   pool.3 = \"rel\",   method.3 = \"common\",   pool.4 = \"rel\",   method.4 = \"common\" )"},{"path":"/reference/tspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spline time-course functions — tspline","text":"type type spline. Can take \"bs\" (B-spline), \"ns\" (natural cubic spline) \"ls\" (piecewise linear spline) knots number/location spline internal knots. single number given indicates number knots (equally spaced across range time points). numeric vector given indicates location knots. degree degree piecewise B-spline polynomial - e.g. degree=1 linear, degree=2 quadratic, degree=3 cubic. pool.1 Pooling 1st coefficient. Can take \"rel\" \"abs\" (see details). method.1 Method synthesis 1st coefficient. Can take \"common, \"random\", assigned numeric value (see details). pool.2 Pooling 2nd coefficient. Can take \"rel\" \"abs\" (see details). method.2 Method synthesis 2nd coefficient. Can take \"common, \"random\", assigned numeric value (see details). pool.3 Pooling 3rd coefficient. Can take \"rel\" \"abs\" (see details). method.3 Method synthesis 3rd coefficient. Can take \"common, \"random\", assigned numeric value (see details). pool.4 Pooling 4th coefficient. Can take \"rel\" \"abs\" (see details). method.4 Method synthesis 4th coefficient. Can take \"common, \"random\", assigned numeric value (see details).","code":""},{"path":"/reference/tspline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spline time-course functions — tspline","text":"object class(\"timefun\")","code":""},{"path":"/reference/tspline.html","id":"time-course-parameters","dir":"Reference","previous_headings":"","what":"Time-course parameters","title":"Spline time-course functions — tspline","text":"Time-course parameters model must specified using pool method prefix. pool used define approach used pooling given time-course parameter can take : method used define model used meta-analysis given time-course parameter can take following values: relative effects modelled one time-course parameter, correlation automatically estimated using vague inverse-Wishart prior. prior can made slightly informative specifying scale matrix omega changing degrees freedom inverse-Wishart prior using priors argument mb.run().","code":""},{"path":"/reference/tspline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spline time-course functions — tspline","text":"Lu G, Ades AE (2004). “Combination direct indirect evidence mixed treatment comparisons.” Stat Med, 23(20), 3105-24. ISSN 0277-6715 (Print) 0277-6715 (Linking), doi:10.1002/sim.1875 , https://pubmed.ncbi.nlm.nih.gov/15449338/. Perperoglu , Sauerbrei W, Abrahamowicz M, Schmid M (2019). “review spline function procedures R.” BMC Medical Research Methodology, 19(46), 1-16. doi:10.1186/s12874-019-0666-3 .","code":""},{"path":"/reference/tspline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spline time-course functions — tspline","text":"","code":"# Second order B spline with 2 knots and random effects on the 2nd coefficient tspline(type=\"bs\", knots=2, degree=2,   pool.1=\"rel\", method.1=\"common\",   pool.2=\"rel\", method.2=\"random\") #> $name #> [1] \"bs\" #>  #> $fun #> ~beta.1 * spline.1 + beta.2 * spline.2 + beta.3 * spline.3 +  #>     beta.4 * spline.4 #> <environment: 0x55addfe54f48> #>  #> $latex #> [1] \"\\beta_1 * X[m,1] + \\beta_2 * X[m,2] + \\beta_3 * X[m,3] + \\beta_4 * X[m,4]\" #>  #> $params #> [1] \"beta.1\" \"beta.2\" \"beta.3\" \"beta.4\" #>  #> $nparam #> [1] 4 #>  #> $knots #> [1] 2 #>  #> $degree #> [1] 2 #>  #> $jags #> [1] \"beta.1[i,k] * spline[i,m,1] + beta.2[i,k] * spline[i,m,2] + beta.3[i,k] * spline[i,m,3] + beta.4[i,k] * spline[i,m,4]\" #>  #> $apool #> beta.1 beta.2 beta.3 beta.4  #>  \"rel\"  \"rel\"  \"rel\"  \"rel\"  #>  #> $amethod #>   beta.1   beta.2   beta.3   beta.4  #> \"common\" \"random\" \"common\" \"common\"  #>  #> $bname #>   beta.1   beta.2   beta.3   beta.4  #> \"beta.1\" \"beta.2\" \"beta.3\" \"beta.4\"  #>  #> $bpool #>   beta.1   beta.2   beta.3   beta.4  #> \"pool.1\" \"pool.2\" \"pool.3\" \"pool.4\"  #>  #> $bmethod #>     beta.1     beta.2     beta.3     beta.4  #> \"method.1\" \"method.2\" \"method.3\" \"method.4\"  #>  #> attr(,\"class\") #> [1] \"timefun\"  # Piecewise linear spline with knots at 0.1 and 0.5 quantiles # Single parameter independent of treatment estimated for 1st coefficient #with random effects tspline(type=\"ls\", knots=c(0.1,0.5),   pool.1=\"abs\", method.1=\"random\",   pool.2=\"rel\", method.2=\"common\") #> $name #> [1] \"ls\" #>  #> $fun #> ~beta.1 * spline.1 + beta.2 * spline.2 + beta.3 * spline.3 #> <environment: 0x55ade08f8508> #>  #> $latex #> [1] \"\\beta_1 * X[m,1] + \\beta_2 * X[m,2] + \\beta_3 * X[m,3]\" #>  #> $params #> [1] \"beta.1\" \"beta.2\" \"beta.3\" #>  #> $nparam #> [1] 3 #>  #> $knots #> [1] 0.1 0.5 #>  #> $degree #> [1] 1 #>  #> $jags #> [1] \"i.beta.1[i,k] * spline[i,m,1] + beta.2[i,k] * spline[i,m,2] + beta.3[i,k] * spline[i,m,3]\" #>  #> $apool #> beta.1 beta.2 beta.3  #>  \"abs\"  \"rel\"  \"rel\"  #>  #> $amethod #>   beta.1   beta.2   beta.3  #> \"random\" \"common\" \"common\"  #>  #> $bname #>   beta.1   beta.2   beta.3  #> \"beta.1\" \"beta.2\" \"beta.3\"  #>  #> $bpool #>   beta.1   beta.2   beta.3  #> \"pool.1\" \"pool.2\" \"pool.3\"  #>  #> $bmethod #>     beta.1     beta.2     beta.3  #> \"method.1\" \"method.2\" \"method.3\"  #>  #> attr(,\"class\") #> [1] \"timefun\""},{"path":"/reference/tuser.html","id":null,"dir":"Reference","previous_headings":"","what":"User-defined time-course function — tuser","title":"User-defined time-course function — tuser","text":"User-defined time-course function","code":""},{"path":"/reference/tuser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User-defined time-course function — tuser","text":"","code":"tuser(   fun,   pool.1 = \"rel\",   method.1 = \"common\",   pool.2 = \"rel\",   method.2 = \"common\",   pool.3 = \"rel\",   method.3 = \"common\",   pool.4 = \"rel\",   method.4 = \"common\" )"},{"path":"/reference/tuser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User-defined time-course function — tuser","text":"fun formula specifying relationship including time one/several : beta.1, beta.2, beta.3, beta.4. pool.1 Pooling beta.1. Can take \"common, \"random\", assigned numeric value (see details). method.1 Method synthesis beta.1. Can take \"common \"random\" (see details). pool.2 Pooling beta.2. Can take \"common, \"random\", assigned numeric value (see details). method.2 Method synthesis beta.2. Can take \"commonor\"random\"` (see details). pool.3 Pooling beta.3. Can take \"common, \"random\", assigned numeric value (see details). method.3 Method synthesis beta.3. Can take \"commonor\"random\"` (see details). pool.4 Pooling beta.4. Can take \"common, \"random\", assigned numeric value (see details). method.4 Method synthesis beta.4. Can take \"common, \"random\", assigned numeric value (see details).","code":""},{"path":"/reference/tuser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User-defined time-course function — tuser","text":"object class(\"timefun\")","code":""},{"path":"/reference/tuser.html","id":"time-course-parameters","dir":"Reference","previous_headings":"","what":"Time-course parameters","title":"User-defined time-course function — tuser","text":"Time-course parameters model must specified using pool method prefix. pool used define approach used pooling given time-course parameter can take : method used define model used meta-analysis given time-course parameter can take following values: relative effects modelled one time-course parameter, correlation automatically estimated using vague inverse-Wishart prior. prior can made slightly informative specifying scale matrix omega changing degrees freedom inverse-Wishart prior using priors argument mb.run().","code":""},{"path":"/reference/tuser.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"User-defined time-course function — tuser","text":"Lu G, Ades AE (2004). “Combination direct indirect evidence mixed treatment comparisons.” Stat Med, 23(20), 3105-24. ISSN 0277-6715 (Print) 0277-6715 (Linking), doi:10.1002/sim.1875 , https://pubmed.ncbi.nlm.nih.gov/15449338/.","code":""},{"path":"/reference/tuser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"User-defined time-course function — tuser","text":"","code":"timecourse <- ~ beta.1 * (1/(time+1)) + beta.2 * time^2 tuser(fun=timecourse,   pool.1=\"abs\", method.1=\"common\",   pool.2=\"rel\", method.2=\"common\") #> $name #> [1] \"user\" #>  #> $fun #> ~beta.1 * (1/(time + 1)) + beta.2 * time^2 #> <environment: 0x55add1739940> #>  #> $latex #> NULL #>  #> $params #> [1] \"beta.1\" \"beta.2\" #>  #> $nparam #> [1] 2 #>  #> $jags #> [1] \"beta.1 * (1/(time[i,m] + 1)) + beta.2[i,k] * time[i,m]^2\" #>  #> $apool #> beta.1 beta.2  #>  \"abs\"  \"rel\"  #>  #> $amethod #>   beta.1   beta.2  #> \"common\" \"common\"  #>  #> $bname #> [1] \"beta.1\" \"beta.2\" #>  #> $bpool #>   beta.1   beta.2  #> \"pool.1\" \"pool.2\"  #>  #> $bmethod #>     beta.1     beta.2  #> \"method.1\" \"method.2\"  #>  #> attr(,\"class\") #> [1] \"timefun\""},{"path":"/reference/write.beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds sections of JAGS code for an MBNMA model that correspond to beta\nparameters — write.beta","title":"Adds sections of JAGS code for an MBNMA model that correspond to beta\nparameters — write.beta","text":"Adds sections JAGS code MBNMA model correspond beta parameters","code":""},{"path":"/reference/write.beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds sections of JAGS code for an MBNMA model that correspond to beta\nparameters — write.beta","text":"","code":"write.beta(model, timecourse, fun, UME, class.effect)"},{"path":"/reference/write.beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds sections of JAGS code for an MBNMA model that correspond to beta\nparameters — write.beta","text":"model character object JAGS MBNMA model code timecourse character object representing time-course used MBNMA model fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser() UME Can take either TRUE FALSE (unrelated mean effects model time-course parameters respectively) can vector parameter name strings model UME. example: c(\"beta.1\", \"beta.2\"). class.effect list named strings determines time-course parameters model class effect effect (\"common\" \"random\"). example: list(emax=\"common\", et50=\"random\").","code":""},{"path":"/reference/write.beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds sections of JAGS code for an MBNMA model that correspond to beta\nparameters — write.beta","text":"character vector JAGS MBNMA model code includes beta parameter components model","code":""},{"path":"/reference/write.check.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks validity of arguments for mb.write — write.check","title":"Checks validity of arguments for mb.write — write.check","text":"Checks validity arguments mb.write","code":""},{"path":"/reference/write.check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks validity of arguments for mb.write — write.check","text":"","code":"write.check(   fun = tpoly(degree = 1),   positive.scale = TRUE,   intercept = NULL,   rho = 0,   covar = NULL,   omega = NULL,   link = \"identity\",   class.effect = list(),   UME = c() )"},{"path":"/reference/write.check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks validity of arguments for mb.write — write.check","text":"fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser() positive.scale boolean object indicates whether continuous mean responses (y) positive therefore whether baseline response given prior constrains positive (e.g. scales <0). intercept boolean object indicates whether intercept (written alpha model) included. left NULL (default), intercept included studies reporting absolute means, excluded studies reporting change baseline (indicated network$cfb). rho correlation coefficient modelling within-study correlation time points. default string representing prior distribution JAGS, indicating estimated data (e.g. rho=\"dunif(0,1)\"). rho also assigned numeric value (e.g. rho=0.7), fixes rho model value (e.g. use deterministic sensitivity analysis). set rho=0 (default) implies modelling correlation time points. covar character specifying covariance structure use modelling within-study correlation time-points. can done specifying one following: \"varadj\" - univariate likelihood variance adjustment assume constant correlation subsequent time points (Jansen et al. 2015) . default. \"CS\" - multivariate normal likelihood compound symmetry structure \"AR1\" - multivariate normal likelihood autoregressive AR1 structure omega DEPRACATED VERSION 0.2.3 ONWARDS (~uniform(-1,1) now used correlation parameters rather Wishart prior). scale matrix inverse-Wishart prior covariance matrix used model correlation time-course parameters (see Details time-course functions). omega must symmetric positive definite matrix dimensions equal number time-course parameters modelled using relative effects (pool=\"rel\"). left NULL (default) diagonal matrix elements equal 1 used. link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function). class.effect list named strings determines time-course parameters model class effect effect (\"common\" \"random\"). example: list(emax=\"common\", et50=\"random\"). UME Can take either TRUE FALSE (unrelated mean effects model time-course parameters respectively) can vector parameter name strings model UME. example: c(\"beta.1\", \"beta.2\").","code":""},{"path":"/reference/write.check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks validity of arguments for mb.write — write.check","text":"boolean object indicates whether arguments imply modelling correlation time points.","code":""},{"path":"/reference/write.check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks validity of arguments for mb.write — write.check","text":"Used check arguments given mb.write valid. function return informative errors arguments mispecified return object indicates whether arguments imply modelling correlation time points passes.","code":""},{"path":"/reference/write.cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds correlation between time-course relative effects — write.cor","title":"Adds correlation between time-course relative effects — write.cor","text":"uses Wishart prior default modelling correlation","code":""},{"path":"/reference/write.cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds correlation between time-course relative effects — write.cor","text":"","code":"write.cor(model, fun, omega = NULL, class.effect = list())"},{"path":"/reference/write.cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds correlation between time-course relative effects — write.cor","text":"model character object JAGS MBNMA model code fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser() omega DEPRACATED VERSION 0.2.3 ONWARDS (~uniform(-1,1) now used correlation parameters rather Wishart prior). scale matrix inverse-Wishart prior covariance matrix used model correlation time-course parameters (see Details time-course functions). omega must symmetric positive definite matrix dimensions equal number time-course parameters modelled using relative effects (pool=\"rel\"). left NULL (default) diagonal matrix elements equal 1 used. class.effect list named strings determines time-course parameters model class effect effect (\"common\" \"random\"). example: list(emax=\"common\", et50=\"random\").","code":""},{"path":"/reference/write.likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds sections of JAGS code for an MBNMA model that correspond to the\nlikelihood — write.likelihood","title":"Adds sections of JAGS code for an MBNMA model that correspond to the\nlikelihood — write.likelihood","text":"Adds sections JAGS code MBNMA model correspond likelihood","code":""},{"path":"/reference/write.likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds sections of JAGS code for an MBNMA model that correspond to the\nlikelihood — write.likelihood","text":"","code":"write.likelihood(   model,   timecourse,   rho = 0,   covar = \"varadj\",   link = \"identity\",   fun )"},{"path":"/reference/write.likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds sections of JAGS code for an MBNMA model that correspond to the\nlikelihood — write.likelihood","text":"model character object JAGS MBNMA model code timecourse character object representing time-course used MBNMA model rho correlation coefficient modelling within-study correlation time points. default string representing prior distribution JAGS, indicating estimated data (e.g. rho=\"dunif(0,1)\"). rho also assigned numeric value (e.g. rho=0.7), fixes rho model value (e.g. use deterministic sensitivity analysis). set rho=0 (default) implies modelling correlation time points. covar character specifying covariance structure use modelling within-study correlation time-points. can done specifying one following: \"varadj\" - univariate likelihood variance adjustment assume constant correlation subsequent time points (Jansen et al. 2015) . default. \"CS\" - multivariate normal likelihood compound symmetry structure \"AR1\" - multivariate normal likelihood autoregressive AR1 structure link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function). fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser()","code":""},{"path":"/reference/write.likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds sections of JAGS code for an MBNMA model that correspond to the\nlikelihood — write.likelihood","text":"character vector JAGS MBNMA model code includes likelihood components model","code":""},{"path":"/reference/write.model.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the basic JAGS model code for MBNMA to which other lines of model\ncode can be added — write.model","title":"Write the basic JAGS model code for MBNMA to which other lines of model\ncode can be added — write.model","text":"Write basic JAGS model code MBNMA lines model code can added","code":""},{"path":"/reference/write.model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the basic JAGS model code for MBNMA to which other lines of model\ncode can be added — write.model","text":"","code":"write.model()"},{"path":"/reference/write.model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write the basic JAGS model code for MBNMA to which other lines of model\ncode can be added — write.model","text":"character vector JAGS model code","code":""},{"path":"/reference/write.ref.synth.html","id":null,"dir":"Reference","previous_headings":"","what":"Write MBNMA time-course models JAGS code for synthesis of studies\ninvestigating reference treatment — write.ref.synth","title":"Write MBNMA time-course models JAGS code for synthesis of studies\ninvestigating reference treatment — write.ref.synth","text":"Writes JAGS code Bayesian time-course model model-based network meta-analysis (MBNMA) pools reference treatment effects different studies. model pools single study arms therefore pool relative effects.","code":""},{"path":"/reference/write.ref.synth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write MBNMA time-course models JAGS code for synthesis of studies\ninvestigating reference treatment — write.ref.synth","text":"","code":"write.ref.synth(   fun = tpoly(degree = 1),   link = \"identity\",   positive.scale = TRUE,   intercept = TRUE,   rho = 0,   covar = \"varadj\",   mu.synth = \"random\",   priors = NULL )"},{"path":"/reference/write.ref.synth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write MBNMA time-course models JAGS code for synthesis of studies\ninvestigating reference treatment — write.ref.synth","text":"fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser() link Can take either \"identity\" (default), \"log\" (modelling Ratios Means (Friedrich et al. 2011) ) \"smd\" (modelling Standardised Mean Differences - although also corresponds identity link function). positive.scale boolean object indicates whether continuous mean responses (y) positive therefore whether baseline response given prior constrains positive (e.g. scales <0). intercept boolean object indicates whether intercept (written alpha model) included. left NULL (default), intercept included studies reporting absolute means, excluded studies reporting change baseline (indicated network$cfb). rho correlation coefficient modelling within-study correlation time points. default string representing prior distribution JAGS, indicating estimated data (e.g. rho=\"dunif(0,1)\"). rho also assigned numeric value (e.g. rho=0.7), fixes rho model value (e.g. use deterministic sensitivity analysis). set rho=0 (default) implies modelling correlation time points. covar character specifying covariance structure use modelling within-study correlation time-points. can done specifying one following: \"varadj\" - univariate likelihood variance adjustment assume constant correlation subsequent time points (Jansen et al. 2015) . default. \"CS\" - multivariate normal likelihood compound symmetry structure \"AR1\" - multivariate normal likelihood autoregressive AR1 structure mu.synth string takes value fixed random, indicating type synthesis model use priors named list parameter values (without indices) replacement prior distribution values given strings using distributions specified JAGS syntax (see Plummer (2017) ).","code":""},{"path":"/reference/write.ref.synth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write MBNMA time-course models JAGS code for synthesis of studies\ninvestigating reference treatment — write.ref.synth","text":"character object JAGS MBNMA model code includes beta parameter components model","code":""},{"path":"/reference/write.ref.synth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write MBNMA time-course models JAGS code for synthesis of studies\ninvestigating reference treatment — write.ref.synth","text":"","code":"# Write a log-linear time-course MBNMA synthesis model with: # Common effects for synthesis of mu # Modelled as ratio of means model <- write.ref.synth(fun=tloglin(pool.rate=\"rel\", method.rate=\"common\"),   mu.synth=\"common\", link=\"log\")  cat(model) # Concatenates model representations making code more easily readable #> model{ \t\t\t# Begin Model Code dummy2 <- treat dummy1 <- NT rho2 <- rho*rho for(i in 1:NS){ # Run through all NS trials alpha[i] ~ dnorm(0,0.0001) for (k in 1:narm[i]){ # Run through all arms within a study for (m in 1:fups[i]) {\t# Run through all observations within a study log(theta[i,k,m]) <- exp(alpha[i]) + mu.1 * log(time[i,m] + 1) y[i,k,m] ~ dnorm(theta[i,k,m], prec[i,k,m]) prec[i,k,m] <- pow(se[i,k,m], -2) resdev[i,k,m] <- pow((y[i,k,m] - theta[i,k,m]),2) * prec[i,k,m] # residual deviance for normal likelihood dev[i,k,m] <- -2* (log(pow((prec[i,k,m]/(2*3.14159)),0.5) * exp(-0.5*(pow((y[i,k,m]-theta[i,k,m]),2)*prec[i,k,m])))) # deviance for normal likelihood }  resarmdev[i,k] <- sum(resdev[i,k,1:fups[i]]) armdev[i,k] <- sum(dev[i,k,1:fups[i]]) }  resstudydev[i] <- sum(resarmdev[i, 1:narm[i]]) studydev[i] <- sum(armdev[i, 1:narm[i]])  }     totresdev <- sum(resstudydev[]) totdev <- sum(studydev[])  mu.1 ~ dnorm(0,0.0001) rho <- 0 # Model ends }"},{"path":"/reference/write.timecourse.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds sections of JAGS code for an MBNMA model that correspond to alpha\nparameters — write.timecourse","title":"Adds sections of JAGS code for an MBNMA model that correspond to alpha\nparameters — write.timecourse","text":"Adds sections JAGS code MBNMA model correspond alpha parameters","code":""},{"path":"/reference/write.timecourse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds sections of JAGS code for an MBNMA model that correspond to alpha\nparameters — write.timecourse","text":"","code":"write.timecourse(model, fun, intercept, positive.scale)"},{"path":"/reference/write.timecourse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds sections of JAGS code for an MBNMA model that correspond to alpha\nparameters — write.timecourse","text":"model character string representing MBNMA model JAGS code fun object class \"timefun\" generated (see Details) using tloglin(), tpoly(), titp(), temax(), tfpoly(), tspline() tuser() intercept boolean object indicates whether intercept (written alpha model) included. left NULL (default), intercept included studies reporting absolute means, excluded studies reporting change baseline (indicated network$cfb). positive.scale boolean object indicates whether continuous mean responses (y) positive therefore whether baseline response given prior constrains positive (e.g. scales <0). timecourse character object contains JAGS code time-course component model","code":""},{"path":"/reference/write.timecourse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds sections of JAGS code for an MBNMA model that correspond to alpha\nparameters — write.timecourse","text":"list named elements: model character vector JAGS MBNMA model code includes alpha parameter components model timecourse character object contains JAGS code time-course component model, alpha indexed correctly","code":""},{"path":[]},{"path":"/news/index.html","id":"additionschanges-0-2-3","dir":"Changelog","previous_headings":"","what":"Additions/changes","title":"MBNMAtime 0.2.3","text":"Truncated priors used default priors time-course parameters can take positive values (e.g. et50) functions texp() removed - titp() stable parameterisation function","code":""},{"path":[]},{"path":"/news/index.html","id":"major-0-2-3","dir":"Changelog","previous_headings":"Bug fixes","what":"Major","title":"MBNMAtime 0.2.3","text":"Error fixed preventing natural splines functioning, causing removal CRAN","code":""},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"additionschanges-0-2-2","dir":"Changelog","previous_headings":"","what":"Additions/changes","title":"MBNMAtime 0.2.2","text":"Can now specify numeric values time-course parameters method argument. Can useful discrete values estimated (e.g. fractional polynomial powers, Hill parameter). Fractional polynomial powers tfpoly() can take numeric values set defined Jansen 2015. Integrated Two-Component Prediction (ITP) function (titp()) added get.relative() can used combine two MBNMA models allow different time-course functions fitted different set treatments (see examples vignette) New priors restrict posterior positive values necessary can easily incorporated. binplot() can used plot results NMAs conducted multiple time bins. can particularly useful explore time-course functions might appropriate, check validity MBNMA predictions. mb.nodesplit() can performed specific time-points, addition time-course parameter corparam set FALSE default","code":""},{"path":[]},{"path":"/news/index.html","id":"minor-0-2-2","dir":"Changelog","previous_headings":"Bug fixes","what":"Minor","title":"MBNMAtime 0.2.2","text":"Error overlay.nma argument plot.mb.predict() fixed","code":""},{"path":"/news/index.html","id":"mbnmatime-021","dir":"Changelog","previous_headings":"","what":"MBNMAtime 0.2.1","title":"MBNMAtime 0.2.1","text":"CRAN release: 2021-09-13","code":""},{"path":"/news/index.html","id":"additionschanges-0-2-1","dir":"Changelog","previous_headings":"","what":"Additions/changes","title":"MBNMAtime 0.2.1","text":"get.relative() function can used calculate relative effects/mean differences treatments/classes cumrank() added cumulative ranking plots. Also calculates SUCRA values treatment time-course parameter specified follow-times (even treatments compared within study) Studies reporting change baseline absolute means can now specified mb.network(), automatically inferred data (studies time=0 assumed report change baseline) Model intercept (response time=0) now conditional change baseline study texp() now implements 2-parameter exponential function (though simpler 1-parameter model remains default)","code":""},{"path":[]},{"path":"/news/index.html","id":"major-0-2-1","dir":"Changelog","previous_headings":"Bug fixes","what":"Major","title":"MBNMAtime 0.2.1","text":"Error predict() properly incorporating absolute time-course parameters fixed","code":""},{"path":"/news/index.html","id":"minor-0-2-1","dir":"Changelog","previous_headings":"Bug fixes","what":"Minor","title":"MBNMAtime 0.2.1","text":"Error model.file input length fixed mb.run()","code":""},{"path":"/news/index.html","id":"mbnmatime-020","dir":"Changelog","previous_headings":"","what":"MBNMAtime 0.2.0","title":"MBNMAtime 0.2.0","text":"CRAN release: 2021-04-26","code":""},{"path":"/news/index.html","id":"additionschanges-0-2-0","dir":"Changelog","previous_headings":"","what":"Additions/changes","title":"MBNMAtime 0.2.0","text":"Added variance adjustment (covar=\"varadj\") correlation time-points - now default mb.run() Added log linear time-course function (tloglin()) Added spline functions (piecewise linear splines, B-splines, restricted cubic splines, natural splines) Added overlay.nma option predict() allow plotting “lumped” NMA results MBNMA predictions Modelling can now incorporate Standardised Mean Differences (link=\"smd\") Ratios Means (link=\"log\") allow modelling studies different scales lower_better argument used instead decreasing rankings Time-course functions given mb.run() now given class(\"timefun\") time-course parameters specified within functions Predictions predict() can now ranked Forest plots now also plot posterior densities using ggdist::stat_halfeye() Neater outputs using print() summary() Wishart prior used model correlations within-study baseline effects different time-course parameters, addition relative effects different time-course parameters.","code":""},{"path":[]},{"path":"/news/index.html","id":"major-0-2-0","dir":"Changelog","previous_headings":"Bug fixes","what":"Major","title":"MBNMAtime 0.2.0","text":"Corrected calculation Bayesian p-value mb.nodesplit()","code":""},{"path":"/news/index.html","id":"mbnmatime-013","dir":"Changelog","previous_headings":"","what":"MBNMAtime 0.1.3","title":"MBNMAtime 0.1.3","text":"CRAN release: 2020-03-04","code":""},{"path":"/news/index.html","id":"additionschanges-0-1-3","dir":"Changelog","previous_headings":"","what":"Additions/changes","title":"MBNMAtime 0.1.3","text":"Added citation file plot.mb.network() now uses layout argument takes igraph layout function instead layout_in_circle (logical argument). allows igraph layout plotted rather just circle (e.g. igraph::as_star()) Objects returned plot.mb.network now specific igraph attributes assigned , can easily changed user. user.fun now takes formula argument (example ~ (beta.1 * dose) + (beta.2 * dose^2)) rather string. mb.network objects now stored within lists mb class objects easy reference data format","code":""},{"path":[]},{"path":"/news/index.html","id":"major-0-1-3","dir":"Changelog","previous_headings":"Bug fixes","what":"Major","title":"MBNMAtime 0.1.3","text":"Exponential function models working previously dose-response function rewritten runs model correctly. Ensured comparisons cycled correctly mb.nodesplit Ensured timeplot raw responses can plotted either arm (plotby=\"arm\") relative (plotby=\"rel\") effects.","code":""},{"path":"/news/index.html","id":"mbnmatime-012","dir":"Changelog","previous_headings":"","what":"MBNMAtime 0.1.2","title":"MBNMAtime 0.1.2","text":"CRAN release: 2019-10-28","code":""},{"path":"/news/index.html","id":"first-release-of-package-0-1-2","dir":"Changelog","previous_headings":"","what":"First release of package","title":"MBNMAtime 0.1.2","text":"Welcome MBNMAtime. Ready release world. hope can service ! dose-response MBNMA, also check sister package, MBNMAdose.","code":""}]
