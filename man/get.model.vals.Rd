% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.functions.R
\name{get.model.vals}
\alias{get.model.vals}
\title{#' Check if any relative effects are specified within time-course parameters in an mbnma model
#'
#' @inheritParams predict.mbnma
#'
#' @return A boolean object that takes \code{TRUE} if any time-course parameters specify relative effects and \code{FALSE} if not
#'
#' @noRd
check.betas <- function(mbnma) {
mbnma.betas <- vector()
for (i in 1:4) {
mbnma.betas <- append(mbnma.betas, mbnma[\link{"model.arg"}][\link{paste0("beta.", i)}]$pool)
}}
\usage{
get.model.vals(mbnma, E0 = 0, level = "treatments")
}
\arguments{
\item{mbnma}{An S3 object of class \code{"mbnma"} generated by running
a time-course MBNMA model}

\item{E0}{An object to indicate the value(s) to use for the response at time = 0
in the prediction. This can take a number of different formats depending
on how it will be used/calculated. The default is 0 but this may lead
to non-sensical predictions.
\itemize{
\item \code{numeric()} A single numeric value representing the deterministic response at time = 0
\item \code{formula()} A formula representing a stochastic distribution for the response
at time = 0. This is specified as a random number generator
(RNG) given as a string, and can take any RNG distribution for which a function exists
in R. For example: \code{~rnorm(n, 7, 0.5)}.
}}

\item{level}{Can take either \code{"treatment"} to make predictions for treatments, or \code{"class"} to make predictions for classes (in
which case \code{object} must be a class effect model).}
}
\value{
A list containing named elements that correspond to different
time-course parameters in \code{mbnma}. These elements contain MCMC results
either taken directly from \code{mbnma} or (in the case of random time-course
parameters specified as \code{method="random"}) randomly
generated using parameter values estimated in \code{mbnma}.

Additional elements contain the following values:
\itemize{
\item \code{timecourse} A character object that specifies the time-course used in \code{mbnma} in terms of
alpha, beta, mu, d and time. Consistency relative time-course parameters
are specified in terms of mu and d.
\item \code{time.params} A character vector
that indicates the different time-course parameters that are required for
the prediction
}

@noRd
}
\description{
if (any(mbnma.betas == "rel")) {
return(TRUE)
} else {return(FALSE)}
}
#' Get code parameter values from previous MBNMA result
#'
#' @inheritParams predict.mbnma
#'
#' @return A list with two elements:
#' * \code{timecourse} A character object that specifies the time-course used in \code{mbnma} (in terms of alpha, beta, and time)
#' * \code{beta.incl} A numeric vector that indicates the time-course parameters that were included in \code{mbnma}
#'
#' @noRd
init.predict <- function(mbnma) {
}
\section{Check betas are specified correctly and prepare format for subsequent functions}{
for (i in 1:4) {
betaname <- paste0("beta.", i)
if (!is.null(mbnma$model.arg[\link{betaname}])) {
assign(paste0(betaname, ".str"), compound.beta(mbnma$model.arg[\link{betaname}]))
} else if (is.null(mbnma$model.arg[\link{betaname}])) {
assign(paste0(betaname, ".str"), NULL)
}
}

timecourse <- time.fun(fun=mbnma$model.arg$fun, user.fun=mbnma$model.arg$user.fun, knots=mbnma$model.arg$knots,
alpha=mbnma$model.arg$alpha, beta.1=beta.1.str, beta.2=beta.2.str,
beta.3=beta.3.str, beta.4=beta.4.str)[\link{"relationship"}]
}

\section{Generate vector with indices of betas included in model}{

}

