% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write.jags.R
\name{mb.write}
\alias{mb.write}
\title{Write MBNMA time-course models JAGS code}
\usage{
mb.write(
  fun = tpoly(degree = 1),
  link = "identity",
  positive.scale = TRUE,
  intercept = TRUE,
  rho = NULL,
  covar = NULL,
  var.scale = NULL,
  class.effect = list(),
  UME = FALSE
)
}
\arguments{
\item{fun}{is a character specifying a functional form to be assigned to the
time-course. Options are given in \code{details}.}

\item{link}{Can take either \code{"identity"}, \code{"log"} (for modelling Ratios of Means \insertCite{friedrichROM}{MBNMAtime}) or
\code{"smd"} (for modelling Standardised Mean Differences).}

\item{positive.scale}{A boolean object that indicates whether all continuous
mean responses (y) are positive and therefore whether the baseline response
should be given a prior that constrains it to be positive.}

\item{intercept}{A boolean object that indicates whether an intercept is to
be included in the model. Can be used to imply whether mean responses in
data are change from baseline (\code{FALSE}) or not (setting it to \code{FALSE}
removes the intercept, \code{alpha}, from the model).}

\item{rho}{The correlation coefficient when modelling correlation between time points. The default is a string representing a
prior distribution indicating that it be estimated from the data (default: \code{rho="dunif(0,1)"}). If left
as \code{NULL} then this implies modelling no correlation between time points. Can also be assigned a numeric value
(e.g. \code{rho=0.7}), which fixes \code{rho} in the model to this value (e.g. for use in a deterministic sensitivity analysis).}

\item{covar}{A character specifying the covariance structure to use for modelling correlation between time-points. This can
be done by specifying one of the following:
\itemize{
\item \code{"varadj"} - a univariate likelihood with a variance adjustment to assume a constant correlation between subsequent
time points \insertCite{jansen2015}{MBNMAtime}. This is the default.
\item \code{"CS"} - a multivariate normal likelihood with a compound symmetry structure
\item \code{"AR1"} - a multivariate normal likelihood with an autogregressive AR1 structure
}}

\item{var.scale}{A numeric vector indicating the relative scale of variances between
correlated time-course parameters when relative effects are modelled on more than
one time-course parameter(see Details LINK). Each element of
the vector refers to the relative scale of each of the time-course parameters that is
modelled using relative effects.}

\item{class.effect}{A list of named strings that determines which time-course
parameters to model with a class effect and what that effect should be
(\code{"common"} or \code{"random"}). For example: \code{list("beta.2"="common", "beta.3"="random")}.}

\item{UME}{Can take either \code{TRUE} or \code{FALSE} (for an unrelated mean effects
model on all or no time-course parameters respectively) or can be a vector
of parameter name strings to model as UME. For example: \code{c("beta.1", "beta.2")}.}
}
\value{
A single long character string containing the JAGS model generated
based on the arguments passed to the function.
}
\description{
Writes JAGS code for a Bayesian time-course model for model-based network
meta-analysis (MBNMA).
}
\examples{
# Write a linear time-course MBNMA with random treatment effects on beta.1 and equal baselines
#in study arms
model <- mb.write(fun="linear", alpha="study", beta.1="rel.random")
cat(model) # Concatenates model representations making code more easily readable

# Write an emax time-course MBNMA with a Hill parameter of 0.5 with no intercept
model <- mb.write(fun="emax.hill",
  beta.1="rel.common", beta.2="const.common", beta.3=0.5,
  intercept=TRUE)
cat(model) # Concatenates model representations making code more easily readable

# Write an exponential time-course MBNMA that accounts for correlation between time points
model <- mb.write(fun="exponential",
  alpha="arm", beta.1="rel.common",
  rho="dunif(0,1)", covar="AR1")
cat(model)

# Define a user-defined time-course relationship for the MBNMA JAGS model
time.fun <- ~ alpha + (exp(beta.1 * time) / (beta.2 * time))
model <- mb.write(fun="user", user.fun=time.fun,
  beta.1="rel.random", beta.2="rel.common")
cat(model)
}
